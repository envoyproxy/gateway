apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "eg.fullname" . }}-certgen
  namespace: '{{ .Release.Namespace }}'
  labels:
  {{- include "eg.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
  {{- if .Values.certgen.job.annotations }}
    {{- toYaml .Values.certgen.job.annotations | nindent 4 -}}
  {{- end }}
spec:
  backoffLimit: 1
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: certgen
    spec:
      containers:
      - command:
        - envoy-gateway
        - certgen
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ include "eg.image" . }}
        imagePullPolicy: {{ .Values.deployment.envoyGateway.imagePullPolicy | default .Values.global.images.envoyGateway.pullPolicy}}
        name: envoy-gateway-certgen
        {{- with .Values.certgen.job.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.deployment.envoyGateway.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: {{ include "eg.fullname" . }}-certgen
  {{- if not ( kindIs "invalid" .Values.certgen.job.ttlSecondsAfterFinished) }}
  ttlSecondsAfterFinished: {{ .Values.certgen.job.ttlSecondsAfterFinished }}
  {{- end }}
