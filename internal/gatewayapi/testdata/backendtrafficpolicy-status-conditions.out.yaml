backendTrafficPolicies:
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: BackendTrafficPolicy
  metadata:
    creationTimestamp: null
    name: target-httproute-in-gateway-1
    namespace: envoy-gateway
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: httproute-1
      namespace: envoy-gateway
  status:
    conditions:
    - lastTransitionTime: null
      message: BackendTrafficPolicy has been accepted.
      reason: Accepted
      status: "True"
      type: Accepted
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: BackendTrafficPolicy
  metadata:
    creationTimestamp: null
    name: also-target-httproute-in-gateway-1
    namespace: envoy-gateway
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: httproute-1
      namespace: envoy-gateway
  status:
    conditions:
    - lastTransitionTime: null
      message: Unable to target HTTPRoute, another BackendTrafficPolicy has already
        attached to it
      reason: Conflicted
      status: "False"
      type: Accepted
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: BackendTrafficPolicy
  metadata:
    creationTimestamp: null
    name: target-grpcroute-in-gateway-2
    namespace: envoy-gateway
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: GRPCRoute
      name: grpcroute-1
      namespace: envoy-gateway
  status:
    conditions:
    - lastTransitionTime: null
      message: BackendTrafficPolicy has been accepted.
      reason: Accepted
      status: "True"
      type: Accepted
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: BackendTrafficPolicy
  metadata:
    creationTimestamp: null
    name: target-gateway-1
    namespace: envoy-gateway
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: Gateway
      name: gateway-1
      namespace: envoy-gateway
  status:
    conditions:
    - lastTransitionTime: null
      message: BackendTrafficPolicy has been accepted.
      reason: Accepted
      status: "True"
      type: Accepted
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: BackendTrafficPolicy
  metadata:
    creationTimestamp: null
    name: target-gateway-1-as-well
    namespace: envoy-gateway
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: Gateway
      name: gateway-1
      namespace: envoy-gateway
  status:
    conditions:
    - lastTransitionTime: null
      message: Unable to target Gateway, another BackendTrafficPolicy has already
        attached to it
      reason: Conflicted
      status: "False"
      type: Accepted
gateways:
- apiVersion: gateway.networking.k8s.io/v1beta1
  kind: Gateway
  metadata:
    creationTimestamp: null
    name: gateway-1
    namespace: envoy-gateway
  spec:
    gatewayClassName: envoy-gateway-class
    infrastructure: {}
    listeners:
    - allowedRoutes:
        namespaces:
          from: Same
      name: http
      port: 80
      protocol: HTTP
  status:
    listeners:
    - attachedRoutes: 1
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: http
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
- apiVersion: gateway.networking.k8s.io/v1beta1
  kind: Gateway
  metadata:
    creationTimestamp: null
    name: gateway-2
    namespace: envoy-gateway
  spec:
    gatewayClassName: envoy-gateway-class
    infrastructure: {}
    listeners:
    - allowedRoutes:
        namespaces:
          from: Same
      name: http
      port: 80
      protocol: HTTP
    - allowedRoutes:
        namespaces:
          from: Same
      name: https
      port: 443
      protocol: HTTPS
    - allowedRoutes:
        namespaces:
          from: Same
      name: tcp
      port: 53
      protocol: TCP
  status:
    listeners:
    - attachedRoutes: 1
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: http
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
    - attachedRoutes: 1
      conditions:
      - lastTransitionTime: null
        message: Listener must have TLS set when protocol is HTTPS.
        reason: Invalid
        status: "False"
        type: Programmed
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: https
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
    - attachedRoutes: 0
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: tcp
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: TCPRoute
grpcRoutes:
- apiVersion: gateway.networking.k8s.io/v1alpha2
  kind: GRPCRoute
  metadata:
    creationTimestamp: null
    name: grpcroute-1
    namespace: envoy-gateway
  spec:
    parentRefs:
    - name: gateway-2
      namespace: envoy-gateway
    rules:
    - backendRefs:
      - name: service-1
        port: 8080
      matches:
      - headers:
        - name: magic
          type: Exact
          value: foo
  status:
    parents:
    - conditions:
      - lastTransitionTime: null
        message: Route is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Service envoy-gateway/service-1 not found
        reason: BackendNotFound
        status: "False"
        type: ResolvedRefs
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
      parentRef:
        name: gateway-2
        namespace: envoy-gateway
httpRoutes:
- apiVersion: gateway.networking.k8s.io/v1beta1
  kind: HTTPRoute
  metadata:
    creationTimestamp: null
    name: httproute-1
    namespace: envoy-gateway
  spec:
    parentRefs:
    - name: gateway-1
      namespace: envoy-gateway
    rules:
    - backendRefs:
      - name: service-1
        port: 8080
      matches:
      - path:
          value: /
  status:
    parents:
    - conditions:
      - lastTransitionTime: null
        message: Route is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Service envoy-gateway/service-1 not found
        reason: BackendNotFound
        status: "False"
        type: ResolvedRefs
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
      parentRef:
        name: gateway-1
        namespace: envoy-gateway
infraIR:
  envoy-gateway/gateway-1:
    proxy:
      listeners:
      - address: ""
        ports:
        - containerPort: 10080
          name: http
          protocol: HTTP
          servicePort: 80
      metadata:
        labels:
          gateway.envoyproxy.io/owning-gateway-name: gateway-1
          gateway.envoyproxy.io/owning-gateway-namespace: envoy-gateway
      name: envoy-gateway/gateway-1
  envoy-gateway/gateway-2:
    proxy:
      listeners:
      - address: ""
        ports:
        - containerPort: 10080
          name: http
          protocol: HTTP
          servicePort: 80
        - containerPort: 10053
          name: tcp
          protocol: TCP
          servicePort: 53
      metadata:
        labels:
          gateway.envoyproxy.io/owning-gateway-name: gateway-2
          gateway.envoyproxy.io/owning-gateway-namespace: envoy-gateway
      name: envoy-gateway/gateway-2
xdsIR:
  envoy-gateway/gateway-1:
    accessLog:
      text:
      - path: /dev/stdout
    http:
    - address: 0.0.0.0
      hostnames:
      - '*'
      isHTTP2: false
      name: envoy-gateway/gateway-1/http
      port: 10080
      routes:
      - backendWeights:
          invalid: 1
          valid: 0
        directResponse:
          statusCode: 500
        hostname: '*'
        name: httproute/envoy-gateway/httproute-1/rule/0/match/0/*
        pathMatch:
          distinct: false
          name: ""
          prefix: /
  envoy-gateway/gateway-2:
    accessLog:
      text:
      - path: /dev/stdout
    http:
    - address: 0.0.0.0
      hostnames:
      - '*'
      isHTTP2: true
      name: envoy-gateway/gateway-2/http
      port: 10080
      routes:
      - backendWeights:
          invalid: 1
          valid: 0
        directResponse:
          statusCode: 500
        headerMatches:
        - distinct: false
          exact: foo
          name: magic
        hostname: '*'
        name: grpcroute/envoy-gateway/grpcroute-1/rule/0/match/0/*
