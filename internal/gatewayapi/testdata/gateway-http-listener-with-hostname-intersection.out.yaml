gateways:
- apiVersion: gateway.networking.k8s.io/v1
  kind: Gateway
  metadata:
    creationTimestamp: null
    name: gateway-1
    namespace: envoy-gateway
  spec:
    gatewayClassName: envoy-gateway-class
    listeners:
    - allowedRoutes:
        namespaces:
          from: All
      name: empty-hostname
      port: 80
      protocol: HTTP
    - allowedRoutes:
        namespaces:
          from: All
      hostname: '*.example.com'
      name: wildcard-example-com
      port: 80
      protocol: HTTP
  status:
    listeners:
    - attachedRoutes: 1
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: empty-hostname
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
    - attachedRoutes: 1
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: wildcard-example-com
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
httpRoutes:
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    creationTimestamp: null
    name: httproute-1
    namespace: envoy-gateway
  spec:
    hostnames:
    - bar.com
    - '*.example.com'
    parentRefs:
    - name: gateway-1
      namespace: envoy-gateway
      sectionName: empty-hostname
    rules:
    - backendRefs:
      - name: service-1
        port: 8080
      matches:
      - path:
          type: PathPrefix
          value: /empty-hostname
  status:
    parents:
    - conditions:
      - lastTransitionTime: null
        message: Route is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Service envoy-gateway/service-1 not found
        reason: BackendNotFound
        status: "False"
        type: ResolvedRefs
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
      parentRef:
        name: gateway-1
        namespace: envoy-gateway
        sectionName: empty-hostname
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    creationTimestamp: null
    name: httproute-2
    namespace: envoy-gateway
  spec:
    hostnames:
    - bar.com
    - '*.example.com'
    parentRefs:
    - name: gateway-1
      namespace: envoy-gateway
      sectionName: wildcard-example-com
    rules:
    - backendRefs:
      - name: service-1
        port: 8080
      matches:
      - path:
          type: PathPrefix
          value: /wildcard-example-com
  status:
    parents:
    - conditions:
      - lastTransitionTime: null
        message: Route is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Service envoy-gateway/service-1 not found
        reason: BackendNotFound
        status: "False"
        type: ResolvedRefs
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
      parentRef:
        name: gateway-1
        namespace: envoy-gateway
        sectionName: wildcard-example-com
infraIR:
  envoy-gateway/gateway-1:
    proxy:
      listeners:
      - address: null
        name: envoy-gateway/gateway-1/empty-hostname
        ports:
        - containerPort: 10080
          name: http-80
          protocol: HTTP
          servicePort: 80
      metadata:
        labels:
          gateway.envoyproxy.io/owning-gateway-name: gateway-1
          gateway.envoyproxy.io/owning-gateway-namespace: envoy-gateway
      name: envoy-gateway/gateway-1
xdsIR:
  envoy-gateway/gateway-1:
    accessLog:
      text:
      - path: /dev/stdout
    http:
    - address: 0.0.0.0
      hostnames:
      - '*'
      isHTTP2: false
      metadata:
        kind: Gateway
        name: gateway-1
        namespace: envoy-gateway
        sectionName: empty-hostname
      name: envoy-gateway/gateway-1/empty-hostname
      path:
        escapedSlashesAction: UnescapeAndRedirect
        mergeSlashes: true
      port: 10080
      routes:
      - destination:
          name: httproute/envoy-gateway/httproute-1/rule/0
          settings:
          - weight: 1
        directResponse:
          statusCode: 500
        hostname: bar.com
        isHTTP2: false
        metadata:
          kind: HTTPRoute
          name: httproute-1
          namespace: envoy-gateway
        name: httproute/envoy-gateway/httproute-1/rule/0/match/0/bar_com
        pathMatch:
          distinct: false
          name: ""
          prefix: /empty-hostname
    - address: 0.0.0.0
      hostnames:
      - '*.example.com'
      isHTTP2: false
      metadata:
        kind: Gateway
        name: gateway-1
        namespace: envoy-gateway
        sectionName: wildcard-example-com
      name: envoy-gateway/gateway-1/wildcard-example-com
      path:
        escapedSlashesAction: UnescapeAndRedirect
        mergeSlashes: true
      port: 10080
      routes:
      - destination:
          name: httproute/envoy-gateway/httproute-2/rule/0
          settings:
          - weight: 1
        directResponse:
          statusCode: 500
        hostname: '*.example.com'
        isHTTP2: false
        metadata:
          kind: HTTPRoute
          name: httproute-2
          namespace: envoy-gateway
        name: httproute/envoy-gateway/httproute-2/rule/0/match/0/*_example_com
        pathMatch:
          distinct: false
          name: ""
          prefix: /wildcard-example-com
