- ignorePortInHostMatching: true
  name: first-listener
  virtualHosts:
  - domains:
    - '*'
    name: first-listener/*
    routes:
    - match:
        path: foo/bar
      name: first-route
      route:
        cluster: first-route-dest
        rateLimits:
        - actions:
          - genericKey:
              descriptorKey: first-route
              descriptorValue: test-namespace/test-policy-1
          - headerValueMatch:
              descriptorKey: rule-0-match-0
              descriptorValue: rule-0-match-0
              expectMatch: true
              headers:
              - name: x-user-id
                stringMatch:
                  exact: one
        upgradeConfigs:
        - upgradeType: websocket
    - match:
        path: example
      name: second-route
      route:
        cluster: second-route-dest
        rateLimits:
        - actions:
          - genericKey:
              descriptorKey: second-route
              descriptorValue: test-namespace/test-policy-2
          - requestHeaders:
              descriptorKey: rule-0-match-0
              headerName: x-user-id
        upgradeConfigs:
        - upgradeType: websocket
    - match:
        path: test
      name: third-route
      route:
        cluster: third-route-dest
        rateLimits:
        - actions:
          - genericKey:
              descriptorKey: third-route
              descriptorValue: test-namespace/test-policy-3
          - genericKey:
              descriptorKey: rule-0-match--1
              descriptorValue: rule-0-match--1
        upgradeConfigs:
        - upgradeType: websocket
    - match:
        path: foo/bar/login
      name: fourth-route
      route:
        cluster: fourth-route-dest
        rateLimits:
        - actions:
          - genericKey:
              descriptorKey: fourth-route
              descriptorValue: test-namespace/test-policy-4
          - headerValueMatch:
              descriptorKey: rule-0-match-0
              descriptorValue: rule-0-match-0
              expectMatch: false
              headers:
              - name: x-org-id
                stringMatch:
                  exact: admin
        upgradeConfigs:
        - upgradeType: websocket
    - match:
        path: foo/bar
      name: req-and-resp-cost
      route:
        cluster: first-route-dest
        upgradeConfigs:
        - upgradeType: websocket
      typedPerFilterConfig:
        envoy.filters.http.ratelimit:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
          rateLimits:
          - actions:
            - genericKey:
                descriptorKey: req-and-resp-cost
                descriptorValue: test-namespace/test-policy-5
            - headerValueMatch:
                descriptorKey: rule-0-match-0
                descriptorValue: rule-0-match-0
                expectMatch: true
                headers:
                - name: x-user-id
                  stringMatch:
                    exact: one
            hitsAddend:
              number: "12345"
          - actions:
            - genericKey:
                descriptorKey: req-and-resp-cost
                descriptorValue: test-namespace/test-policy-5
            - headerValueMatch:
                descriptorKey: rule-0-match-0
                descriptorValue: rule-0-match-0
                expectMatch: true
                headers:
                - name: x-user-id
                  stringMatch:
                    exact: one
            applyOnStreamDone: true
            hitsAddend:
              format: '%DYNAMIC_METADATA(something.com:key)%'
    - match:
        path: test
      name: req-cost
      route:
        cluster: third-route-dest
        upgradeConfigs:
        - upgradeType: websocket
      typedPerFilterConfig:
        envoy.filters.http.ratelimit:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
          rateLimits:
          - actions:
            - genericKey:
                descriptorKey: req-cost
                descriptorValue: test-namespace/test-policy-6
            - genericKey:
                descriptorKey: rule-0-match--1
                descriptorValue: rule-0-match--1
            hitsAddend:
              number: "12345"
    - match:
        path: foo/bar/login
      name: res-cost
      route:
        cluster: fourth-route-dest
        upgradeConfigs:
        - upgradeType: websocket
      typedPerFilterConfig:
        envoy.filters.http.ratelimit:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
          rateLimits:
          - actions:
            - genericKey:
                descriptorKey: res-cost
                descriptorValue: test-namespace/test-policy-7
            - headerValueMatch:
                descriptorKey: rule-0-match-0
                descriptorValue: rule-0-match-0
                expectMatch: false
                headers:
                - name: x-org-id
                  stringMatch:
                    exact: admin
          - actions:
            - genericKey:
                descriptorKey: res-cost
                descriptorValue: test-namespace/test-policy-7
            - headerValueMatch:
                descriptorKey: rule-0-match-0
                descriptorValue: rule-0-match-0
                expectMatch: false
                headers:
                - name: x-org-id
                  stringMatch:
                    exact: admin
            applyOnStreamDone: true
            hitsAddend:
              format: '%DYNAMIC_METADATA(something.com:key)%'
