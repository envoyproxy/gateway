gateways:
- apiVersion: gateway.networking.k8s.io/v1
  kind: Gateway
  metadata:
    namespace: envoy-gateway
    name: gateway-1
  spec:
    gatewayClassName: envoy-gateway-class
    listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
httpRoutes:
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    namespace: default
    name: httproute-1
  spec:
    hostnames:
    - gateway.envoyproxy.io
    parentRefs:
    - namespace: envoy-gateway
      name: gateway-1
      sectionName: http
    rules:
    - matches:
      - path:
          value: "/foo"
      backendRefs:
      - name: service-1
        port: 8080
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    namespace: default
    name: httproute-2
  spec:
    hostnames:
    - gateway.envoyproxy.io
    parentRefs:
    - namespace: envoy-gateway
      name: gateway-1
      sectionName: http
    rules:
    - matches:
      - path:
          value: "/bar"
      backendRefs:
      - name: service-1
        port: 8080
securityPolicies:
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: SecurityPolicy
  metadata:
    namespace: envoy-gateway
    name: policy-for-gateway  # This policy should attach httproute-2
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: Gateway
      name: gateway-1
    jwt:
      providers:
      - name: example1
        issuer: https://one.example.com
        audiences:
        - one.foo.com
        remoteJWKS:
          uri: https://one.example.com/jwt/public-key/jwks.json
        claimToHeaders:
        - header: one-route-example-key
          claim: claim1
    oidc:
      provider:
        issuer: "https://accounts.google.com"
      clientID: "client1.apps.googleusercontent.com"
      clientSecret:
        name: "client1-secret"
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: SecurityPolicy
  metadata:
    namespace: default
    name: policy-for-http-route  # This policy should attach httproute-2
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: httproute-2
    jwt:
      providers:
      - name: example2
        issuer: https://two.example.com
        audiences:
        - two.foo.com
        remoteJWKS:
          uri: https://one.example.com/jwt/public-key/jwks.json
        claimToHeaders:
        - header: one-route-example-key
          claim: claim2
    oidc:
      provider:
        issuer: "https://accounts.google.com"
      clientID: "client1.apps.googleusercontent.com"
      clientSecret:
        name: "client2-secret"
