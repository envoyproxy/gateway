configmaps:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: cm-policy-for-gateway
    namespace: envoy-gateway
  data:
    lua: |
      function envoy_on_request(request_handle)
      request_handle:logInfo('Goodbye.')
      end
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: cm-policy-for-http-route
    namespace: default
  data:
    lua: |
      function envoy_on_response(response_handle)
      response_handle:logWarn('Goodbye.')
      end
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: cm-policy-for-http-route-no-key
    namespace: default
  data:
    key: |
      function envoy_on_response(response_handle)
      response_handle:logWarn('Goodbye.')
      end
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: cm-policy-for-http-route-empty
    namespace: default
  data: {}
gateways:
- apiVersion: gateway.networking.k8s.io/v1
  kind: Gateway
  metadata:
    namespace: envoy-gateway
    name: gateway-1
  spec:
    gatewayClassName: envoy-gateway-class
    listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
httpRoutes:
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    namespace: default
    name: httproute-1
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - namespace: envoy-gateway
      name: gateway-1
      sectionName: http
    rules:
    - matches:
      - path:
          value: "/foo"
      backendRefs:
      - name: service-1
        port: 8080
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    namespace: default
    name: httproute-2
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - namespace: envoy-gateway
      name: gateway-1
      sectionName: http
    rules:
    - matches:
      - path:
          value: "/bar"
      backendRefs:
      - name: service-1
        port: 8080
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    namespace: default
    name: httproute-3
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - namespace: envoy-gateway
      name: gateway-1
      sectionName: http
    rules:
    - matches:
      - path:
          value: "/bar3"
      backendRefs:
      - name: service-1
        port: 8080
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    namespace: default
    name: httproute-4
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - namespace: envoy-gateway
      name: gateway-1
      sectionName: http
    rules:
    - matches:
      - path:
          value: "/bar4"
      backendRefs:
      - name: service-1
        port: 8080
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    namespace: default
    name: httproute-5
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - namespace: envoy-gateway
      name: gateway-1
      sectionName: http
    rules:
    - matches:
      - path:
          value: "/bar5"
      backendRefs:
      - name: service-1
        port: 8080
envoyextensionpolicies:
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: EnvoyExtensionPolicy
  metadata:
    namespace: envoy-gateway
    name: policy-for-gateway  # This policy should attach httproute-2
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: Gateway
      name: gateway-1
    lua:
    - type: ValueRef
      valueRef:
        name: cm-policy-for-gateway
        kind: ConfigMap
        group: v1
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: EnvoyExtensionPolicy
  metadata:
    namespace: default
    name: policy-for-http-route   # This policy should attach httproute-1
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: httproute-1
    lua:
    - type: ValueRef
      valueRef:
        name: cm-policy-for-http-route
        kind: ConfigMap
        group: v1
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: EnvoyExtensionPolicy
  metadata:
    namespace: default
    name: policy-for-http-route-4
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: httproute-3
    lua:
    - type: ValueRef
      valueRef:
        name: cm-policy-for-http-route-no-exist
        kind: ConfigMap
        group: v1
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: EnvoyExtensionPolicy
  metadata:
    namespace: default
    name: policy-for-http-route-4
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: httproute-4
    lua:
    - type: ValueRef
      valueRef:
        name: cm-policy-for-http-route-no-key
        kind: ConfigMap
        group: v1
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: EnvoyExtensionPolicy
  metadata:
    namespace: default
    name: policy-for-http-route-5
  spec:
    targetRef:
      group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: httproute-5
    lua:
    - type: ValueRef
      valueRef:
        name: cm-policy-for-http-route-empty
        kind: ConfigMap
        group: v1
