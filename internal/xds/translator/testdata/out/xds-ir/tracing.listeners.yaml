- address:
    socketAddress:
      address: 0.0.0.0
      portValue: 10080
  defaultFilterChain:
    filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        commonHttpProtocolOptions:
          headersWithUnderscoresAction: REJECT_REQUEST
        http2ProtocolOptions:
          initialConnectionWindowSize: 1048576
          initialStreamWindowSize: 65536
          maxConcurrentStreams: 100
        httpFilters:
        - name: envoy.filters.http.lua
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            inlineCode: "\n\t\tfunction envoy_on_response(response_handle)\n\t\t\t--
              Get status and error message information\n\t\t\tlocal grpc_message =
              response_handle:headers():get(\"grpc-message\")\n\t\t\tlocal grpc_status
              = response_handle:headers():get(\"grpc-status\")\n\t\t\tlocal status_code
              = tonumber(response_handle:headers():get(\":status\"))\n\n\t\t\t-- Only
              handle status codes greater than 300\n\t\t\tif status_code < 300 then\n\t\t\t\treturn\n\t\t\tend\n\n\t\t\t--
              Check if the response has a body\n\t\t\tlocal body_handle = response_handle:body()\n\t\t\tif
              not body_handle then\n\t\t\t\treturn\n\t\t\tend\n\n\t\t\tlocal body_size
              = body_handle:length()\n\t\t\tlocal body_bytes = body_handle:getBytes(0,
              body_size)\n\n\t\t\t-- Convert body_bytes to string\n\t\t\tlocal raw_json_text
              = tostring(body_bytes)\n\n\t\t\tlocal modified_json_text = string.gsub(raw_json_text,
              '\"code\":%s*%d+', '\"code\": ' .. status_code)\n\n\t\t\tlocal content_length
              = body_handle:setBytes(modified_json_text)\n\n\t\t\t-- Modify the response
              header\n\t\t\tresponse_handle:headers():replace(\"content-length\",
              content_length)\n\t\tend\n        "
        - name: envoy.filters.http.health_check
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
            headers:
            - exactMatch: /status
              name: :path
            passThroughMode: false
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        pathWithEscapedSlashesAction: UNESCAPE_AND_REDIRECT
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: first-listener
        statPrefix: http
        tracing:
          clientSampling:
            value: 100
          customTags:
          - environment:
              defaultValue: '-'
              name: env1
            tag: env1
          - literal:
              value: value1
            tag: literal1
          - requestHeader:
              defaultValue: '-'
              name: X-Request-Id
            tag: req1
          overallSampling:
            value: 100
          provider:
            name: envoy.tracers.opentelemetry
            typedConfig:
              '@type': type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
              grpcService:
                envoyGrpc:
                  authority: otel-collector.monitoring.svc.cluster.local
                  clusterName: tracing|otel-collector.monitoring.svc.cluster.local|4317
          randomSampling:
            value: 90
        upgradeConfigs:
        - upgradeType: websocket
        useRemoteAddress: true
  name: first-listener
  perConnectionBufferLimitBytes: 32768
