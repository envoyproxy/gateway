apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: envoy
    app.kubernetes.io/component: proxy
    app.kubernetes.io/managed-by: envoy-gateway
    gateway.envoyproxy.io/owning-gateway-name: default
    gateway.envoyproxy.io/owning-gateway-namespace: default
  name: envoy-default-37a8eec1
  namespace: envoy-gateway-system
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: envoy
      app.kubernetes.io/component: proxy
      app.kubernetes.io/managed-by: envoy-gateway
      gateway.envoyproxy.io/owning-gateway-name: default
      gateway.envoyproxy.io/owning-gateway-namespace: default
  template:
    metadata:
      labels:
        app.kubernetes.io/name: envoy
        app.kubernetes.io/component: proxy
        app.kubernetes.io/managed-by: envoy-gateway
        gateway.envoyproxy.io/owning-gateway-name: default
        gateway.envoyproxy.io/owning-gateway-namespace: default
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - --service-cluster default
            - --service-node $(ENVOY_POD_NAME)
            - --config-yaml test bootstrap config
            - --log-level warn
            - --cpuset-threads
            - --concurrency 4
          command:
            - envoy
          env:
            - name: ENVOY_GATEWAY_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ENVOY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: envoyproxy/envoy-dev:latest
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - |-
                    function :: {
                      echo "[$(date -u '+%Y-%m-%d %H:%M:%S.%3N')][$$][info][PreStop] $@"
                    }
                    function total_connections {
                      exec 3<>/dev/tcp/127.0.0.1/19000
                      echo -e "GET /stats?filter=^server\.total_connections$&format=text HTTP/1.1\nHost: 127.0.0.1\nConnection: close\n" >&3
                      cat <&3 | grep '^server\.total_connections:' | awk '{print $2}'
                    }
                    {
                      PID=$(pidof envoy)
                      START_SECONDS=$(date +%s)
                      DRAIN_TIMEOUT=600
                      MIN_DRAIN_PERIOD=15
                      ALLOWED_TO_EXIT=0

                      :: "initiating graceful drain with $MIN_DRAIN_PERIOD second minimum drain period and $DRAIN_TIMEOUT second timeout"
                      echo -e "POST /drain_listeners?graceful&skip_exit HTTP/1.1\nHost: 127.0.0.1\nConnection: close\n" >/dev/tcp/127.0.0.1/19000

                      while ps -p "$PID" >/dev/null; do
                        ELAPSED_SECONDS=$(($(date +%s) - $START_SECONDS))
                        TOTAL_CONNECTIONS=$(total_connections)
                        :: "total connections: $TOTAL_CONNECTIONS"

                        if [[ $ELAPSED_SECONDS -gt $MIN_DRAIN_PERIOD ]] && [[ $ALLOWED_TO_EXIT -eq 0 ]]; then
                          :: "minimum drain period reached; allowed to exit when total connections reaches zero"
                          ALLOWED_TO_EXIT=1
                        fi

                        if [[ $ELAPSED_SECONDS -gt $DRAIN_TIMEOUT ]]; then
                          :: "graceful drain sequence timeout exceeded"
                          exit
                        elif [[ $ALLOWED_TO_EXIT -eq 1 ]] && [[ $TOTAL_CONNECTIONS -eq 0 ]]; then
                          exit
                        else
                          sleep 1
                        fi
                      done
                    } 1>/proc/1/fd/1 2>/proc/1/fd/2
          name: envoy
          ports:
            - containerPort: 8080
              name: EnvoyH-d76a15e2
              protocol: TCP
            - containerPort: 8443
              name: EnvoyH-6658f727
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /ready
              port: 19001
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /certs
              name: certs
              readOnly: true
            - mountPath: /sds
              name: sds
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: envoy-default-37a8eec1
      terminationGracePeriodSeconds: 900
      volumes:
        - name: certs
          secret:
            secretName: envoy
            defaultMode: 420
        - configMap:
            defaultMode: 420
            items:
              - key: xds-trusted-ca.json
                path: xds-trusted-ca.json
              - key: xds-certificate.json
                path: xds-certificate.json
            name: envoy-default-37a8eec1
            optional: false
          name: sds
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
