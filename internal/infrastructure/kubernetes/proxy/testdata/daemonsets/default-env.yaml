apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: proxy
    app.kubernetes.io/managed-by: envoy-gateway
    app.kubernetes.io/name: envoy
    gateway.envoyproxy.io/owning-gateway-name: default
    gateway.envoyproxy.io/owning-gateway-namespace: default
  name: envoy-default-37a8eec1
  namespace: envoy-gateway-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: proxy
      app.kubernetes.io/managed-by: envoy-gateway
      app.kubernetes.io/name: envoy
      gateway.envoyproxy.io/owning-gateway-name: default
      gateway.envoyproxy.io/owning-gateway-namespace: default
  template:
    metadata:
      annotations:
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "19001"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: proxy
        app.kubernetes.io/managed-by: envoy-gateway
        app.kubernetes.io/name: envoy
        gateway.envoyproxy.io/owning-gateway-name: default
        gateway.envoyproxy.io/owning-gateway-namespace: default
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --service-cluster default
        - --service-node $(ENVOY_POD_NAME)
        - |
          --config-yaml admin:
            access_log:
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /dev/null
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 19000
          layered_runtime:
            layers:
            - name: global_config
              static_layer:
                envoy.restart_features.use_eds_cache_for_ads: true
                re2.max_program_size.error_level: 4294967295
                re2.max_program_size.warn_level: 1000
          dynamic_resources:
            ads_config:
              api_type: DELTA_GRPC
              transport_api_version: V3
              grpc_services:
              - envoy_grpc:
                  cluster_name: xds_cluster
              set_node_on_first_message_only: true
            lds_config:
              ads: {}
              resource_api_version: V3
            cds_config:
              ads: {}
              resource_api_version: V3
          static_resources:
            listeners:
            - name: envoy-gateway-proxy-ready-0.0.0.0-19001
              address:
                socket_address:
                  address: 0.0.0.0
                  port_value: 19001
                  protocol: TCP
              filter_chains:
              - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: eg-ready-http
                    route_config:
                      name: local_route
                      virtual_hosts:
                      - name: prometheus_stats
                        domains:
                        - "*"
                        routes:
                        - match:
                            prefix: /stats/prometheus
                          route:
                            cluster: prometheus_stats
                    http_filters:
                    - name: envoy.filters.http.health_check
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                        pass_through_mode: false
                        headers:
                        - name: ":path"
                          string_match:
                            exact: /ready
                    - name: envoy.filters.http.router
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            clusters:
            - name: prometheus_stats
              connect_timeout: 0.250s
              type: STATIC
              lb_policy: ROUND_ROBIN
              load_assignment:
                cluster_name: prometheus_stats
                endpoints:
                - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 19000
            - connect_timeout: 10s
              load_assignment:
                cluster_name: xds_cluster
                endpoints:
                - load_balancing_weight: 1
                  lb_endpoints:
                  - load_balancing_weight: 1
                    endpoint:
                      address:
                        socket_address:
                          address: envoy-gateway
                          port_value: 18000
              typed_extension_protocol_options:
                envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
                  "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions"
                  explicit_http_config:
                    http2_protocol_options:
                      connection_keepalive:
                        interval: 30s
                        timeout: 5s
              name: xds_cluster
              type: STRICT_DNS
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
                  common_tls_context:
                    tls_params:
                      tls_maximum_protocol_version: TLSv1_3
                    tls_certificate_sds_secret_configs:
                    - name: xds_certificate
                      sds_config:
                        path_config_source:
                          path: "/sds/xds-certificate.json"
                        resource_api_version: V3
                    validation_context_sds_secret_config:
                      name: xds_trusted_ca
                      sds_config:
                        path_config_source:
                          path: "/sds/xds-trusted-ca.json"
                        resource_api_version: V3
            - name: wasm_cluster
              type: STRICT_DNS
              connect_timeout: 10s
              load_assignment:
                cluster_name: wasm_cluster
                endpoints:
                - load_balancing_weight: 1
                  lb_endpoints:
                  - load_balancing_weight: 1
                    endpoint:
                      address:
                        socket_address:
                          address: envoy-gateway
                          port_value: 18002
              typed_extension_protocol_options:
                envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
                  "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions"
                  explicit_http_config:
                    http2_protocol_options: {}
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
                  common_tls_context:
                    tls_params:
                      tls_maximum_protocol_version: TLSv1_3
                    tls_certificate_sds_secret_configs:
                    - name: xds_certificate
                      sds_config:
                        path_config_source:
                          path: "/sds/xds-certificate.json"
                        resource_api_version: V3
                    validation_context_sds_secret_config:
                      name: xds_trusted_ca
                      sds_config:
                        path_config_source:
                          path: "/sds/xds-trusted-ca.json"
                        resource_api_version: V3
          overload_manager:
            refresh_interval: 0.25s
            resource_monitors:
            - name: "envoy.resource_monitors.global_downstream_max_connections"
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
                max_active_downstream_connections: 50000
            - name: "envoy.resource_monitors.fixed_heap"
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig
                max_heap_size_bytes: 1717986918
            actions:
            - name: "envoy.overload_actions.shrink_heap"
              triggers:
              - name: "envoy.resource_monitors.fixed_heap"
                threshold:
                  value: 0.95
            - name: "envoy.overload_actions.stop_accepting_requests"
              triggers:
              - name: "envoy.resource_monitors.fixed_heap"
                threshold:
                  value: 0.98
        - --log-level warn
        - --cpuset-threads
        command:
        - envoy
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: envoyproxy/envoy:v1.2.3
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            httpGet:
              path: /shutdown/ready
              port: 19002
              scheme: HTTP
        name: envoy
        ports:
        - containerPort: 8080
          name: EnvoyHTTPPort
          protocol: TCP
        - containerPort: 8443
          name: EnvoyHTTPSPort
          protocol: TCP
        - containerPort: 19001
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 19001
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 400m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 1Gi
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /ready
            port: 19001
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /certs
          name: certs
          readOnly: true
        - mountPath: /sds
          name: sds
      - args:
        - envoy
        - shutdown-manager
        command:
        - envoy-gateway
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: envoyproxy/gateway-dev:latest
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - envoy-gateway
              - envoy
              - shutdown
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 19002
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: shutdown-manager
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 19002
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz
            port: 19002
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 1000
      serviceAccountName: envoy-default-37a8eec1
      terminationGracePeriodSeconds: 900
      volumes:
      - name: certs
        secret:
          defaultMode: 420
          secretName: envoy
      - configMap:
          defaultMode: 420
          items:
          - key: xds-trusted-ca.json
            path: xds-trusted-ca.json
          - key: xds-certificate.json
            path: xds-certificate.json
          name: envoy-default-37a8eec1
          optional: false
        name: sds
  updateStrategy:
    type: RollingUpdate
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
