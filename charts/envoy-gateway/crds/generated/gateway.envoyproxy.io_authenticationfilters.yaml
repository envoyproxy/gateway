---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: authenticationfilters.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: AuthenticationFilter
    listKind: AuthenticationFilterList
    plural: authenticationfilters
    singular: authenticationfilter
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of the AuthenticationFilter
              type.
            properties:
              jwtProviders:
                description: JWT defines the JSON Web Token (JWT) authentication provider
                  type. When multiple jwtProviders are specified, the JWT is considered
                  valid if any of the providers successfully validate the JWT. For
                  additional details, see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html.
                items:
                  description: 'JwtAuthenticationFilterProvider defines the JSON Web
                    Token (JWT) authentication provider type and how JWTs should be
                    verified:'
                  properties:
                    audiences:
                      description: Audiences is a list of JWT audiences allowed access.
                        For additional details, see https://tools.ietf.org/html/rfc7519#section-4.1.3.
                        If not provided, JWT audiences are not checked.
                      items:
                        type: string
                      maxItems: 8
                      type: array
                    claimToHeaders:
                      description: 'ClaimToHeaders is a list of JWT claims that must
                        be extracted into HTTP request headers For examples, following
                        config: The claim must be of type; string, int, double, bool.
                        Array type claims are not supported'
                      items:
                        description: ClaimToHeader defines a configuration to convert
                          JWT claims into HTTP headers
                        properties:
                          claim:
                            description: 'Claim is the JWT Claim that should be saved
                              into the header : it can be a nested claim of type (eg.
                              "claim.nested.key", "sub"). The nested claim name must
                              use dot "." to separate the JSON name path.'
                            type: string
                          header:
                            description: Header defines the name of the HTTP request
                              header that the JWT Claim will be saved into.
                            type: string
                        required:
                        - claim
                        - header
                        type: object
                      type: array
                    issuer:
                      description: Issuer is the principal that issued the JWT and
                        takes the form of a URL or email address. For additional details,
                        see https://tools.ietf.org/html/rfc7519#section-4.1.1 for
                        URL format and https://rfc-editor.org/rfc/rfc5322.html for
                        email format. If not provided, the JWT issuer is not checked.
                      maxLength: 253
                      type: string
                    name:
                      description: Name defines a unique name for the JWT provider.
                        A name can have a variety of forms, including RFC1123 subdomains,
                        RFC 1123 labels, or RFC 1035 labels.
                      maxLength: 253
                      minLength: 1
                      type: string
                    remoteJWKS:
                      description: RemoteJWKS defines how to fetch and cache JSON
                        Web Key Sets (JWKS) from a remote HTTP/HTTPS endpoint.
                      properties:
                        uri:
                          description: URI is the HTTPS URI to fetch the JWKS. Envoy's
                            system trust bundle is used to validate the server certificate.
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                      - uri
                      type: object
                  required:
                  - name
                  - remoteJWKS
                  type: object
                maxItems: 4
                type: array
              oidcProvider:
                description: OIDCProvider defines the OpenID Connect (OIDC) authentication
                  provider type.
                properties:
                  clientId:
                    description: The OIDC client ID assigned to the filter to be used
                      in the [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                    minLength: 1
                    type: string
                  clientSecret:
                    description: The Kubernetes secret which contains the OIDC client
                      secret assigned to the filter to be used in the [Authentication
                      Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                    properties:
                      group:
                        default: ""
                        description: Group is the group of the referent. For example,
                          "gateway.networking.k8s.io". When unspecified or empty string,
                          core API group is inferred.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Secret
                        description: Kind is kind of the referent. For example "Secret".
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the backend. When
                          unspecified, the local namespace is inferred. \n Note that
                          when a namespace is specified, a ReferenceGrant object is
                          required in the referent namespace to allow that namespace's
                          owner to accept the reference. See the ReferenceGrant documentation
                          for details. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  provider:
                    description: The OIDC Provider configuration.
                    properties:
                      authorizationEndpoint:
                        description: The OIDC Provider's [authorization endpoint](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).
                          If not provided, EG will try to discover it from the provider's
                          [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                        type: string
                      issuer:
                        description: The OIDC Provider's [issuer identifier](https://openid.net/specs/openid-connect-discovery-1_0.html#IssuerDiscovery).
                        minLength: 1
                        type: string
                      jwks:
                        description: The JSON JWKS response from the OIDC providerâ€™s
                          `jwks_uri` URI which can be found in the OIDC provider's
                          [configuration response](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                          Note that this JSON value must be escaped when embedded
                          in a json configmap (see [example](https://github.com/istio-ecosystem/authservice/blob/master/bookinfo-example/config/authservice-configmap-template.yaml)).
                          Used during token verification. If not provided, EG will
                          try to discover it from the provider's [Well-Known Configuration
                          Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                        type: string
                      tokenEndpoint:
                        description: The OIDC Provider's [token endpoint](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint).
                          If not provided, EG will try to discover it from the provider's
                          [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                        type: string
                    required:
                    - issuer
                    type: object
                required:
                - clientId
                - clientSecret
                - provider
                type: object
              type:
                description: Type defines the type of authentication provider to use.
                  Supported provider types are "JWT" and "OIDC".
                enum:
                - JWT
                - OIDC
                type: string
            required:
            - type
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
