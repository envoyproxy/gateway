name: Release

permissions:
  contents: read

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*.*.*"

jobs:
  # For push event, we run benchmark test here because we need to
  # include benchmark report in the release.
  benchmark-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - uses: ./tools/github-actions/setup-deps


      # Benchmark
      - name: Run Benchmark tests
        env:
          KIND_NODE_TAG: v1.29.10
          IMAGE_PULL_POLICY: IfNotPresent
          # Args for benchmark test
          BENCHMARK_RPS: 10000
          BENCHMARK_CONNECTIONS: 100
          BENCHMARK_DURATION: 30
          BENCHMARK_CPU_LIMITS: 1000m
          BENCHMARK_MEMORY_LIMITS: 2000Mi
          BENCHMARK_REPORT_DIR: benchmark_report
          BENCHMARK_RENDER_PNG: "false"
        run: make benchmark

      - name: Package benchmark report
        run: cd test/benchmark && zip -r benchmark_report.zip benchmark_report

      - name: Upload Benchmark Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: benchmark_report
          path: test/benchmark/benchmark_report.zip

  release:
    runs-on: ubuntu-22.04
    needs: [benchmark-test]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: Extract Release Tag and Commit SHA
        id: vars
        shell: bash
        run: |
          echo "release_tag=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          echo "without_v_release_tag=$(echo ${GITHUB_REF##*/v})" >> $GITHUB_ENV
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1  # v3.5.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Retag and push existing gateway-dev image
        run: |
          skopeo copy --all docker://docker.io/envoyproxy/gateway-dev:${{ env.sha_short }} docker://docker.io/envoyproxy/gateway:${{ env.release_tag }}

      - name: Generate Release Artifacts
        run: IMAGE_PULL_POLICY=IfNotPresent make generate-artifacts IMAGE=envoyproxy/gateway TAG=${{ env.release_tag }} OUTPUT_DIR=release-artifacts

      - name: Build and Push EG Release Helm Chart
        run: |
          IMAGE_PULL_POLICY=IfNotPresent OCI_REGISTRY=oci://docker.io/envoyproxy CHART_VERSION=${{ env.release_tag }} IMAGE=docker.io/envoyproxy/gateway TAG=${{ env.release_tag }} make helm-package helm-push
          IMAGE_PULL_POLICY=IfNotPresent OCI_REGISTRY=oci://docker.io/envoyproxy CHART_VERSION=${{ env.without_v_release_tag }} IMAGE=docker.io/envoyproxy/gateway TAG=${{ env.release_tag }} make helm-package helm-push

      - name: Download Benchmark Report
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: benchmark_report
          path: release-artifacts

      - name: Build egctl multiarch binaries
        run: |
          make build-multiarch
          tar -zcvf envoy-gateway_${{ env.release_tag }}_linux_amd64.tar.gz bin/linux/amd64/envoy-gateway
          tar -zcvf envoy-gateway_${{ env.release_tag }}_linux_arm64.tar.gz bin/linux/arm64/envoy-gateway
          tar -zcvf envoy-gateway_${{ env.release_tag }}_darwin_amd64.tar.gz bin/darwin/amd64/envoy-gateway
          tar -zcvf envoy-gateway_${{ env.release_tag }}_darwin_arm64.tar.gz bin/darwin/arm64/envoy-gateway
          tar -zcvf egctl_${{ env.release_tag }}_linux_amd64.tar.gz bin/linux/amd64/egctl
          tar -zcvf egctl_${{ env.release_tag }}_linux_arm64.tar.gz bin/linux/arm64/egctl
          tar -zcvf egctl_${{ env.release_tag }}_darwin_amd64.tar.gz bin/darwin/amd64/egctl
          tar -zcvf egctl_${{ env.release_tag }}_darwin_arm64.tar.gz bin/darwin/arm64/egctl
          zip -r egctl_${{ env.release_tag }}_windows_amd64.zip bin/windows/amd64/egctl

      - name: Upload Release Manifests
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836  # v2.3.3
        with:
          files: |
            release-artifacts/install.yaml
            release-artifacts/quickstart.yaml
            release-artifacts/envoy-gateway-crds.yaml
            release-artifacts/release-notes.yaml
            release-artifacts/benchmark_report.zip
            envoy-gateway_${{ env.release_tag }}_linux_amd64.tar.gz
            envoy-gateway_${{ env.release_tag }}_linux_arm64.tar.gz
            envoy-gateway_${{ env.release_tag }}_darwin_amd64.tar.gz
            envoy-gateway_${{ env.release_tag }}_darwin_arm64.tar.gz
            egctl_${{ env.release_tag }}_linux_amd64.tar.gz
            egctl_${{ env.release_tag }}_linux_arm64.tar.gz
            egctl_${{ env.release_tag }}_darwin_amd64.tar.gz
            egctl_${{ env.release_tag }}_darwin_arm64.tar.gz
            egctl_${{ env.release_tag }}_windows_amd64.zip
