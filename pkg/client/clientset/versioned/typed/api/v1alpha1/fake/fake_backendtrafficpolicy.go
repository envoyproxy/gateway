// Copyright Envoy Gateway Authors
// SPDX-License-Identifier: Apache-2.0
// The full text of the Apache license is available in the LICENSE file at
// the root of the repo.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/envoyproxy/gateway/api/v1alpha1"
	apiv1alpha1 "github.com/envoyproxy/gateway/pkg/client/clientset/versioned/typed/api/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeBackendTrafficPolicies implements BackendTrafficPolicyInterface
type fakeBackendTrafficPolicies struct {
	*gentype.FakeClientWithList[*v1alpha1.BackendTrafficPolicy, *v1alpha1.BackendTrafficPolicyList]
	Fake *FakeGatewayV1alpha1
}

func newFakeBackendTrafficPolicies(fake *FakeGatewayV1alpha1, namespace string) apiv1alpha1.BackendTrafficPolicyInterface {
	return &fakeBackendTrafficPolicies{
		gentype.NewFakeClientWithList[*v1alpha1.BackendTrafficPolicy, *v1alpha1.BackendTrafficPolicyList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("backendtrafficpolicies"),
			v1alpha1.SchemeGroupVersion.WithKind("BackendTrafficPolicy"),
			func() *v1alpha1.BackendTrafficPolicy { return &v1alpha1.BackendTrafficPolicy{} },
			func() *v1alpha1.BackendTrafficPolicyList { return &v1alpha1.BackendTrafficPolicyList{} },
			func(dst, src *v1alpha1.BackendTrafficPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.BackendTrafficPolicyList) []*v1alpha1.BackendTrafficPolicy {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.BackendTrafficPolicyList, items []*v1alpha1.BackendTrafficPolicy) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
