---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clienttrafficpolicies.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: ClientTrafficPolicy
    listKind: ClientTrafficPolicyList
    plural: clienttrafficpolicies
    shortNames:
    - ctp
    singular: clienttrafficpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Accepted")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClientTrafficPolicy allows the user to configure the behavior
          of the connection between the downstream client and Envoy Proxy listener.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ClientTrafficPolicy.
            properties:
              clientIPDetection:
                description: ClientIPDetectionSettings provides configuration for
                  determining the original client IP address for requests.
                properties:
                  xForwardedFor:
                    description: XForwardedForSettings provides configuration for
                      using X-Forwarded-For headers for determining the client IP
                      address.
                    properties:
                      numTrustedHops:
                        description: NumTrustedHops controls the number of additional
                          ingress proxy hops from the right side of XFF HTTP headers
                          to trust when determining the origin client's IP address.
                          Refer to https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#x-forwarded-for
                          for more details.
                        format: int32
                        type: integer
                    type: object
                type: object
              enableProxyProtocol:
                description: EnableProxyProtocol interprets the ProxyProtocol header
                  and adds the Client Address into the X-Forwarded-For header. Note
                  Proxy Protocol must be present when this field is set, else the
                  connection is closed.
                type: boolean
              headers:
                description: HeaderSettings provides configuration for header management.
                properties:
                  enableEnvoyHeaders:
                    description: EnableEnvoyHeaders configures Envoy Proxy to add
                      the "X-Envoy-" headers to requests and responses.
                    type: boolean
                type: object
              http1:
                description: HTTP1 provides HTTP/1 configuration on the listener.
                properties:
                  enableTrailers:
                    description: EnableTrailers defines if HTTP/1 trailers should
                      be proxied by Envoy.
                    type: boolean
                  http10:
                    description: HTTP10 turns on support for HTTP/1.0 and HTTP/0.9
                      requests.
                    properties:
                      useDefaultHost:
                        description: UseDefaultHost defines if the HTTP/1.0 request
                          is missing the Host header, then the hostname associated
                          with the listener should be injected into the request. If
                          this is not set and an HTTP/1.0 request arrives without
                          a host, then it will be rejected.
                        type: boolean
                    type: object
                  preserveHeaderCase:
                    description: PreserveHeaderCase defines if Envoy should preserve
                      the letter case of headers. By default, Envoy will lowercase
                      all the headers.
                    type: boolean
                type: object
              http3:
                description: HTTP3 provides HTTP/3 configuration on the listener.
                type: object
              path:
                description: Path enables managing how the incoming path set by clients
                  can be normalized.
                properties:
                  disableMergeSlashes:
                    description: DisableMergeSlashes allows disabling the default
                      configuration of merging adjacent slashes in the path. Note
                      that slash merging is not part of the HTTP spec and is provided
                      for convenience.
                    type: boolean
                  escapedSlashesAction:
                    description: EscapedSlashesAction determines how %2f, %2F, %5c,
                      or %5C sequences in the path URI should be handled. The default
                      is UnescapeAndRedirect.
                    enum:
                    - KeepUnchanged
                    - RejectRequest
                    - UnescapeAndForward
                    - UnescapeAndRedirect
                    type: string
                type: object
              targetRef:
                description: TargetRef is the name of the Gateway resource this policy
                  is being attached to. This Policy and the TargetRef MUST be in the
                  same namespace for this Policy to have effect and be applied to
                  the Gateway. TargetRef
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. When
                      unspecified, the local namespace is inferred. Even when policy
                      targets a resource in a different namespace, it MUST only apply
                      to traffic originating from the same namespace as the policy.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  sectionName:
                    description: "SectionName is the name of a section within the
                      target resource. When unspecified, this targetRef targets the
                      entire resource. In the following resources, SectionName is
                      interpreted as the following: \n * Gateway: Listener Name *
                      Service: Port Name \n If a SectionName is specified, but does
                      not exist on the targeted object, the Policy must fail to attach,
                      and the policy implementation should record a `ResolvedRefs`
                      or similar Condition in the Policy's status."
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: this policy can only have a targetRef.group of gateway.networking.k8s.io
                  rule: self.group == 'gateway.networking.k8s.io'
                - message: this policy can only have a targetRef.kind of Gateway
                  rule: self.kind == 'Gateway'
                - message: this policy does not yet support the sectionName field
                  rule: '!has(self.sectionName)'
              tcpKeepalive:
                description: TcpKeepalive settings associated with the downstream
                  client connection. If defined, sets SO_KEEPALIVE on the listener
                  socket to enable TCP Keepalives. Disabled by default.
                properties:
                  idleTime:
                    description: The duration a connection needs to be idle before
                      keep-alive probes start being sent. The duration format is Defaults
                      to `7200s`.
                    pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                    type: string
                  interval:
                    description: The duration between keep-alive probes. Defaults
                      to `75s`.
                    pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                    type: string
                  probes:
                    description: The total number of unacknowledged probes to send
                      before deciding the connection is dead. Defaults to 9.
                    format: int32
                    type: integer
                type: object
              timeout:
                description: Timeout settings for the client connections.
                properties:
                  http:
                    description: Timeout settings for HTTP.
                    properties:
                      requestReceivedTimeout:
                        description: The duration envoy waits for the complete request
                          reception. This timer starts upon request initiation and
                          stops when either the last byte of the request is sent upstream
                          or when the response begins.
                        pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                        type: string
                    type: object
                type: object
              tls:
                description: TLS settings configure TLS termination settings with
                  the downstream client.
                properties:
                  alpnProtocols:
                    description: 'ALPNProtocols supplies the list of ALPN protocols
                      that should be exposed by the listener. By default h2 and http/1.1
                      are enabled. Supported values are: - http/1.0 - http/1.1 - h2'
                    items:
                      description: ALPNProtocol specifies the protocol to be negotiated
                        using ALPN
                      enum:
                      - http/1.0
                      - http/1.1
                      - h2
                      type: string
                    type: array
                  ciphers:
                    description: 'Ciphers specifies the set of cipher suites supported
                      when negotiating TLS 1.0 - 1.2. This setting has no effect for
                      TLS 1.3. In non-FIPS Envoy Proxy builds the default cipher list
                      is: - [ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]
                      - [ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]
                      - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                      In builds using BoringSSL FIPS the default cipher list is: -
                      ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                      - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384'
                    items:
                      type: string
                    type: array
                  clientValidation:
                    description: ClientValidation specifies the configuration to validate
                      the client initiating the TLS connection to the Gateway listener.
                    properties:
                      caCertificateRefs:
                        description: "CACertificateRefs contains one or more references
                          to Kubernetes objects that contain TLS certificates of the
                          Certificate Authorities that can be used as a trust anchor
                          to validate the certificates presented by the client. \n
                          A single reference to a Kubernetes ConfigMap or a Kubernetes
                          Secret, with the CA certificate in a key named `ca.crt`
                          is currently supported. \n References to a resource in different
                          namespace are invalid UNLESS there is a ReferenceGrant in
                          the target namespace that allows the certificate to be attached."
                        items:
                          description: "SecretObjectReference identifies an API object
                            including its namespace, defaulting to Secret. \n The
                            API object must be valid in the cluster; the Group and
                            Kind must be registered in the cluster for this reference
                            to be valid. \n References to objects with invalid Group
                            and Kind are not valid, and must be rejected by the implementation,
                            with appropriate Conditions set on the containing object."
                          properties:
                            group:
                              default: ""
                              description: Group is the group of the referent. For
                                example, "gateway.networking.k8s.io". When unspecified
                                or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Secret
                              description: Kind is kind of the referent. For example
                                "Secret".
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the referenced
                                object. When unspecified, the local namespace is inferred.
                                \n Note that when a namespace different than the local
                                namespace is specified, a ReferenceGrant object is
                                required in the referent namespace to allow that namespace's
                                owner to accept the reference. See the ReferenceGrant
                                documentation for details. \n Support: Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                          - name
                          type: object
                        maxItems: 8
                        type: array
                    type: object
                  ecdhCurves:
                    description: 'ECDHCurves specifies the set of supported ECDH curves.
                      In non-FIPS Envoy Proxy builds the default curves are: - X25519
                      - P-256 In builds using BoringSSL FIPS the default curve is:
                      - P-256'
                    items:
                      type: string
                    type: array
                  maxVersion:
                    description: Max specifies the maximal TLS protocol version to
                      allow The default is TLS 1.3 if this is not specified.
                    enum:
                    - Auto
                    - "1.0"
                    - "1.1"
                    - "1.2"
                    - "1.3"
                    type: string
                  minVersion:
                    description: Min specifies the minimal TLS protocol version to
                      allow. The default is TLS 1.2 if this is not specified.
                    enum:
                    - Auto
                    - "1.0"
                    - "1.1"
                    - "1.2"
                    - "1.3"
                    type: string
                  signatureAlgorithms:
                    description: SignatureAlgorithms specifies which signature algorithms
                      the listener should support.
                    items:
                      type: string
                    type: array
                type: object
                x-kubernetes-validations:
                - message: setting ciphers has no effect if the minimum possible TLS
                    version is 1.3
                  rule: 'has(self.minVersion) && self.minVersion == ''1.3'' ? !has(self.ciphers)
                    : true'
                - message: minVersion must be smaller or equal to maxVersion
                  rule: 'has(self.minVersion) && has(self.maxVersion) ? {"Auto":0,"1.0":1,"1.1":2,"1.2":3,"1.3":4}[self.minVersion]
                    <= {"1.0":1,"1.1":2,"1.2":3,"1.3":4,"Auto":5}[self.maxVersion]
                    : !has(self.minVersion) && has(self.maxVersion) ? 3 <= {"1.0":1,"1.1":2,"1.2":3,"1.3":4,"Auto":5}[self.maxVersion]
                    : true'
            required:
            - targetRef
            type: object
            x-kubernetes-validations:
            - message: alpn protocols can't be set if HTTP/3 is enabled
              rule: 'has(self.http3) && has(self.tls) && has(self.tls.alpnProtocols)
                ? self.tls.alpnProtocols.size() == 0 : true'
          status:
            description: Status defines the current status of ClientTrafficPolicy.
            properties:
              conditions:
                description: Conditions describe the current conditions of the ClientTrafficPolicy.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
