# openssl req -x509 -sha256 -nodes -days 3650 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout example.com.key -out example.com.crt -addext "subjectAltName = DNS:*.example.com"
#
#
#
# cat > wildcard.ext  <<EOF
# subjectKeyIdentifier   = hash
# authorityKeyIdentifier = keyid:always,issuer:always
# basicConstraints       = CA:TRUE
# keyUsage               = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign
# subjectAltName         = DNS:*.example.com
# issuerAltName          = issuer:copy
# EOF
#
# openssl req -out wildcard.example.com.csr -newkey rsa:2048 -nodes -keyout wildcard.example.com.key -subj "/CN=wildcard.example.com/O=example organization" -addext "subjectAltName = DNS:*.example.com"
#
# openssl x509 -req -in wildcard.example.com.csr -CA example.com.crt -CAkey example.com.key -CAcreateserial -out wildcard.example.com.crt -days 3650 -sha256 -extfile wildcard.ext
#
# kubectl create secret generic wildcard-example-com-tls -n gateway-conformance-infra --from-file=ca.crt=example.com.crt --from-file=tls.crt=wildcard.example.com.crt --from-file=tls.key=wildcard.example.com.key --dry-run=client -o yaml > wildcard-example-com-tls.yaml
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWVENDQWoyZ0F3SUJBZ0lVVHViTVRoZGQ0UnJPZUtkQVV3YlllVDBzTGRFd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0xURVZNQk1HQTFVRUNnd01aWGhoYlhCc1pTQkpibU11TVJRd0VnWURWUVFEREF0bGVHRnRjR3hsTG1OdgpiVEFlRncweU5UQTRNREl3T1RVMk5UZGFGdzB6TlRBM016RXdPVFUyTlRkYU1DMHhGVEFUQmdOVkJBb01ER1Y0CllXMXdiR1VnU1c1akxqRVVNQklHQTFVRUF3d0xaWGhoYlhCc1pTNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREV0gzNSt2QUZtZzIzMXdxdmQ4dStocFBBbTBodENEMnB2TldSZTRPRgoyd2o5VUNnb0JFdko2djJBQTdRQ2pmY2tzUk9BMkFmTm9uQWZ4emZBTWl4QnJYMFJQZ21XZ1FrUHJuanpVVG4xCkRHMmprUUZlMFV5cjFyaHQrY2lsOHJ1UGF3bXNicU8wQ2JyRGxKb1pDbnhuTnM3UmxPVjBtcWJHVkNHajZtQ2oKcGVVOUpvV2lRTWc1NUFJbjFaR3Z2WWFCbzc2bmppRmM4Z0c3bVZtYysvallSejN3dmNVbkdDdGlWTjNOUFdHRwphSG9HQUFhQm1YRFg4blkyQStJSE15QnJKckhKVEZKY3E4RDU5YlBsL2Z6Zkl4V1ZGOGNZYW1MRnFrMGFpbmZTCkRvOVRoVXA5OHFNYldCS2NDTXdQU1o1c3ZhZFNER01rVng2ZEE4NGFkRVFOQWdNQkFBR2piVEJyTUIwR0ExVWQKRGdRV0JCVG5GdUxaaTVPZk1tT0N1ekhMdU1LQ3JIRVJxREFmQmdOVkhTTUVHREFXZ0JUbkZ1TFppNU9mTW1PQwp1ekhMdU1LQ3JIRVJxREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQmdHQTFVZEVRUVJNQStDRFNvdVpYaGhiWEJzClpTNWpiMjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFiNXNpOHRaOXZDVXJ0ZlA3VURHcDhGVTN5TDl1RVUKSnJXeWpRRlZZVFVpckpaQ21tZ1hCN2dzOWNHMDFpUnRHMVgxbTZzR2IzLzAvL0ptL0UxcTVQWFlvaHRqMk1wawp3Wm4vUGwrSmRDOS9pS0luc21HckFDVGh5OW13NWdJYS9nZjA0M1A3S3BSaUJjdjhOR2VZd256NU5Lb0R5RWJBClNka0JmN3R6M1VIYTVKUktyR1pYSVlWSHBXTGpPdmJjbEExdmpIdmVBNk41WStIaXhMamMzUWsyem5CS0wzWWcKU1BNbjhLMXZlRndOeG1WSXNGVUxBblIxRGFLOFV0aHdGT09rTXc5MmlmSmVIQ1RXTG1NbUp2ckVDWTNCZVRpMwpSeHBPajFickJJWXBEU1RkcFZQZHJzckl6N21IbVFJUitCN2lXaTBmQ1lBVDFVUGM2S0R0Rm13PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQxVENDQXIyZ0F3SUJBZ0lVZWk5ZzEwZWJsK1NGbWJEb1h5cDNkYnBmbXJvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0xURVZNQk1HQTFVRUNnd01aWGhoYlhCc1pTQkpibU11TVJRd0VnWURWUVFEREF0bGVHRnRjR3hsTG1OdgpiVEFlRncweU5UQTRNREl4TURJNE5UWmFGdzB6TlRBM016RXhNREk0TlRaYU1ENHhIVEFiQmdOVkJBTU1GSGRwCmJHUmpZWEprTG1WNFlXMXdiR1V1WTI5dE1SMHdHd1lEVlFRS0RCUmxlR0Z0Y0d4bElHOXlaMkZ1YVhwaGRHbHYKYmpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmwyUlRieTRpSGxWeE0yeHN1SQpMbGJlalZPTVhlMWNEMDB6R0RkakdHNytYN1dieEoxZnVwZ29OSnI5L1JxUEVtMDZyM0djeVFPR1RTVFpvRTI0CkV6UVlMaUZnS0ZVL3RQNXpYTnYyNnFaNnU3Y0FSMTBkNUs1MWNseDlWNXg2cnpSTGlJTzNheTgxU1Z1TmRoZzIKb2ptL3BOVnBVd2lFbXJwWExSVWlIb2FrSGZNZTZ3VHpGckJ2N29scWExS3lST1BIdGt6MmM1akpQbEc1NHVzOAo5WklZYVVLbjd1SDNuVVhGaUFnTzRTcHBLWXNmejR3MTlhL1NrYVkyRi9FUnp1WVZQeC9YTUhYK3hLZy9DLy9mCnVsMXZvYndUeE9ydVozREhTbU5YT0xvV0owVE5hVVdUT1hDWkRIOXVNNElSc3gyYnMraUkrbDlvdzZaV0toeHMKSDAwQ0F3RUFBYU9CMnpDQjJEQWRCZ05WSFE0RUZnUVVlUDNJQUFCTWNYc2lwUVA4RllNUkluanFabjR3YUFZRApWUjBqQkdFd1g0QVU1eGJpMll1VG56SmpncnN4eTdqQ2dxeHhFYWloTWFRdk1DMHhGVEFUQmdOVkJBb01ER1Y0CllXMXdiR1VnU1c1akxqRVVNQklHQTFVRUF3d0xaWGhoYlhCc1pTNWpiMjJDRkU3bXpFNFhYZUVhem5pblFGTUcKMkhrOUxDM1JNQXdHQTFVZEV3UUZNQU1CQWY4d0N3WURWUjBQQkFRREFnTDhNQmdHQTFVZEVRUVJNQStDRFNvdQpaWGhoYlhCc1pTNWpiMjB3R0FZRFZSMFNCQkV3RDRJTktpNWxlR0Z0Y0d4bExtTnZiVEFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQVZreG5LZlpZT2Z5U0NIWnpsbmNpTWhEeWNmVm1ISnhObFBqUTdHSHYzNFVHRzVaK2Z5aXIKcmhrc3U2T3FMU0dSdUk2V1NLWkZmdDRmV0hkUGZ2ekVYb0kva2RBUi9kNzVacU15WjBkUDJ1N1JROS9YdERTcAp0MzFOZUg5bzdZOFpsRWtTUldwU081Y3Y1Y3JwOUVPT3g5YTJ0S1dURjI4SlFZdktMT3FpbUhaeFViZ2IzdjFwCnd4N2pzQUlhR3Ryc0dVcFVBblMvZzFGQ1ZGQUtNSmNCcTFIYzRKZ1o1VkUrYlNzdzBZOTlBUVRxcG1xMnp0by8KQk50Z1Z6WVEvbDlKMzRGdlE2Q1h4TDlMRzdqcmFEbHBwRnNEeWRKa0xoTVN6SGlpdlZHZWU4QzkyRTY0bjEyKwp2aGFvbkllNmdwK1FKOXdFTEY0N1hqZzQ1cmdDTVRZOEh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRFpka1UyOHVJaDVWY1QKTnNiTGlDNVczbzFUakYzdFhBOU5NeGczWXhodS9sKzFtOFNkWDdxWUtEU2EvZjBhanhKdE9xOXhuTWtEaGswawoyYUJOdUJNMEdDNGhZQ2hWUDdUK2MxemI5dXFtZXJ1M0FFZGRIZVN1ZFhKY2ZWZWNlcTgwUzRpRHQyc3ZOVWxiCmpYWVlOcUk1djZUVmFWTUloSnE2VnkwVkloNkdwQjN6SHVzRTh4YXdiKzZKYW10U3NrVGp4N1pNOW5PWXlUNVIKdWVMclBQV1NHR2xDcCs3aDk1MUZ4WWdJRHVFcWFTbUxIOCtNTmZXdjBwR21OaGZ4RWM3bUZUOGYxekIxL3NTbwpQd3YvMzdwZGI2RzhFOFRxN21kd3gwcGpWemk2RmlkRXpXbEZremx3bVF4L2JqT0NFYk1kbTdQb2lQcGZhTU9tClZpb2NiQjlOQWdNQkFBRUNnZ0VBTEI1NDZlNUtqeTV3cFZzTVo1QThPSThqOUtLcWpzVEo3UE4wRXc2bGp5VkkKSlRnU1lveGd0c3lYYWFla29XNE1Bc0d3aFJnV1YwTDQ1VVJLNStHejhiS0RMMjNMR1FxWkRiTzVqLzRQT3RIMQpRaXBLRUR3SG9KWis2b0ZhbEVwMnYrRWdNL3J6UWN0cGsrdkdIU0QrZGtGcHI0dVVGMHNSK2tMRUNJRFkyUjlVCmxGdW5Jb1dFTllGZmtVRG1zR1lnaUxrVWNLbllkR0RYMTR0b3B4d2tsRFRDNFNvdXZKalM5RlJWWVJrY0NaeFkKK1NOZUJnNHY4NFgySnhWZldqNzNId2ltRTFNanR4ZWlLbVB4bC9EYzVjRW0zTFQ2QjNRRjVUbXIvVC9kc3pkcwo1NnBWYUZ2Q3F5QVZtUzdXcXR4WWlwK0JGeWwyeTRXcFlELzJTZ1dRVVFLQmdRRHpUWUQxbDgyODdYaUJnYzdRCkZMTlo3M2d3dWNoZFlwQjBLdmRyeXhxSFRlb2Q2bGtmSEY0STR1S2t6ckYweDRUbHpFQUN0S2YyTEZrN1JoQTkKVWRJcHNlQzEzYTM0U1NVMVNyWTFlblZZSGtOWmY4WjBSemVaUzhDcWd1dk04YlZYNURJMjFzMTQrYXVhZS9SSwpIa2Q2OEJuaklXUkJ0c2xQc0g1em9uVVQzUUtCZ1FEa3o0bUM5ZXpOcHpFUjByNDJBWXhJa0N1MUFGalNreGhnCmV2K3JKeTlySGRELzVZTWUzcVNPMTlZZmo2dFBuZ1JHMytSdXJlQlY5VHc1SnhNMmhaUFgrYjNPbXZ6cFU5T20KSnNlM0x2UWFTME5rMExzUXVCVlZYZjJ6Z0pqMDVtejhVRHMzZHJ4Q1lVMEk4UnJQeUpkMFhESXhkTmFaMHd0SQowSmhPSi94Nk1RS0JnUUM5dy9tTmxIVlhvakNYY2xPSVlGenpES0JHQU9HU1ZNb3VrVVNod3F4U1ZDY0Naa0pVCnpaOWFkdnduWno5cHdpU1p4NUUxaXdwbUszajlqa3drUjZrUDlEazhJRWNNbktCMHpHMEprUlh0UU0xdkJRWVkKczJOZUlZT0llc3pIOE01c1d3UC9XZEt4UktyZnQwWjJlTjl2dDgyNUpkWTRtd1N4THd1eHpVaGIwUUtCZ0NxaAo3THBFL2lsWFZKSkFsUVpWQllGanMzRVhMbldWeUwzNVRQZmo1amJzS0V2MXhKZVUzazVyTXM5UW9wZkVGb0hxCko1TGp2Ti9uUUtCWmduL3ZKWnZoUVpka1UybGFJQjVlTFdvWlNvdzNwOGY2Q0ZEV0s4dHJKdUV5UGMycnZYVEoKc2k3a1piRnNsY0RydzVZaGh1NjhXdkhTRmtZMUIyNDZ4NVlRWnorUkFvR0FVRkRMaWVoYitSQW9yLzkzZlVlVgpuWU95UTl3eWJFREE0eHBWcWpOcHlQVUZrMVpFZ1JkMjBpUlAwd1VIeW9LK25IU0ZTaWNrOE9VMzRhb3VFRTVPClcxeTJJK3hENXNKZ2ZrWjJZMXk2NmFDVkRZY3pjbjJFVTdEdGZZNEk4RDE2Y3JPUXFpanVSSFJaVVlSc3p5ajUKYXpJbEdya0hQSzZzeTVrZU5RMU5BQ0E9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  name: wildcard-example-com-tls
  namespace: gateway-conformance-infra
type: kubernetes.io/tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: http3-gtw
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
    - name: https1
      protocol: HTTPS
      port: 443
      hostname: "foo.example.com"
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            group: ""
            name: wildcard-example-com-tls
    - name: https2
      protocol: HTTPS
      port: 443
      hostname: "bar.example.com"
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            group: ""
            name: wildcard-example-com-tls
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
  name: http3-ctp
  namespace: gateway-conformance-infra
spec:
  http3: {}
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: http3-gtw
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: http3-route
  namespace: gateway-conformance-infra
spec:
  parentRefs:
    - name: http3-gtw
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: infra-backend-v1
          port: 8080
          weight: 1
      matches:
        - path:
            type: PathPrefix
            value: /
