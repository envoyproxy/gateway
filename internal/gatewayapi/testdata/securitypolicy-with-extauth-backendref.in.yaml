gateways:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      namespace: default
      name: gateway-1
    spec:
      gatewayClassName: envoy-gateway-class
      listeners:
        - name: http
          protocol: HTTP
          port: 80
          allowedRoutes:
            namespaces:
              from: All
httpRoutes:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      namespace: default
      name: httproute-1
    spec:
      hostnames:
        - www.foo.com
      parentRefs:
        - namespace: default
          name: gateway-1
          sectionName: http
      rules:
        - matches:
            - path:
                value: /foo1
          backendRefs:
            - name: service-1
              port: 8080
        - matches:
            - path:
                value: /foo2
          backendRefs:
            - name: service-2
              port: 8080
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      namespace: default
      name: httproute-2
    spec:
      hostnames:
        - www.bar.com
      parentRefs:
        - namespace: default
          name: gateway-1
          sectionName: http
      rules:
        - matches:
            - path:
                value: /bar
          backendRefs:
            - name: service-3
              port: 8080
services:
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: envoy-gateway
      name: http-backend
    spec:
      ports:
        - port: 80
          name: http
          protocol: TCP
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: default
      name: grpc-backend
    spec:
      ports:
        - port: 9000
          name: grpc
          protocol: TCP
endpointSlices:
  - apiVersion: discovery.k8s.io/v1
    kind: EndpointSlice
    metadata:
      name: endpointslice-http-backend
      namespace: envoy-gateway
      labels:
        kubernetes.io/service-name: http-backend
    addressType: IPv4
    ports:
      - name: http
        protocol: TCP
        port: 80
    endpoints:
      - addresses:
          - 7.7.7.7
        conditions:
          ready: true
  - apiVersion: discovery.k8s.io/v1
    kind: EndpointSlice
    metadata:
      name: endpointslice-grpc-backend
      namespace: default
      labels:
        kubernetes.io/service-name: grpc-backend
    addressType: IPv4
    ports:
      - name: grpc
        protocol: TCP
        port: 9000
    endpoints:
      - addresses:
          - 8.8.8.8
        conditions:
          ready: true
referenceGrants:
  - apiVersion: gateway.networking.k8s.io/v1alpha2
    kind: ReferenceGrant
    metadata:
      namespace: envoy-gateway
      name: referencegrant-1
    spec:
      from:
        - group: gateway.envoyproxy.io
          kind: SecurityPolicy
          namespace: default
      to:
        - group: ''
          kind: Service
securityPolicies:
  - apiVersion: gateway.envoyproxy.io/v1alpha1
    kind: SecurityPolicy
    metadata:
      namespace: default
      name: policy-for-http-route-1
    spec:
      targetRef:
        group: gateway.networking.k8s.io
        kind: HTTPRoute
        name: httproute-1
      extAuth:
        failOpen: true
        headersToExtAuth:
          - header1
          - header2
        grpc:
          backendRef:
            name: grpc-backend
            port: 9000
  - apiVersion: gateway.envoyproxy.io/v1alpha1
    kind: SecurityPolicy
    metadata:
      namespace: default
      name: policy-for-gateway-1          # This will only apply to the httproute-2
    spec:
      targetRef:
        group: gateway.networking.k8s.io
        kind: Gateway
        name: gateway-1
      extAuth:
        failOpen: false
        http:
          backendRef:
            Name: http-backend
            Namespace: envoy-gateway
            Port: 80
          Path: /auth
          headersToBackend:
            - header1
            - header2
