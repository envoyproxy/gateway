backends:
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: Backend
  metadata:
    creationTimestamp: null
    name: backend-fqdn
    namespace: envoy-gateway
  spec:
    endpoints:
    - fqdn:
        hostname: oauth.foo.com
        port: 443
  status:
    conditions:
    - lastTransitionTime: null
      message: The Backend was accepted
      reason: Accepted
      status: "True"
      type: Accepted
gateways:
- apiVersion: gateway.networking.k8s.io/v1
  kind: Gateway
  metadata:
    creationTimestamp: null
    name: gateway-1
    namespace: envoy-gateway
  spec:
    gatewayClassName: envoy-gateway-class
    listeners:
    - allowedRoutes:
        namespaces:
          from: All
      name: http
      port: 80
      protocol: HTTP
  status:
    listeners:
    - attachedRoutes: 1
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: http
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
httpRoutes:
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    creationTimestamp: null
    name: httproute-1
    namespace: default
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - name: gateway-1
      namespace: envoy-gateway
      sectionName: http
    rules:
    - backendRefs:
      - name: service-1
        port: 8080
      matches:
      - path:
          value: /foo
  status:
    parents:
    - conditions:
      - lastTransitionTime: null
        message: Route is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Resolved all the Object references for the Route
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
      parentRef:
        name: gateway-1
        namespace: envoy-gateway
        sectionName: http
infraIR:
  envoy-gateway/gateway-1:
    proxy:
      listeners:
      - address: null
        name: envoy-gateway/gateway-1/http
        ports:
        - containerPort: 10080
          name: http-80
          protocol: HTTP
          servicePort: 80
      metadata:
        labels:
          gateway.envoyproxy.io/owning-gateway-name: gateway-1
          gateway.envoyproxy.io/owning-gateway-namespace: envoy-gateway
      name: envoy-gateway/gateway-1
securityPolicies:
- apiVersion: gateway.envoyproxy.io/v1alpha1
  kind: SecurityPolicy
  metadata:
    creationTimestamp: null
    name: policy-for-gateway
    namespace: envoy-gateway
    uid: b8284d0f-de82-4c65-b204-96a0d3f258a1
  spec:
    oidc:
      clientID: client1.apps.googleusercontent.com
      clientSecret:
        group: null
        kind: null
        name: client1-secret
      defaultRefreshTokenTTL: 24h0m0s
      defaultTokenTTL: 30m0s
      forwardAccessToken: true
      logoutPath: /bar/logout
      provider:
        authorizationEndpoint: https://oauth.foo.com/oauth2/v2/auth
        backendRefs:
        - group: gateway.envoyproxy.io
          kind: Backend
          name: backend-fqdn
          port: 443
        backendSettings:
          retry:
            numRetries: 3
            perRetry:
              backOff:
                baseInterval: 1s
                maxInterval: 5s
            retryOn:
              triggers:
              - 5xx
              - gateway-error
              - reset
        issuer: https://oauth.foo.com
        tokenEndpoint: https://oauth.foo.com/token
      redirectURL: https://www.example.com/bar/oauth2/callback
      refreshToken: true
    targetRef:
      group: gateway.networking.k8s.io
      kind: Gateway
      name: gateway-1
  status:
    ancestors:
    - ancestorRef:
        group: gateway.networking.k8s.io
        kind: Gateway
        name: gateway-1
        namespace: envoy-gateway
      conditions:
      - lastTransitionTime: null
        message: Policy has been accepted.
        reason: Accepted
        status: "True"
        type: Accepted
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
xdsIR:
  envoy-gateway/gateway-1:
    accessLog:
      text:
      - path: /dev/stdout
    http:
    - address: 0.0.0.0
      hostnames:
      - '*'
      isHTTP2: false
      metadata:
        kind: Gateway
        name: gateway-1
        namespace: envoy-gateway
        sectionName: http
      name: envoy-gateway/gateway-1/http
      path:
        escapedSlashesAction: UnescapeAndRedirect
        mergeSlashes: true
      port: 10080
      routes:
      - destination:
          name: httproute/default/httproute-1/rule/0
          settings:
          - addressType: IP
            endpoints:
            - host: 7.7.7.7
              port: 8080
            protocol: HTTP
            weight: 1
        hostname: www.example.com
        isHTTP2: false
        metadata:
          kind: HTTPRoute
          name: httproute-1
          namespace: default
        name: httproute/default/httproute-1/rule/0/match/0/www_example_com
        pathMatch:
          distinct: false
          name: ""
          prefix: /foo
        security:
          oidc:
            clientID: client1.apps.googleusercontent.com
            clientSecret: Y2xpZW50MTpzZWNyZXQK
            cookieSuffix: b0a1b740
            defaultRefreshTokenTTL: 24h0m0s
            defaultTokenTTL: 30m0s
            forwardAccessToken: true
            hmacSecret: qrOYACHXoe7UEDI/raOjNSx+Z9ufXSc/22C3T6X/zPY=
            logoutPath: /bar/logout
            name: securitypolicy/envoy-gateway/policy-for-gateway
            provider:
              authorizationEndpoint: https://oauth.foo.com/oauth2/v2/auth
              destination:
                name: securitypolicy/envoy-gateway/policy-for-gateway/0
                settings:
                - addressType: FQDN
                  endpoints:
                  - host: oauth.foo.com
                    port: 443
                  protocol: HTTPS
                  weight: 1
              tokenEndpoint: https://oauth.foo.com/token
              traffic:
                retry:
                  numRetries: 3
                  perRetry:
                    backOff:
                      baseInterval: 1s
                      maxInterval: 5s
                  retryOn:
                    triggers:
                    - 5xx
                    - gateway-error
                    - reset
            redirectPath: /bar/oauth2/callback
            redirectURL: https://www.example.com/bar/oauth2/callback
            refreshToken: true
            scopes:
            - openid
