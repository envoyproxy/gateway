gateways:
- apiVersion: gateway.networking.k8s.io/v1
  kind: Gateway
  metadata:
    creationTimestamp: null
    name: gateway-1
    namespace: envoy-gateway
  spec:
    gatewayClassName: envoy-gateway-class
    listeners:
    - allowedRoutes:
        namespaces:
          from: Same
      name: http
      port: 80
      protocol: HTTP
  status:
    listeners:
    - attachedRoutes: 0
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: http
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
infraIR:
  envoy-gateway/gateway-1:
    proxy:
      config:
        apiVersion: gateway.envoyproxy.io/v1alpha1
        kind: EnvoyProxy
        metadata:
          creationTimestamp: null
          name: test
          namespace: envoy-gateway-system
        spec:
          logging: {}
          provider:
            kubernetes:
              envoyDeployment:
                container:
                  env:
                  - name: env_a
                    value: env_a_value
                  - name: env_b
                    value: env_b_name
                  image: envoyproxy/envoy:distroless-dev
                  resources:
                    requests:
                      cpu: 100m
                      memory: 512Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    runAsUser: 2000
                pod:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: cloud.google.com/gke-nodepool
                            operator: In
                            values:
                            - router-node
                  annotations:
                    key1: val1
                    key2: val2
                  securityContext:
                    fsGroup: 2000
                    fsGroupChangePolicy: OnRootMismatch
                    runAsGroup: 3000
                    runAsUser: 1000
                  tolerations:
                  - effect: NoSchedule
                    key: node-type
                    operator: Exists
                    value: router
                  volumes:
                  - name: certs
                    secret:
                      secretName: envoy-cert
                replicas: 2
              envoyService:
                type: LoadBalancer
            type: Kubernetes
          telemetry:
            accessLog:
              settings:
              - format:
                  text: |
                    [%START_TIME%] "%REQ(:METHOD)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"\n
                  type: Text
                sinks:
                - file:
                    path: /dev/stdout
                  type: File
                - als:
                    backendRefs:
                    - name: envoy-als
                      namespace: monitoring
                      port: 9000
                    backendSettings:
                      circuitBreaker:
                        maxConnections: 2048
                      connection:
                        bufferLimit: 20Mi
                      healthCheck:
                        passive:
                          consecutiveGatewayErrors: 4
                          interval: 5s
                      http2:
                        initialConnectionWindowSize: 2Mi
                        initialStreamWindowSize: 128Ki
                        maxConcurrentStreams: 200
                        onInvalidMessage: TerminateStream
                      loadBalancer:
                        consistentHash:
                          header:
                            name: X-some-header
                          type: Header
                        type: ConsistentHash
                      proxyProtocol:
                        version: V2
                      tcpKeepalive:
                        probes: 7
                      timeout:
                        tcp:
                          connectTimeout: 15s
                    http:
                      requestHeaders:
                      - x-client-ip-address
                      responseHeaders:
                      - cache-control
                      responseTrailers:
                      - expires
                    logName: accesslog
                    type: HTTP
                  type: ALS
                - als:
                    backendRefs:
                    - name: envoy-als
                      namespace: monitoring
                      port: 9000
                    type: TCP
                  type: ALS
                - openTelemetry:
                    backendSettings:
                      circuitBreaker:
                        maxConnections: 2048
                      connection:
                        bufferLimit: 20Mi
                      healthCheck:
                        passive:
                          consecutiveGatewayErrors: 4
                          interval: 5s
                      http2:
                        initialConnectionWindowSize: 2Mi
                        initialStreamWindowSize: 128Ki
                        maxConcurrentStreams: 200
                        onInvalidMessage: TerminateStream
                      loadBalancer:
                        consistentHash:
                          header:
                            name: X-some-header
                          type: Header
                        type: ConsistentHash
                      proxyProtocol:
                        version: V2
                      tcpKeepalive:
                        probes: 7
                      timeout:
                        tcp:
                          connectTimeout: 15s
                    host: otel-collector.monitoring.svc.cluster.local
                    port: 4317
                    resources:
                      k8s.cluster.name: cluster-1
                  type: OpenTelemetry
        status: {}
      listeners:
      - address: null
        name: envoy-gateway/gateway-1/http
        ports:
        - containerPort: 10080
          name: http-80
          protocol: HTTP
          servicePort: 80
      metadata:
        labels:
          gateway.envoyproxy.io/owning-gateway-name: gateway-1
          gateway.envoyproxy.io/owning-gateway-namespace: envoy-gateway
      name: envoy-gateway/gateway-1
xdsIR:
  envoy-gateway/gateway-1:
    accessLog:
      als:
      - destination:
          name: accesslog_als_0_1
          settings:
          - addressType: IP
            endpoints:
            - host: 10.240.0.10
              port: 9090
            protocol: GRPC
        http:
          requestHeaders:
          - x-client-ip-address
          responseHeaders:
          - cache-control
          responseTrailers:
          - expires
        name: accesslog
        text: |
          [%START_TIME%] "%REQ(:METHOD)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"\n
        traffic:
          backendConnection:
            bufferLimit: 20971520
          circuitBreaker:
            maxConnections: 2048
          healthCheck:
            passive:
              consecutiveGatewayErrors: 4
              interval: 5s
          http2:
            initialConnectionWindowSize: 131072
            initialStreamWindowSize: 2097152
            maxConcurrentStreams: 200
            resetStreamOnError: true
          loadBalancer:
            consistentHash:
              header:
                name: X-some-header
          proxyProtocol:
            version: V2
          tcpKeepalive:
            probes: 7
          timeout:
            tcp:
              connectTimeout: 15s
        type: HTTP
      - destination:
          name: accesslog_als_0_2
          settings:
          - addressType: IP
            endpoints:
            - host: 10.240.0.10
              port: 9090
            protocol: GRPC
        name: envoy-gateway-system/test
        text: |
          [%START_TIME%] "%REQ(:METHOD)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"\n
        type: TCP
      openTelemetry:
      - authority: otel-collector.monitoring.svc.cluster.local
        destination:
          name: accesslog_otel_0_3
          settings:
          - endpoints:
            - host: otel-collector.monitoring.svc.cluster.local
              port: 4317
            protocol: GRPC
            weight: 1
        resources:
          k8s.cluster.name: cluster-1
        text: |
          [%START_TIME%] "%REQ(:METHOD)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"\n
        traffic:
          backendConnection:
            bufferLimit: 20971520
          circuitBreaker:
            maxConnections: 2048
          healthCheck:
            passive:
              consecutiveGatewayErrors: 4
              interval: 5s
          http2:
            initialConnectionWindowSize: 131072
            initialStreamWindowSize: 2097152
            maxConcurrentStreams: 200
            resetStreamOnError: true
          loadBalancer:
            consistentHash:
              header:
                name: X-some-header
          proxyProtocol:
            version: V2
          tcpKeepalive:
            probes: 7
          timeout:
            tcp:
              connectTimeout: 15s
      text:
      - format: |
          [%START_TIME%] "%REQ(:METHOD)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"\n
        path: /dev/stdout
    http:
    - address: 0.0.0.0
      hostnames:
      - '*'
      isHTTP2: false
      metadata:
        kind: Gateway
        name: gateway-1
        namespace: envoy-gateway
        sectionName: http
      name: envoy-gateway/gateway-1/http
      path:
        escapedSlashesAction: UnescapeAndRedirect
        mergeSlashes: true
      port: 10080
