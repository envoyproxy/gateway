// Copyright Envoy Gateway Authors
// SPDX-License-Identifier: Apache-2.0
// The full text of the Apache license is available in the LICENSE file at
// the root of the repo.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/envoyproxy/gateway/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// HTTPRouteFilterLister helps list HTTPRouteFilters.
// All objects returned here must be treated as read-only.
type HTTPRouteFilterLister interface {
	// List lists all HTTPRouteFilters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.HTTPRouteFilter, err error)
	// HTTPRouteFilters returns an object that can list and get HTTPRouteFilters.
	HTTPRouteFilters(namespace string) HTTPRouteFilterNamespaceLister
	HTTPRouteFilterListerExpansion
}

// hTTPRouteFilterLister implements the HTTPRouteFilterLister interface.
type hTTPRouteFilterLister struct {
	listers.ResourceIndexer[*apiv1alpha1.HTTPRouteFilter]
}

// NewHTTPRouteFilterLister returns a new HTTPRouteFilterLister.
func NewHTTPRouteFilterLister(indexer cache.Indexer) HTTPRouteFilterLister {
	return &hTTPRouteFilterLister{listers.New[*apiv1alpha1.HTTPRouteFilter](indexer, apiv1alpha1.Resource("httproutefilter"))}
}

// HTTPRouteFilters returns an object that can list and get HTTPRouteFilters.
func (s *hTTPRouteFilterLister) HTTPRouteFilters(namespace string) HTTPRouteFilterNamespaceLister {
	return hTTPRouteFilterNamespaceLister{listers.NewNamespaced[*apiv1alpha1.HTTPRouteFilter](s.ResourceIndexer, namespace)}
}

// HTTPRouteFilterNamespaceLister helps list and get HTTPRouteFilters.
// All objects returned here must be treated as read-only.
type HTTPRouteFilterNamespaceLister interface {
	// List lists all HTTPRouteFilters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.HTTPRouteFilter, err error)
	// Get retrieves the HTTPRouteFilter from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.HTTPRouteFilter, error)
	HTTPRouteFilterNamespaceListerExpansion
}

// hTTPRouteFilterNamespaceLister implements the HTTPRouteFilterNamespaceLister
// interface.
type hTTPRouteFilterNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.HTTPRouteFilter]
}
