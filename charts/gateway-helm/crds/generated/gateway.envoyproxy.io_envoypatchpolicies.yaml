---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: envoypatchpolicies.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    categories:
    - envoy-gateway
    kind: EnvoyPatchPolicy
    listKind: EnvoyPatchPolicyList
    plural: envoypatchpolicies
    shortNames:
    - epp
    singular: envoypatchpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Programmed")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvoyPatchPolicy allows the user to modify the generated Envoy
          xDS resources by Envoy Gateway using this patch API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of EnvoyPatchPolicy.
            properties:
              jsonPatches:
                description: JSONPatch defines the JSONPatch configuration.
                items:
                  description: EnvoyJSONPatchConfig defines the configuration for
                    patching a Envoy xDS Resource using JSONPatch semantic
                  properties:
                    name:
                      description: Name is the name of the resource
                      type: string
                    operation:
                      description: Patch defines the JSON Patch Operation
                      properties:
                        from:
                          description: From is the source location of the value to
                            be copied or moved. Only valid for move or copy operations
                            Refer to https://datatracker.ietf.org/doc/html/rfc6901
                            for more details.
                          type: string
                        op:
                          description: Op is the type of operation to perform
                          enum:
                          - add
                          - remove
                          - replace
                          - move
                          - copy
                          - test
                          type: string
                        path:
                          description: Path is the location of the target document/field
                            where the operation will be performed Refer to https://datatracker.ietf.org/doc/html/rfc6901
                            for more details.
                          type: string
                        value:
                          description: Value is the new value of the path location.
                            The value is only used by the `add` and `replace` operations.
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - op
                      - path
                      type: object
                    type:
                      description: Type is the typed URL of the Envoy xDS Resource
                      enum:
                      - type.googleapis.com/envoy.config.listener.v3.Listener
                      - type.googleapis.com/envoy.config.route.v3.RouteConfiguration
                      - type.googleapis.com/envoy.config.cluster.v3.Cluster
                      - type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment
                      - type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret
                      type: string
                  required:
                  - name
                  - operation
                  - type
                  type: object
                type: array
              priority:
                description: Priority of the EnvoyPatchPolicy. If multiple EnvoyPatchPolicies
                  are applied to the same TargetRef, they will be applied in the ascending
                  order of the priority i.e. int32.min has the highest priority and
                  int32.max has the lowest priority. Defaults to 0.
                format: int32
                type: integer
              targetRef:
                description: TargetRef is the name of the Gateway API resource this
                  policy is being attached to. By default attaching to Gateway is
                  supported and when mergeGateways is enabled it should attach to
                  GatewayClass. This Policy and the TargetRef MUST be in the same
                  namespace for this Policy to have effect and be applied to the Gateway
                  TargetRef
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. When
                      unspecified, the local namespace is inferred. Even when policy
                      targets a resource in a different namespace, it MUST only apply
                      to traffic originating from the same namespace as the policy.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
              type:
                description: Type decides the type of patch. Valid EnvoyPatchType
                  values are "JSONPatch".
                enum:
                - JSONPatch
                type: string
            required:
            - targetRef
            - type
            type: object
          status:
            description: Status defines the current status of EnvoyPatchPolicy.
            properties:
              conditions:
                description: Conditions describe the current conditions of the EnvoyPatchPolicy.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
