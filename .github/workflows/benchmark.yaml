name: Benchmarking Tests at Scale
on:
  pull_request:
    branches:
    - "main"
    - "release/v*"

jobs:
  benchmark-test:
    name: Benchmark Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Kubernetes
        uses: medyagh/setup-minikube@master

      - name: Install Envoy Gateway Pods via Kubernetes Yaml
        run: kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/latest/install.yaml

      - name: Wait for Envoy Gateway to become available
        run: kubectl wait --timeout=5m -n envoy-gateway-system deployment/envoy-gateway --for=condition=Available
        
      - name: Install the GatewayClass, Gateway, HTTPRoute and example app
        run: kubectl apply -f https://github.com/envoyproxy/gateway/releases/download/latest/quickstart.yaml -n default
        
      - name: Wait for example app to become available
        run: kubectl wait --timeout=5m -n default deployment/backend --for=condition=Available
      
      - name: Get the name of the Envoy service created the by the example Gateway
        run: |
          echo $(kubectl get svc -n envoy-gateway-system --selector=gateway.envoyproxy.io/owning-gateway-namespace=default,gateway.envoyproxy.io/owning-gateway-name=eg -o jsonpath='{.items[0].metadata.name}') >> "${ENVOY_SERVICE}"

      - name: Echo ENVOY_SERVICE 
        run: echo $ENVOY_SERVICE
      
      - name: Port forward to the Envoy service
        run: kubectl -n envoy-gateway-system port-forward service/${ENVOY_SERVICE} 8888:80 &
      
      - name: Curl the example app through Envoy proxy
        run: |
          curl --verbose --header "Host: www.example.com" http://localhost:8888/get

      #- name: Apply Gateway Configurations
      #  
      #- name: Setup Test Server Pods

      #- name: Setup Prometheus Pods

      #- name: Setup Load Gernerator

      #- name: Run Performance Tests

      #- name: Collect Test Results
