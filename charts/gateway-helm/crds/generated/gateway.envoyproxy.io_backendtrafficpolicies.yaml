---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: backendtrafficpolicies.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: BackendTrafficPolicy
    listKind: BackendTrafficPolicyList
    plural: backendtrafficpolicies
    shortNames:
    - btp
    singular: backendtrafficpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Accepted")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackendTrafficPolicy allows the user to configure the behavior
          of the connection between the downstream client and Envoy Proxy listener.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of BackendTrafficPolicy.
            properties:
              circuitBreaker:
                description: Circuit Breaker settings for the upstream connections
                  and requests. If not set, circuit breakers will be enabled with
                  the default thresholds
                properties:
                  maxConnections:
                    default: 1024
                    description: The maximum number of connections that Envoy will
                      establish to the referenced backend defined within a xRoute
                      rule.
                    format: int64
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  maxParallelRequests:
                    default: 1024
                    description: The maximum number of parallel requests that Envoy
                      will make to the referenced backend defined within a xRoute
                      rule.
                    format: int64
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  maxPendingRequests:
                    default: 1024
                    description: The maximum number of pending requests that Envoy
                      will queue to the referenced backend defined within a xRoute
                      rule.
                    format: int64
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              faultInjection:
                description: FaultInjection defines the fault injection policy to
                  be applied. This configuration can be used to inject delays and
                  abort requests to mimic failure scenarios such as service failures
                  and overloads
                properties:
                  abort:
                    description: If specified, the request will be aborted if it meets
                      the configuration criteria.
                    properties:
                      grpcStatus:
                        description: GrpcStatus specifies the GRPC status code to
                          be returned
                        format: int32
                        type: integer
                      httpStatus:
                        description: StatusCode specifies the HTTP status code to
                          be returned
                        format: int32
                        maximum: 600
                        minimum: 200
                        type: integer
                      percentage:
                        default: 100
                        description: Percentage specifies the percentage of requests
                          to be aborted. Default 100%, if set 0, no requests will
                          be aborted. Accuracy to 0.0001%.
                        type: number
                    type: object
                    x-kubernetes-validations:
                    - message: httpStatus and grpcStatus cannot be simultaneously
                        defined.
                      rule: ' !(has(self.httpStatus) && has(self.grpcStatus)) '
                    - message: httpStatus and grpcStatus are set at least one.
                      rule: ' has(self.httpStatus) || has(self.grpcStatus) '
                  delay:
                    description: If specified, a delay will be injected into the request.
                    properties:
                      fixedDelay:
                        description: FixedDelay specifies the fixed delay duration
                        type: string
                      percentage:
                        default: 100
                        description: Percentage specifies the percentage of requests
                          to be delayed. Default 100%, if set 0, no requests will
                          be delayed. Accuracy to 0.0001%.
                        type: number
                    required:
                    - fixedDelay
                    type: object
                type: object
                x-kubernetes-validations:
                - message: Delay and abort faults are set at least one.
                  rule: ' has(self.delay) || has(self.abort) '
              loadBalancer:
                description: LoadBalancer policy to apply when routing traffic from
                  the gateway to the backend endpoints
                properties:
                  consistentHash:
                    description: ConsistentHash defines the configuration when the
                      load balancer type is set to ConsistentHash
                    properties:
                      type:
                        description: ConsistentHashType defines the type of input
                          to hash on.
                        enum:
                        - SourceIP
                        type: string
                    required:
                    - type
                    type: object
                  slowStart:
                    description: SlowStart defines the configuration related to the
                      slow start load balancer policy. If set, during slow start window,
                      traffic sent to the newly added hosts will gradually increase.
                      Currently this is only supported for RoundRobin and LeastRequest
                      load balancers
                    properties:
                      window:
                        description: Window defines the duration of the warm up period
                          for newly added host. During slow start window, traffic
                          sent to the newly added hosts will gradually increase. Currently
                          only supports linear growth of traffic. For additional details,
                          see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
                        type: string
                    required:
                    - window
                    type: object
                  type:
                    description: Type decides the type of Load Balancer policy. Valid
                      LoadBalancerType values are "ConsistentHash", "LeastRequest",
                      "Random", "RoundRobin",
                    enum:
                    - ConsistentHash
                    - LeastRequest
                    - Random
                    - RoundRobin
                    type: string
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: If LoadBalancer type is consistentHash, consistentHash
                    field needs to be set.
                  rule: 'self.type == ''ConsistentHash'' ? has(self.consistentHash)
                    : !has(self.consistentHash)'
                - message: Currently SlowStart is only supported for RoundRobin and
                    LeastRequest load balancers.
                  rule: 'self.type in [''Random'', ''ConsistentHash''] ? !has(self.slowStart)
                    : true '
              proxyProtocol:
                description: ProxyProtocol enables the Proxy Protocol when communicating
                  with the backend.
                properties:
                  version:
                    description: Version of ProxyProtol Valid ProxyProtocolVersion
                      values are "V1" "V2"
                    enum:
                    - V1
                    - V2
                    type: string
                required:
                - version
                type: object
              rateLimit:
                description: RateLimit allows the user to limit the number of incoming
                  requests to a predefined value based on attributes within the traffic
                  flow.
                properties:
                  global:
                    description: Global defines global rate limit configuration.
                    properties:
                      rules:
                        description: Rules are a list of RateLimit selectors and limits.
                          Each rule and its associated limit is applied in a mutually
                          exclusive way. If a request matches multiple rules, each
                          of their associated limits get applied, so a single request
                          might increase the rate limit counters for multiple rules
                          if selected. The rate limit service will return a logical
                          OR of the individual rate limit decisions of all matching
                          rules. For example, if a request matches two rules, one
                          rate limited and one not, the final decision will be to
                          rate limit the request.
                        items:
                          description: RateLimitRule defines the semantics for matching
                            attributes from the incoming requests, and setting limits
                            for them.
                          properties:
                            clientSelectors:
                              description: "ClientSelectors holds the list of select
                                conditions to select specific clients using attributes
                                from the traffic flow. All individual select conditions
                                must hold True for this rule and its limit to be applied.
                                \n If no client selectors are specified, the rule
                                applies to all traffic of the targeted Route. \n If
                                the policy targets a Gateway, the rule applies to
                                each Route of the Gateway. Please note that each Route
                                has its own rate limit counters. For example, if a
                                Gateway has two Routes, and the policy has a rule
                                with limit 10rps, each Route will have its own 10rps
                                limit."
                              items:
                                description: RateLimitSelectCondition specifies the
                                  attributes within the traffic flow that can be used
                                  to select a subset of clients to be ratelimited.
                                  All the individual conditions must hold True for
                                  the overall condition to hold True.
                                properties:
                                  headers:
                                    description: Headers is a list of request headers
                                      to match. Multiple header values are ANDed together,
                                      meaning, a request MUST match all the specified
                                      headers. At least one of headers or sourceCIDR
                                      condition must be specified.
                                    items:
                                      description: HeaderMatch defines the match attributes
                                        within the HTTP Headers of the request.
                                      properties:
                                        name:
                                          description: Name of the HTTP header.
                                          maxLength: 256
                                          minLength: 1
                                          type: string
                                        type:
                                          default: Exact
                                          description: Type specifies how to match
                                            against the value of the header.
                                          enum:
                                          - Exact
                                          - RegularExpression
                                          - Distinct
                                          type: string
                                        value:
                                          description: Value within the HTTP header.
                                            Due to the case-insensitivity of header
                                            names, "foo" and "Foo" are considered
                                            equivalent. Do not set this field when
                                            Type="Distinct", implying matching on
                                            any/all unique values within the header.
                                          maxLength: 1024
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  sourceCIDR:
                                    description: SourceCIDR is the client IP Address
                                      range to match on. At least one of headers or
                                      sourceCIDR condition must be specified.
                                    properties:
                                      type:
                                        default: Exact
                                        type: string
                                      value:
                                        description: Value is the IP CIDR that represents
                                          the range of Source IP Addresses of the
                                          client. These could also be the intermediate
                                          addresses through which the request has
                                          flown through and is part of the  `X-Forwarded-For`
                                          header. For example, `192.168.0.1/32`, `192.168.0.0/24`,
                                          `001:db8::/64`.
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                    required:
                                    - value
                                    type: object
                                type: object
                              maxItems: 8
                              type: array
                            limit:
                              description: Limit holds the rate limit values. This
                                limit is applied for traffic flows when the selectors
                                compute to True, causing the request to be counted
                                towards the limit. The limit is enforced and the request
                                is ratelimited, i.e. a response with 429 HTTP status
                                code is sent back to the client when the selected
                                requests have reached the limit.
                              properties:
                                requests:
                                  type: integer
                                unit:
                                  description: RateLimitUnit specifies the intervals
                                    for setting rate limits. Valid RateLimitUnit values
                                    are "Second", "Minute", "Hour", and "Day".
                                  enum:
                                  - Second
                                  - Minute
                                  - Hour
                                  - Day
                                  type: string
                              required:
                              - requests
                              - unit
                              type: object
                          required:
                          - limit
                          type: object
                        maxItems: 16
                        type: array
                    required:
                    - rules
                    type: object
                  local:
                    description: Local defines local rate limit configuration.
                    properties:
                      rules:
                        description: Rules are a list of RateLimit selectors and limits.
                          If a request matches multiple rules, the strictest limit
                          is applied. For example, if a request matches two rules,
                          one with 10rps and one with 20rps, the final limit will
                          be based on the rule with 10rps.
                        items:
                          description: RateLimitRule defines the semantics for matching
                            attributes from the incoming requests, and setting limits
                            for them.
                          properties:
                            clientSelectors:
                              description: "ClientSelectors holds the list of select
                                conditions to select specific clients using attributes
                                from the traffic flow. All individual select conditions
                                must hold True for this rule and its limit to be applied.
                                \n If no client selectors are specified, the rule
                                applies to all traffic of the targeted Route. \n If
                                the policy targets a Gateway, the rule applies to
                                each Route of the Gateway. Please note that each Route
                                has its own rate limit counters. For example, if a
                                Gateway has two Routes, and the policy has a rule
                                with limit 10rps, each Route will have its own 10rps
                                limit."
                              items:
                                description: RateLimitSelectCondition specifies the
                                  attributes within the traffic flow that can be used
                                  to select a subset of clients to be ratelimited.
                                  All the individual conditions must hold True for
                                  the overall condition to hold True.
                                properties:
                                  headers:
                                    description: Headers is a list of request headers
                                      to match. Multiple header values are ANDed together,
                                      meaning, a request MUST match all the specified
                                      headers. At least one of headers or sourceCIDR
                                      condition must be specified.
                                    items:
                                      description: HeaderMatch defines the match attributes
                                        within the HTTP Headers of the request.
                                      properties:
                                        name:
                                          description: Name of the HTTP header.
                                          maxLength: 256
                                          minLength: 1
                                          type: string
                                        type:
                                          default: Exact
                                          description: Type specifies how to match
                                            against the value of the header.
                                          enum:
                                          - Exact
                                          - RegularExpression
                                          - Distinct
                                          type: string
                                        value:
                                          description: Value within the HTTP header.
                                            Due to the case-insensitivity of header
                                            names, "foo" and "Foo" are considered
                                            equivalent. Do not set this field when
                                            Type="Distinct", implying matching on
                                            any/all unique values within the header.
                                          maxLength: 1024
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  sourceCIDR:
                                    description: SourceCIDR is the client IP Address
                                      range to match on. At least one of headers or
                                      sourceCIDR condition must be specified.
                                    properties:
                                      type:
                                        default: Exact
                                        type: string
                                      value:
                                        description: Value is the IP CIDR that represents
                                          the range of Source IP Addresses of the
                                          client. These could also be the intermediate
                                          addresses through which the request has
                                          flown through and is part of the  `X-Forwarded-For`
                                          header. For example, `192.168.0.1/32`, `192.168.0.0/24`,
                                          `001:db8::/64`.
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                    required:
                                    - value
                                    type: object
                                type: object
                              maxItems: 8
                              type: array
                            limit:
                              description: Limit holds the rate limit values. This
                                limit is applied for traffic flows when the selectors
                                compute to True, causing the request to be counted
                                towards the limit. The limit is enforced and the request
                                is ratelimited, i.e. a response with 429 HTTP status
                                code is sent back to the client when the selected
                                requests have reached the limit.
                              properties:
                                requests:
                                  type: integer
                                unit:
                                  description: RateLimitUnit specifies the intervals
                                    for setting rate limits. Valid RateLimitUnit values
                                    are "Second", "Minute", "Hour", and "Day".
                                  enum:
                                  - Second
                                  - Minute
                                  - Hour
                                  - Day
                                  type: string
                              required:
                              - requests
                              - unit
                              type: object
                          required:
                          - limit
                          type: object
                        maxItems: 16
                        type: array
                    type: object
                  type:
                    description: Type decides the scope for the RateLimits. Valid
                      RateLimitType values are "Global" or "Local".
                    enum:
                    - Global
                    - Local
                    type: string
                required:
                - type
                type: object
              targetRef:
                description: targetRef is the name of the resource this policy is
                  being attached to. This Policy and the TargetRef MUST be in the
                  same namespace for this Policy to have effect and be applied to
                  the Gateway.
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. When
                      unspecified, the local namespace is inferred. Even when policy
                      targets a resource in a different namespace, it MUST only apply
                      to traffic originating from the same namespace as the policy.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  sectionName:
                    description: "SectionName is the name of a section within the
                      target resource. When unspecified, this targetRef targets the
                      entire resource. In the following resources, SectionName is
                      interpreted as the following: \n * Gateway: Listener Name *
                      Service: Port Name \n If a SectionName is specified, but does
                      not exist on the targeted object, the Policy must fail to attach,
                      and the policy implementation should record a `ResolvedRefs`
                      or similar Condition in the Policy's status."
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: this policy can only have a targetRef.group of gateway.networking.k8s.io
                  rule: self.group == 'gateway.networking.k8s.io'
                - message: this policy can only have a targetRef.kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute
                  rule: self.kind in ['Gateway', 'HTTPRoute', 'GRPCRoute', 'UDPRoute',
                    'TCPRoute', 'TLSRoute']
                - message: this policy does not yet support the sectionName field
                  rule: '!has(self.sectionName)'
              tcpKeepalive:
                description: TcpKeepalive settings associated with the upstream client
                  connection. Disabled by default.
                properties:
                  idleTime:
                    description: The duration a connection needs to be idle before
                      keep-alive probes start being sent. The duration format is Defaults
                      to `7200s`.
                    pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                    type: string
                  interval:
                    description: The duration between keep-alive probes. Defaults
                      to `75s`.
                    pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                    type: string
                  probes:
                    description: The total number of unacknowledged probes to send
                      before deciding the connection is dead. Defaults to 9.
                    format: int32
                    type: integer
                type: object
            required:
            - targetRef
            type: object
          status:
            description: status defines the current status of BackendTrafficPolicy.
            properties:
              conditions:
                description: Conditions describe the current conditions of the BackendTrafficPolicy.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
