apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: backend-namespaces
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: http-with-backend-tls
  namespace: gateway-conformance-infra
spec:
  parentRefs:
  - name: backend-namespaces
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /backend-tls
    backendRefs:
    - name: tls-backend
      port: 443
---
# openssl req -x509 -sha256 -nodes -days 36500 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout ca.key -out ca.crt
apiVersion: v1
kind: ConfigMap
metadata:
  name: ca-certificate
  namespace: gateway-conformance-infra
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDPTCCAiWgAwIBAgIUCPaRrg+0wCmznOMf9HxtYXPc+rowDQYJKoZIhvcNAQEL
    BQAwLTEVMBMGA1UECgwMZXhhbXBsZSBJbmMuMRQwEgYDVQQDDAtleGFtcGxlLmNv
    bTAgFw0yNTA1MTMwMTI0MDRaGA8yMTI1MDQxOTAxMjQwNFowLTEVMBMGA1UECgwM
    ZXhhbXBsZSBJbmMuMRQwEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcN
    AQEBBQADggEPADCCAQoCggEBAO7E7Gtx+tUS5UujhJ/DdSqsqQQ391WnrQbI1i9c
    tiYSj8p8/eq1dAw4u3gG5426UaVph8LG5GLYCGT8XPmeWQMZncGvf9TeqlmBz/WM
    NJ6Ow7dh6pWfGuZ7FHkv+l7L7pd/SFd8z0yuLBeTkE3weZ0jcnoThpm7Unu5ULdV
    /ZE0rnAG7cjqiTALj/QE1gF0VkXw6D9fT5SamKYasYT0ZQND5tVOlLoqXjYU1fJF
    Gyqs7hI24c6KeB1G6giWvwiUSzHBmCL0seCDDGeIjhtO7YubRZqNHaE1cw3FFlb7
    FwXbff8XVb85Mxy6Jwdq27sCy4iMUSBVgbRhLRb9Cp+iUBMCAwEAAaNTMFEwHQYD
    VR0OBBYEFAhZJV5u/3sXGacaUkuP5zIFZYGiMB8GA1UdIwQYMBaAFAhZJV5u/3sX
    GacaUkuP5zIFZYGiMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEB
    AJJmuyGwjP9KG1uwhfJ5jq3b+vUUZW29HnFzEfd50GAk++W1WBTyxpWXCX0VW4Va
    /QcJJiROXoKUqGtqPHYKx8UQ/mzrmlRGMgKwYReoMLU6ukydox9AUDVQFnOQZm26
    QTCwXb288715UeK+c+TdmpkFkTPh3F67HDn0q9mtoT9g9BckJRxoHaez1LfxbytW
    nNBx3Rpk1Ps79EfjtKL1BJIvG/N/ar9Jey2CR+tlVKwrrPCGG1ObcGvHooQWOOCq
    7jD99R8PXZV5VDyP8qoHPYYyqkaQH4nQtVm288vFNQRF+/vUUQsNKl/JQcTG2UCc
    IwP0azf9fJ+Xxx19TOMO3FA=
    -----END CERTIFICATE-----
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: policy-btls
  namespace: gateway-conformance-infra
spec:
  targetRefs:
  - group: ""
    kind: Service
    name: tls-backend
    sectionName: https
  validation:
    caCertificateRefs:
    - name: ca-certificate
      group: ""
      kind: ConfigMap
    hostname: example.com
---
apiVersion: v1
kind: Service
metadata:
  name: tls-backend
  namespace: gateway-conformance-infra
spec:
  selector:
    app: tls-backend
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tls-backend
  namespace: gateway-conformance-infra
  labels:
    app: tls-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tls-backend
  template:
    metadata:
      labels:
        app: tls-backend
    spec:
      containers:
      - name: tls-backend
        image: gcr.io/k8s-staging-gateway-api/echo-basic:v20231214-v1.0.0-140-gf544a46e
        volumeMounts:
        - name: secret-volume
          mountPath: /etc/secret-volume
        - name: client-ca-volume
          mountPath: /etc/client-ca
        env:
        - name: TLS_CLIENT_CACERTS
          value: /etc/client-ca/ca.crt
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SERVICE_NAME
          value: tls-backend
        - name: TLS_SERVER_CERT
          value: /etc/secret-volume/crt
        - name: TLS_SERVER_PRIVKEY
          value: /etc/secret-volume/key
        resources:
          requests:
            cpu: 10m
      volumes:
      - name: client-ca-volume
        configMap:
          name: ca-certificate
      - name: secret-volume
        secret:
          secretName: backend-tls-certificate-tls-settings
          items:
          - key: tls.crt
            path: crt
          - key: tls.key
            path: key
---
# This is used as the client certificate for the envoy to connect to the backend service
# openssl req -out envoy.csr -newkey rsa:2048 -nodes -keyout envoy.key -subj "/CN=envoy/O=example organization"
# openssl x509 -req -days 36500 -CA ca.crt -CAkey ca.key -set_serial 0 -in envoy.csr -out envoy.crt
apiVersion: v1
kind: Secret
metadata:
  name: client-tls-certificate
  namespace: envoy-gateway-system
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwakNDQWJvQ0FRQXdEUVlKS29aSWh2Y05BUUVMQlFBd0xURVZNQk1HQTFVRUNnd01aWGhoYlhCc1pTQkoKYm1NdU1SUXdFZ1lEVlFRRERBdGxlR0Z0Y0d4bExtTnZiVEFnRncweU5UQTFNVE13TWpVMU1EUmFHQTh5TVRJMQpNRFF4T1RBeU5UVXdORm93THpFT01Bd0dBMVVFQXd3RlpXNTJiM2t4SFRBYkJnTlZCQW9NRkdWNFlXMXdiR1VnCmIzSm5ZVzVwZW1GMGFXOXVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWlIS3EKU016TkpkM2lCbTg3MzB1OFQ0R25wK2FMaG1rYWFvSHAwMXB6YWJJVitxRUlnREJZUFNLemtsQnk2UVRYcDZ2Zwp4UXIvbDNEdGRqQWFEOEpoNVRRU2syNnRlbnJVWkhyTHFlTTl1VGtZR29jMmF1Nlk4V0tHbCt5QTBKUHNET3VKCjZNRlpZUy82Q2oveDJ0RkZEdFloVjR3cmJXQzUxVU1mY05iYzFoNHozSndGUlpLZi9BdkdDa1c2NkUvZFFDeXEKalRvMEs0SDRqNjZncWJXdGRLY1ZGOTUySUtwYkZwRmh4WmM3VWRJbGNUK1FyVUNCaHFVLzRKNmJXODg1TEZBSwpmWnpLbzBFckl0RFJ3WGNKZU0xSVUrTGs5bkJnUjZYTTVOOHEvVTluVHQ3MGFFR25sVWJSWHhyNmsvVWF1QjdBClRqbXJsVnZBOFVVU1BZbXpVUUlEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTZyNkd2WVF5NHEwRksKWWlqdkR6bTlOS1JaWlY1ajU0WEEwcWFwRGhUQ3loYzFueGQ5cTRLamNZQmhPRzhBczBkWi9SNTg1bzRnZDhpZQpDUmhQSWJ2cEJMZnc3MWFxOVIxSHBIOW9JRlBLN1VnemhpTnQyL0tVWkdURTVGZkRFNFhJa2E3ckVjT0RzMlNKClFxMnkwMmRXTmxLSDZ1cThLTi9zenBYR1RnRUkxT09BYSs2SW11QkF0SVJRY3Jra2JJcyt4eUxWMWlGNnNZZXQKTFdMMnA1MUdOanBiZFdaOXBrZWdvd1JJSXBEWmhDbFVPZHlMREFuQjQ3dE8vNGRTVGxZdndvSUs0UGN3RGxQRQpkUzdqZDI3Y0FzZ0ttb2NyMDhIOHVGUUZaK1VCWmN3YU5qL0lNODhjS0QxWHJIY2F3SXRsc0dKVHlxZkNhUmFPCjNPc0ZSUWNFCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ0ljcXBJek0wbDNlSUcKYnp2ZlM3eFBnYWVuNW91R2FScHFnZW5UV25OcHNoWDZvUWlBTUZnOUlyT1NVSExwQk5lbnErREZDditYY08xMgpNQm9Qd21IbE5CS1RicTE2ZXRSa2VzdXA0ejI1T1JnYWh6WnE3cGp4WW9hWDdJRFFrK3dNNjRub3dWbGhML29LClAvSGEwVVVPMWlGWGpDdHRZTG5WUXg5dzF0eldIalBjbkFWRmtwLzhDOFlLUmJyb1Q5MUFMS3FOT2pRcmdmaVAKcnFDcHRhMTBweFVYM25ZZ3Fsc1drV0hGbHp0UjBpVnhQNUN0UUlHR3BUL2ducHRienprc1VBcDluTXFqUVNzaQowTkhCZHdsNHpVaFQ0dVQyY0dCSHBjemszeXI5VDJkTzN2Um9RYWVWUnRGZkd2cVQ5UnE0SHNCT09hdVZXOER4ClJSSTlpYk5SQWdNQkFBRUNnZ0VBUDBNMnUya2xKb3pnK2szQmF5N1FvT1pDeHVCbnlVcGF3bzM0VFJOdlZrNkkKelRxelY4ZlNhWW40eXZvOHhOZ0hhc2lRZnBzeVZOTTViZVl3ZHlVUFFYY3FzNnVKaURPQjNSSm44aDBYWlpUWQpuWmdhUFdyaGcyMUViUlRzeG9nRzFoaXd5TGM0aXd4MCtDS2NybkQvZlRqL25Ya3lPMVN3NUhWcUV1V3ozeHZWCmE0WW1TdTJnRkNQZlZDemhQT1IwbGc5ZFRYZmlWQzEvTHpXRXllbEVpMExtMm90cFJaUXVUd1ZzekVuLzNjQTEKamlKREJEWVEvS1ZESTJ2QW9OK25rRWozMTMwVHFaaUphNlQrYTkreEdqMHpyQzNXdU9yU0oyVml2N1JwSytMWgpveGxpazBkNkU5Q3lIa2JXWTRPQlM3UEt2c1hqRHpFY3Vuc29SRngzMXdLQmdRQzgwSTV0YkNFV0VqaHRSdmdPCldVUkJ1OFNPek9qT2hGc0Y1ekNjMEJzWlVHak1pUm1KYUFLa2t2MHhvOVVmK05DU2NQWVJpTFJoZkoyRUZuM2wKR2dYOFJrdGZKMTRFd2d0d0ZJd1pzSkhuOEczdXJPcjJRd3JCcTNCb0dGb3NyR091L0V5Wk5UYmF4VUZrZVhBbQp1TysvZmpaSFVnZXFQSVdvR0ZUclk0SzhCd0tCZ1FDNC8rN2NLLzQ0Y3ZwTHpPK0xzY25vc2VnY2xqUWpkZm41CjNDQzNQL2E0UjlveFR5VWorejlPWXdiUkhMTmYwTzJQNWRhUGdTV0pIV2owM0FUemJ6L2xxVi9Td2hkTTNFejAKU2pqU2Z4NktKS2VyK0dyeXQ2V2tIa3k5QjVwcVN5UVlueDBBZ0lvdURuY3NQazI2cUV4Mkdzb1RURlowR3EvMQpHbStBeDkxdjV3S0JnUUNzL2ZRUWd3cEpXNFpCY00xaThCeWVrVGVFa204V2o2T0o1QWpoRTdaUVdpQzZqVDVOCmEzTkliN2YxSENMdmVSczNvTEdDM1JwUFcwcENOQTFDczdZYUxobHVZL1k3SzhJby9WcGpTeWhUTmpDeWhkRjgKc1c0UWhVK212L0VXanhlQnduMDN2YzYxWUJjS3hFeWgzYjBqV0xMSVkzck1XVWtuK3FzTFE1QUxUd0tCZ0RHdgpRclpNOW1Td3RIb2hHd0NZaWhKOW5VbjRLUjZRODhiZ0VNVkdYM3VVaUl3UHBuam9aRk1vRTArYjlxeTREdVZECnBBRThmUms3RmRJVk9Sc3IrS3cwZGZERGdjQjV0ZzB4MWRycW13Z2MyZzg4azNTR1QrMG8yaEUyZG9rdmp3MHgKeG5jNURtTmFMVFZyc2pKOE9yVEpjeFlGdlg1SElKU2lPZW9MUTNSbkFvR0JBTEpuejJja3dZVXM5UHFVNjd4TgpRc21UM25ON2g5SEZ2WVJTR2xJUWROT2l3SlpiMWRZUHM2QzFlYUF1U09iWHNEWkRsNmtBVXZ3U1JHRTRKa2ZnCmpBQ2h5QVRKV3NJTVNMbkY1SHlJeE1GQVZwa3d1QW93RlIrdCt2NXppakxJZ2RPWnhhaG9BNjdENVcvb3hsMlAKMWRSdDVuaS8zTGNRaEdpMmtDWG9vK2JnCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# cat > openssl.conf  <<EOF
# [req]
# req_extensions = v3_req
# prompt = no
#
# [v3_req]
# keyUsage = keyEncipherment, digitalSignature
# extendedKeyUsage = serverAuth
# subjectAltName = @alt_names
# [alt_names]
# DNS.1 = example.com
# EOF
# This is used as the server certificate for the backend service
# openssl req -out backend.csr -newkey rsa:2048 -nodes -keyout backend.key -subj "/CN=example.com/O=example organization"
# openssl x509 -req -days 36500 -CA ca.crt -CAkey ca.key -set_serial 0 -in backend.csr -out backend.crt
apiVersion: v1
kind: Secret
metadata:
  name: backend-tls-certificate-tls-settings
  namespace: gateway-conformance-infra
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREF0TVJVd0V3WURWUVFLREF4bGVHRnQKY0d4bElFbHVZeTR4RkRBU0JnTlZCQU1NQzJWNFlXMXdiR1V1WTI5dE1DQVhEVEkxTURVeE16QXpORFF5TVZvWQpEekl4TWpVd05ERTVNRE0wTkRJeFdqQTFNUlF3RWdZRFZRUUREQXQwYkhNdFltRmphMlZ1WkRFZE1Cc0dBMVVFCkNnd1VaWGhoYlhCc1pTQnZjbWRoYm1sNllYUnBiMjR3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNseUF1N3JXaE5HelN6N213VE9yV29tQ3dhTllhWWs3ZStJbzZHMWJUQ3ZhSnpjNFA0bWljdgpHbUhDeXBobTI4RlJoWXdPME4vY2dib2R2S0xRVWM2c2ZKWkN6WjZ2YlVxOExVb3RMcVk4b3RienRGdjVmV25OClNNKzh6NEhKTm5MK01BVi8zcTJReUdUSWo1Ty83TEtrdVE3M2w2d0dweTJQRExaN3pkdjlLVDdBNy9BeCtPNUkKdVpJMUZOMlpHYytla0hZazhiYWhUOXE2b1RGSWVOa29KQ3NackxJQzJlQXNwRHYxdVVBQVBvMFFhdDJwVi9TZQpxNmlOOVlJcVRSK0srOTNlUGdqWjZPR1I4Q2g2RHFsQ3ZTOTV5SUJXRWpYeUtjYytnZnVCVFo3R3hDbnVRSElFCnRRckJlWkZmMmNtNS9CQXNMZ3hOZmxrOWpjbTFvL1BWQWdNQkFBR2pmREI2TUFzR0ExVWREd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBV0JnTlZIUkVFRHpBTmdndGxlR0Z0Y0d4bExtTnZiVEFkQmdOVgpIUTRFRmdRVWRZNVlQamQwVXhpTWZxNHZWc0RYRkdQWEFsc3dId1lEVlIwakJCZ3dGb0FVQ0ZrbFhtNy9leGNaCnB4cFNTNC9uTWdWbGdhSXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTFk2SEZDUE84WXE4YUVjVE5vaHh3a3kKenVWcEpjM1hhUXdLSkZDTjYranhISXFMMi9KZ0tKWUhJdG5aVG45WTBLdVpkWmpaQ05KUjVYOTBURzIrWTVKWApWUHp3aFl5VHFNUzhUakNlT290aFR0SUtUUkEyL1pxK3h1bzB6eFROTVVGdit6RS90MU9uUXVGTUEwQ3dNUHY5ClUrMnlmbEVSWG1VTnF0SXh2NXJrbVdRMlBlaFVwOS9HZUZZbzhmU2E4VEtRZHBSbmljVWhNYkFNbSs5SFNoaisKNytnWGlreExkNm5CWGJBV0tUOEZab0Q0aEk5VWcvVFVPNVNtSFBPVTBWUFM4K1NneWJWbWFTZGRkUURuRC8wdwp4SjFvamViK0U4TTdkd2ljcEVqY2RwRWxYWlhQeVMxai9Ra2VmZVdTYnduK013amNwUjRWWUJpNVd6M0RLdjg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ2x5QXU3cldoTkd6U3oKN213VE9yV29tQ3dhTllhWWs3ZStJbzZHMWJUQ3ZhSnpjNFA0bWljdkdtSEN5cGhtMjhGUmhZd08wTi9jZ2JvZAp2S0xRVWM2c2ZKWkN6WjZ2YlVxOExVb3RMcVk4b3RienRGdjVmV25OU00rOHo0SEpObkwrTUFWLzNxMlF5R1RJCmo1Ty83TEtrdVE3M2w2d0dweTJQRExaN3pkdjlLVDdBNy9BeCtPNUl1WkkxRk4yWkdjK2VrSFlrOGJhaFQ5cTYKb1RGSWVOa29KQ3NackxJQzJlQXNwRHYxdVVBQVBvMFFhdDJwVi9TZXE2aU45WUlxVFIrSys5M2VQZ2paNk9HUgo4Q2g2RHFsQ3ZTOTV5SUJXRWpYeUtjYytnZnVCVFo3R3hDbnVRSElFdFFyQmVaRmYyY201L0JBc0xneE5mbGs5CmpjbTFvL1BWQWdNQkFBRUNnZ0VBQThrWUgzNTdzYnNMem9vRXRNR3o4VGdjVmJMZ01tNjVGT0hrSUVjVC9CaHAKYzdweENvVzJuRmc5WUQzUkVoUTFpMStCemJyT1NkSTZoa0JPOVhQUXhOYUpkZGdOSmhOWVVBaTJ0MlpuekYycAppK0lUOFpRQURQeDdKZVFWSWh1WXI1NDRHZTNqUjdtVHQ1S3p2SCt5cXBsQk1yMG5ZL1dBVUZKcGZsVTZqMExPCjVSR29DaFk0aTQ1QTVOdmlxeG9Ga3Fxd3Y1N3hsUzhXcWJ3VkZ4ZTVxU0lOZkZNOUN0b25hM25zOGpjRkhqcmgKaVVaU2ZaQWVUZUhwQzRUd3NDM1graDhLUkNxVzZLQXREV00rRE83UE9hdmw0VDZrakVHVFIxL3AwQ3o0TVNPcQpLQ1Y2SWx3TmpzS1U2c2VWN0FLZHAxVUdsWmNxeERLN2drZk1EOFZWUVFLQmdRRGlsTGJDL2RrR0FVbVpOMUxNClFOQXByTm8yWVR5ZDRTcjhoekV2dzMwWEhCc3daYTBXSjVNUXFtT1oxY0ZWTndqNm1hUERuNFYyNWNPcWx1Y0IKZ2ZWUVRqdDNKN1FOVzYvSXIzV1V5TnZLQzlJR3p6RVBPaWxKK1VrcXRNekFWbGZhZk1sd1oxVWt5dXcvdHJSdApiOHplRno0OSs4V2JFTWdZczRraVdsTktOUUtCZ1FDN1RtMkJFZDN3VzN5TitHaEE1MFFrN2FXVnEvdGVzZFNxCkRsd2JVZ21TTEQ2V2tLS1NXTTRwbzJGUjlOMmFBQWs0ZE91VU12SG5ocjlLY1lyVStQNitPT1pQd1VGYUpDUjAKRFVmSDdEMkpWNzM5R3hBLzhlUmg3ajBLV05IK0tnc3ZVcTVMdXcvc2hSMXd2amU0VWlaM2ZhelFkV1BaR04regpQSTc4eXQ0M0lRS0JnRkFaUW9Lc09veGs2Qi9CN3dORjVsRFZTazd2RVA2L0d2TXExN2lLNHkzSVFkUmFIVlkzCnAwVzg5bmpybCswSUI2U1BxOVQ4RDdKNGh6TkhKV0xqRGxYVlVqQk5XTmxnRUVSaHdxOVdVbHlhMFNTWEdrREgKenREWHo0WEpaSmlaN1hUUHFHYVVJUVZndHlQTzh2bTlEQzkzQ0FuaGQzblo5T0xHbFRRUHVtSUJBb0dBU0I2UQpoMHZyMnFvL01TTGVjVzhhaStWOUJqNHNFWEFEWkY4WEUrWG9qWUcvcjVXTkl6QlNZVEhwUFBjOWhCaFRkSXVBClVaVzBFdU9OTUFxNzIvanJqUzYzYnlvSUViOHMwZ3B6QXdWeFJEcW1pcGdyRDVRQnpicy9nWVpsaEttSG1QY0sKNlZuamJieHJjNGVxU0t4STUyVmFid0ZrS3FrcktRWStRQk9Vc0VFQ2dZQll1RzcxUzRqVGR3dlJkZE13WGdvZwpBTU1LbEhLV2ZncXI4MlIrcjVUMXBOdXN3K0JYdjhKUUhDMFNRWDdmTWdBanIvcnVWZTByaEVoZ3g3UDBkbmcxCjR5ZEM3UTZ5eUdxRGNtL3RCYmRGMWVUN1hwZS9GNkd1bEhkNGtMcXV1ZkJ4WnJxVWhyZTN1R2ZWZDA5aCttTm0KN1lGNE5GZk1SNlZsWTQ4SWx5VFZvdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
