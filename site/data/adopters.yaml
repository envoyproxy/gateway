adopters:
  - name: "AllFactors"
    logo: "/logos/allfactors.svg"
    url: "https://allfactors.com/"
    description: "Routing all customer traffic to our various backends. Every time a new customer signs up we dynamically add a route to a new hostname so Envoy Gateway is deeply integrated with our product."
  - name: "Tetrate"
    logo: "/logos/tetrate.svg"
    url: "https://www.tetrate.io"
    description: "Tetrate provides Enterprise Gateway (TEG) to end users, which includes a 100% upstream distribution of Envoy Gateway, and management to deliver applications securely, authenticate user traffic, protect services with rate limiting and WAF, and integrate with your observability stack to monitor and observe activity."
  - name: "Airspace Link"
    logo: "/logos/airspacelink.svg"
    url: "https://airspacelink.com/"
    description: "Airspace Link is using Envoy Gateway to route all public APIs to Kubernetes clusters, developers are manipulating routes descriptions using agnostic manifest files, which are then automatically provisioned using Envoy Gateway."
  - name: "Teleport"
    logo: "/logos/teleport.svg"
    url: "https://goteleport.com/"
    description: "Teleport is using Envoy Gateway to manage dynamic routing for all traffic to the Teleport Cloud Platform."
  - name: "Tencent Cloud"
    logo: "/logos/tencent-cloud.png"
    url: "https://www.tencentcloud.com"
    description: "Tencent Cloud is using Envoy Gateway as a Kubernetes Cluster Network Addon to manage dynamic routing in the Tencent Kubernetes Engine."
  - name: "QuantCo"
    logo: "/logos/quantco.png"
    url: "https://www.quantco.com"
    description: "QuantCo is using Envoy Gateway to expose various services from our K8s clusters in a secure and flexible way, where developers can deploy and manage their apps and cluster administrators can enforce common security policies like OIDC authentication."
  - name: "Titan"
    logo: "/logos/titan.svg"
    url: "https://www.titan.email"
    description: "Titan uses Envoy Gateway to enhance observability and centralize security for its Kubernetes services, managing critical policies like rate limiting, IP blocking, and access controlsâ€”freeing developers from the burden of handling service security."
