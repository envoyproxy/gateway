gatewayClass:
  metadata:
    creationTimestamp: null
    name: eg
    namespace: envoy-gateway-system
  spec:
    controllerName: gateway.envoyproxy.io/gatewayclass-controller
  status:
    conditions:
    - lastTransitionTime: null
      message: Valid GatewayClass
      reason: Accepted
      status: "True"
      type: Accepted
    supportedFeatures:
    - GRPCRoute
    - GatewayPort8080
    - HTTPRouteBackendProtocolH2C
    - HTTPRouteBackendProtocolWebSocket
    - HTTPRouteBackendTimeout
    - HTTPRouteDestinationPortMatching
    - HTTPRouteHostRewrite
    - HTTPRouteMethodMatching
    - HTTPRouteParentRefPort
    - HTTPRoutePathRedirect
    - HTTPRoutePathRewrite
    - HTTPRoutePortRedirect
    - HTTPRouteQueryParamMatching
    - HTTPRouteRequestMirror
    - HTTPRouteRequestMultipleMirrors
    - HTTPRouteRequestTimeout
    - HTTPRouteResponseHeaderModification
    - HTTPRouteSchemeRedirect
    - ReferenceGrant
    - TLSRoute
gateways:
- metadata:
    creationTimestamp: null
    name: eg
    namespace: envoy-gateway-system
  spec:
    gatewayClassName: eg
    listeners:
    - name: http
      port: 80
      protocol: HTTP
  status:
    listeners:
    - attachedRoutes: 1
      conditions:
      - lastTransitionTime: null
        message: Sending translated listener configuration to the data plane
        reason: Programmed
        status: "True"
        type: Programmed
      - lastTransitionTime: null
        message: Listener has been successfully translated
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Listener references have been resolved
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      name: http
      supportedKinds:
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
      - group: gateway.networking.k8s.io
        kind: GRPCRoute
httpRoutes:
- kind: HTTPRoute
  metadata:
    creationTimestamp: null
    name: backend
    namespace: envoy-gateway-system
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - name: eg
    rules:
    - backendRefs:
      - group: ""
        kind: Service
        name: backend
        port: 3000
        weight: 1
      matches:
      - path:
          type: PathPrefix
          value: /
  status:
    parents:
    - conditions:
      - lastTransitionTime: null
        message: Route is accepted
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Resolved all the Object references for the Route
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
      parentRef:
        name: eg
xds:
  envoy-gateway-system/eg:
    '@type': type.googleapis.com/envoy.admin.v3.ClustersConfigDump
    dynamicActiveClusters:
    - cluster:
        '@type': type.googleapis.com/envoy.config.cluster.v3.Cluster
        circuitBreakers:
          thresholds:
          - maxRetries: 1024
        commonLbConfig:
          localityWeightedLbConfig: {}
        connectTimeout: 10s
        dnsLookupFamily: V4_ONLY
        edsClusterConfig:
          edsConfig:
            ads: {}
            resourceApiVersion: V3
          serviceName: httproute/envoy-gateway-system/backend/rule/0
        lbPolicy: LEAST_REQUEST
        name: httproute/envoy-gateway-system/backend/rule/0
        outlierDetection: {}
        perConnectionBufferLimitBytes: 32768
        type: EDS
