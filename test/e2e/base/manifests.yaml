# Copy from https://github.com/kubernetes-sigs/gateway-api/blob/main/conformance/base/manifests.yaml
# This file contains the base resources that most conformance tests will rely
# on. This includes 3 namespaces along with Gateways, Services and Deployments
# that can be used as backends for routing traffic. The most important
# resources included are the Gateways (all in the gateway-conformance-infra
# namespace):
# - same-namespace (only supports route in same ns)
# - all-namespaces (supports routes in all ns)
# - backend-namespaces (supports routes in ns with backend label)
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-infra
  labels:
    gateway-conformance: infra
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: same-namespace
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Same
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: all-namespaces
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: backend-namespaces
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            gateway-conformance: backend
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: my-tcp-gateway
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: foo
    protocol: TCP
    port: 8080
    allowedRoutes:
      kinds:
      - kind: TCPRoute
  - name: bar
    protocol: TCP
    port: 8090
    allowedRoutes:
      kinds:
      - kind: TCPRoute
---
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-v1
  namespace: gateway-conformance-infra
spec:
  selector:
    app: infra-backend-v1
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-v1
  namespace: gateway-conformance-infra
  labels:
    app: infra-backend-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: infra-backend-v1
  template:
    metadata:
      labels:
        app: infra-backend-v1
    spec:
      containers:
      - name: infra-backend-v1
        # From https://github.com/kubernetes-sigs/ingress-controller-conformance/tree/master/images/echoserver
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-v2
  namespace: gateway-conformance-infra
spec:
  selector:
    app: infra-backend-v2
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-v2
  namespace: gateway-conformance-infra
  labels:
    app: infra-backend-v2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: infra-backend-v2
  template:
    metadata:
      labels:
        app: infra-backend-v2
    spec:
      containers:
      - name: infra-backend-v2
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-v3
  namespace: gateway-conformance-infra
spec:
  selector:
    app: infra-backend-v3
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-v3
  namespace: gateway-conformance-infra
  labels:
    app: infra-backend-v3
spec:
  replicas: 2
  selector:
    matchLabels:
      app: infra-backend-v3
  template:
    metadata:
      labels:
        app: infra-backend-v3
    spec:
      containers:
      - name: infra-backend-v3
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: tls-backend
  namespace: gateway-conformance-infra
spec:
  selector:
    app: tls-backend
  ports:
  - protocol: TCP
    port: 443
    targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tls-backend
  namespace: gateway-conformance-infra
  labels:
    app: tls-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tls-backend
  template:
    metadata:
      labels:
        app: tls-backend
    spec:
      containers:
      - name: tls-backend
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
        volumeMounts:
        - name: secret-volume
          mountPath: /etc/secret-volume
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TLS_SERVER_CERT
          value: /etc/secret-volume/crt
        - name: TLS_SERVER_PRIVKEY
          value: /etc/secret-volume/key
        resources:
          requests:
            cpu: 10m
      volumes:
      - name: secret-volume
        secret:
          secretName: tls-passthrough-checks-certificate
          items:
          - key: tls.crt
            path: crt
          - key: tls.key
            path: key
---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-app-backend
  labels:
    gateway-conformance: backend
---
apiVersion: v1
kind: Service
metadata:
  name: app-backend-v1
  namespace: gateway-conformance-app-backend
spec:
  selector:
    app: app-backend-v1
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-backend-v1
  namespace: gateway-conformance-app-backend
  labels:
    app: app-backend-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-backend-v1
  template:
    metadata:
      labels:
        app: app-backend-v1
    spec:
      containers:
      - name: app-backend-v1
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Service
metadata:
  name: app-backend-v2
  namespace: gateway-conformance-app-backend
spec:
  selector:
    app: app-backend-v2
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-backend-v2
  namespace: gateway-conformance-app-backend
  labels:
    app: app-backend-v2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-backend-v2
  template:
    metadata:
      labels:
        app: app-backend-v2
    spec:
      containers:
      - name: app-backend-v2
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-web-backend
  labels:
    gateway-conformance: backend
---
apiVersion: v1
kind: Service
metadata:
  name: web-backend
  namespace: gateway-conformance-web-backend
spec:
  selector:
    app: web-backend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-backend
  namespace: gateway-conformance-web-backend
  labels:
    app: web-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-backend
  template:
    metadata:
      labels:
        app: web-backend
    spec:
      containers:
      - name: web-backend
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-udp
  labels:
    gateway-conformance: udp
---
apiVersion: v1
kind: Service
metadata:
  name: coredns
  namespace: gateway-conformance-udp
  labels:
    app: udp
spec:
  ports:
  - name: udp-dns
    port: 53
    protocol: UDP
    targetPort: 53
  selector:
    app: udp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  namespace: gateway-conformance-udp
  labels:
    app: udp
spec:
  selector:
    matchLabels:
      app: udp
  template:
    metadata:
      labels:
        app: udp
    spec:
      containers:
      - args:
        - -conf
        - /root/Corefile
        image: coredns/coredns
        name: coredns
        volumeMounts:
        - mountPath: /root
          name: conf
      volumes:
      - configMap:
          defaultMode: 420
          name: coredns
        name: conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: gateway-conformance-udp
data:
  Corefile: |
    .:53 {
        forward . 8.8.8.8 9.9.9.9
        log
        errors
    }

    foo.bar.com:53 {
      whoami
    }
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: udp-gateway
  namespace: gateway-conformance-udp
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: coredns
    protocol: UDP
    port: 5300
    allowedRoutes:
      kinds:
      - kind: UDPRoute
---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-https
  labels:
    gateway-conformance: http3
---
apiVersion: v1
kind: Secret
metadata:
  name: http3-secret
  namespace: gateway-conformance-https
type: kubernetes.io/tls
data:
  tls.crt: |
    MIIC2jCCAcICAQAwDQYJKoZIhvcNAQELBQAwLTEVMBMGA1UECgwMZXhhbXBsZSBJ
    bmMuMRQwEgYDVQQDDAtleGFtcGxlLmNvbTAeFw0yNDAxMTQwOTA1MzZaFw0yNTAx
    MTMwOTA1MzZaMDkxGDAWBgNVBAMMD3d3dy5leGFtcGxlLmNvbTEdMBsGA1UECgwU
    ZXhhbXBsZSBvcmdhbml6YXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQC92bKJitdHJdc/RO2q5hWNsHYR+Uz6Pv1dY3DPBPvYt8DL56sngqyJ/gOO
    cbM9meUsaBOi84tvjcwut703qDa3ZFqJ1wKpuBTzfZEmJifflT6ZxQeEkp/Hv0M1
    Mm8hREtXIYxLiWWV0QItvTSEtuJRJuWDyA6eJ6X1hrYzLUvKrEsCRDXe6og0hRLs
    5C91S5SgEI3jZusipGusdrbPblUG4xy+mKu5qnhhF+Y9PMPaIReOKVs4tVclPKwI
    oaJdbr8unU640BvwWnq0Rfir/ewjZEEHvcf9T1x1i/Nge6H8yPpmuyKnpFUd6Cfu
    kC3y3/5RntUhv8y1EKt9zPbgRd+3AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHJx
    ajB2YAaQAVAOgbotMlO9aHLeGkBaIraL3zG4lMZFe0PKmibMk7vCMb07MJsBrvsg
    /1Aw3FU5FCSASQKSpbmWfur0iZn1nD0Pj6Vq6pPXInrjm0qSIn0emO1vHDP1YIzs
    0e2lqWx7PeAfl+rW4mPYCPueEnEhafxKVdXXjjfQFk+8i7HkSaGXHJ+Fnw+obD46
    c5OlbHQncE1B7ldvVz6xkKx53wbpY7pqtrDpkXnQ6iikgE8pV1Iv4fvkyzRl1htR
    8lNo7GCKCnhcmC5NXCt+b4kXHb/g6yozQ5nVTxGDxeNKpVjF4mPSgukLwfUM/mJb
    0lz/HNZP7/u55vQridc=
  tls.key: |
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC92bKJitdHJdc/
    RO2q5hWNsHYR+Uz6Pv1dY3DPBPvYt8DL56sngqyJ/gOOcbM9meUsaBOi84tvjcwu
    t703qDa3ZFqJ1wKpuBTzfZEmJifflT6ZxQeEkp/Hv0M1Mm8hREtXIYxLiWWV0QIt
    vTSEtuJRJuWDyA6eJ6X1hrYzLUvKrEsCRDXe6og0hRLs5C91S5SgEI3jZusipGus
    drbPblUG4xy+mKu5qnhhF+Y9PMPaIReOKVs4tVclPKwIoaJdbr8unU640BvwWnq0
    Rfir/ewjZEEHvcf9T1x1i/Nge6H8yPpmuyKnpFUd6CfukC3y3/5RntUhv8y1EKt9
    zPbgRd+3AgMBAAECggEAPZHKavzSEErfYa9y/Ied2dOulumo40dmV9EWFq1hF8mQ
    BxDc2vVwC1iLwrhxDrtILXybUa92OvlbjJMeFFzDUfqDukw2muAOO2Evn5WkPMhk
    Au55H6+FjfwjSa9PhxRk8p74ps6qWUntUPQZgijlgLgCmxhYVUY6dkP39uTrvZBP
    RV4GDpGRciGDxtRsL1p2q6AA8Cw4GPudw31zF+GOdohlvWnbF86aOGyJGT4yrxND
    CgfOMp9pFnmxOGs5H8XnirxscU5MBPzmez6a0SOyVdym7g4M30fDdMzMils7iHP6
    gQG0P1ShS94JAOXlpcJ6HNuMaeeS/lIjaV6teez64QKBgQDwQeQwEK4bBIrhfQsk
    HGuPRJRfljlLZWNnx30HSR4bCIFbkHXUxxNPdmV3uIQamw4cDozonpx5p7ZwqEnj
    a0g4FG+Vizd8UbK4v4Nh1HbsrsM3hWcAHRA44Q4GCs2zfl1GU2ZmfBKLrqlnYinA
    HjbeW46qzOrUo0/9e4ULeHaN2QKBgQDKSkW5SjrJypjGpMUuqkpBdbXkiXwOcMXi
    ZYbeHznqWjmeOn+5FKH5yQK6YRPE0ElsajWbQo9wB1TaGexuqttmjK1DdKChHzXY
    KjnU+NZIc8xRC/NywF5TfMjgsqTTu+1j5L0+oH1gG+EOqOMiXLeUg7zx0uSReRuA
    LB+bhGYQDwKBgQCsqu5QDOzTxgP54mArZ7F1mZf4yoIKyacTYq9cmRPl4cr1/3Bv
    p1MdfL2XuShX5q/RQjPKypMya3IWrRvNMcEJbMZ090S9OAn19M17dbKyjzcFo/5O
    epS6DCSD+yeypFJsxGuHpAvAD5r4DfhrdkuAqtRxtCvg/i3ywt7vS3gIoQKBgAMv
    eDmauaJD1nQKVDCP7etp9xtKLvHrRLJz9tO4mijektmzAh/f+0z7pVdZ//2xafaT
    FZUET03sT6G/lsGHXz0WKgRN6dmfrDFjONXptTYe3LDKB2NfNB0Mcf1X0tCivPI9
    v90kmdTRm5GnhywbWai1ClykfYTs60nxZ+4C/7hxAoGADC6Fqzl9DE2+Sc1Vpqlq
    RahiMOz7bgWRhXVXaAOtVvLieVdVwNHcGhiUS7pObwQb8u/bXMUScrmrblZ0fpm4
    HQe9nVbQT7GtAD4UPFouCQZRevXznzZJJ1fmhOjFrc5Uj486q/xkg2fcejpUhDgG
    N5Czgf9NPX47ZlnnnYSz2KU=
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: http3-gateway
  namespace: gateway-conformance-https
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
    - name: https
      protocol: HTTPS
      port: 443
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: http3-secret
            namespace: gateway-conformance-https
    - name: http
      protocol: HTTP
      port: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: http3-backend
  namespace: gateway-conformance-https
---
apiVersion: v1
kind: Service
metadata:
  name: http3-backend
  namespace: gateway-conformance-https
  labels:
    service: http3-backend
    app: http3-backend
spec:
  ports:
    - name: http3
      port: 3000
      targetPort: 3000
  selectors:
    app: http3-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http3-backend
  namespace: gateway-conformance-https
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http3-backend
      version: v1
  template:
    metadata:
      labels:
        app: http3-backend
        version: v1
    spec:
      serviceAccountName: http3-backend
      containers:
        - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 3000
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
