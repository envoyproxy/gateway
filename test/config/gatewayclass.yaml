kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: envoy-gateway
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: proxy-config
    namespace: envoy-gateway-system
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: proxy-config
  namespace: envoy-gateway-system
spec:
  ipFamily: IPv4
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        container:
          volumeMounts:
            - mountPath: /var/run/ext-proc
              name: socket-dir
        pod:
          volumes:
            - name: socket-dir
              hostPath:
                path: /var/run/ext-proc
                type: ""
  telemetry:
    accessLog:
      settings:
        - format:
            type: Text
            text: |
              [%START_TIME%] %METADATA(ROUTE:envoy-gateway:resources)% "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
          matches:
            - "'x-envoy-logged' in request.headers"
          sinks:
            - type: File
              file:
                path: /dev/stdout
        - type: Listener
          format:
            type: Text
            text: |
              LISTENER ACCESS LOG %UPSTREAM_PROTOCOL% %RESPONSE_CODE%
          sinks:
            - type: File
              file:
                path: /dev/stdout
  shutdown:
    drainTimeout: 5s
    minDrainDuration: 1s
---
kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: upgrade
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: upgrade-config
    namespace: envoy-gateway-system
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: upgrade-config
  namespace: envoy-gateway-system
spec:
  ipFamily: IPv4
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        replicas: 2
        patch:
          type: StrategicMerge
          value:
            spec:
              template:
                spec:
                  containers:
                    - name: envoy
                      readinessProbe:
                        initialDelaySeconds: 5
---
kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: merge-gateways
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: merge-gateways-config
    namespace: envoy-gateway-system
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: merge-gateways-config
  namespace: envoy-gateway-system
spec:
  ipFamily: IPv4
  mergeGateways: true
---
kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: internet
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: proxy-config
    namespace: envoy-gateway-system
---
kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: private
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: proxy-config
    namespace: envoy-gateway-system
---

