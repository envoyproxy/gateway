apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: backend-tls-setting
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: backend-tls-setting
  listeners:
    - name: http
      port: 80
      protocol: HTTP
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: backend-tls-setting
  namespace: gateway-conformance-infra
spec:
  ipFamily: IPv4
  logging:
    level:
      default: info
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: backend-tls-setting
  namespace: gateway-conformance-infra
spec:
  parentRefs:
    - name: backend-tls-setting
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /backend-tls
      backendRefs:
        - name: tls-backend
          port: 443
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: use-client-protocol
  namespace: gateway-conformance-infra
spec:
  parentRefs:
    - name: backend-tls-setting
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /use-client-protocol
      backendRefs:
        - name: tls-backend
          port: 443
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: use-client-protocol-policy
  namespace: gateway-conformance-infra
spec:
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: use-client-protocol
  useClientProtocol: true
---
# openssl req -x509 -sha256 -nodes -days 36500 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout ca.key -out ca.crt
# ca key
# -----BEGIN PRIVATE KEY-----
# MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC3IbkjAK5knZW0
# QhBuyPjK1WKvXBmv0wXZH5f777UsSOHeP0lHa99OvXppMzt2ojwOQbYOBMLYfSuB
# cHu7NZqyH79cY8ACikUXqBZ1NZhgdCdCsEf9+DhLDQYwxaQdFQY3QgUtXjuy9Kvl
# tFpcAJlZ4xwbOE1oK+iqxcg18OsugBM5bUtQ/1JtkQsZWa6CaudcgbASuq/JZzPC
# 0Xfu9WxX1uYIRLvoi36W39WcAoJGNxCuqWbbfNvEW/MN+Xz9CqBnFiBct2X7F0Es
# J6DWFfXjBomNf791M2blMdot9jUElXIXDvxUHxMWGguCA1rofW5i4/5CT0P3zLEv
# 0lTVtFHPAgMBAAECggEAFoT8GjTMPS0vqpHxKV5nUbH5x6ygsAFYF8IN03o/oil4
# NPc9UJ4QQMOGGQemyUjb77je5UxqlWqW/fzSCkxmMH887eSKSQWtx2HxGQq1KS8/
# YLECuVVbvsbkOv0i2DysngDtWA3dc30o4j9SWTvtn6MQ4rwCsMutecqGezOcCASb
# 9pjhhiUrVOUHUZZ60M+hil4VI0uA3UKoenTWYCDdudE27rmWBT0TXaVYfO5rb0D0
# vCoQgyaaH2pgy2q7GLQ026nCdkX/oyrVMe5qfd3QSXANedAsHV3o8yht5NJocjiP
# ZZiykFdBZ664/VOKNUavKZqkKTpvYD8leOXY2sbzwQKBgQD8hZG7+a/ef27bhsGd
# t+kBM2Tgoc+XcT7K2M4LmJQCn48IQFhPfmlNsjdlkhNlUAB/WtvU3TqAVxmPsNnX
# ON0wl4NY376VMxi5GZB4TGXIgIo7lQyfRKdLxFcTRyxaplBSrYVaZmJUgjOBE8ON
# Ox48KKdzBQTifEYJZrYqwjy5YQKBgQC5p3lWIVGAomyjTq9urmmOK2lhpZDHst06
# iFLf5vhujuxz2BuKR6opLtcQw7wV87D2Hb596RFdnjnmZ2YmsIlhdPU3nsGLx+JP
# 4vRIMwWG5H3taC5SzpzeQ1cTGXoczVrEbiQCRdx0aB+SFatoouSAxmSjxEalHzK9
# QgAPPvXpLwKBgAUg5VPO/15icirtMrN0T7whghP51VB7EU5nVs/veloPSYVeYSzE
# IXldfDiI3fH5zPjJLJvHHnAK1M8RRWtUkVFyUk2UxbccAY2I0mFPE+YdjjEllssJ
# RuiIBUiz8leo9wqm0YWDfM3AkzE06IzOvY91N+ljGbVL1tRMDLkTls4hAoGAMaOw
# 0rG37BABwiyAxbRGrue2lpBBRNPzSPo4RnuoQ09ds5+9xVxiB/7pLCdZu/jbgQL0
# 8w+FQCXVT2CoNIIRSYiPJF8DWw+H2FpTfJZ/zNB9RyQK9sMduGQC/S1btCXINitI
# 3360cj+A6Xt3yFN9i10AfbU2OmI8G9Rw1aK896sCgYBy5IMBPDLOZObaLka5aoZF
# 2O/qKKzXd8oseJ4MtF04NkHGRgA+SLSgAxP5tXMAcba0/J9G3fmqmN72nAd3kJG2
# hN9TBezt/F3JfID61EkbSXelPmXkJZDFm2aKeCUfBNTaw+uNMn8edCRw0OLZJa17
# I1VNCeQyzxLMApDz6NxGSg==
# -----END PRIVATE KEY-----
apiVersion: v1
kind: ConfigMap
metadata:
  name: ca-certificate
  namespace: gateway-conformance-infra
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDPTCCAiWgAwIBAgIUOnZExc0oBHoUVwwOjtpK9t6IauEwDQYJKoZIhvcNAQEL
    BQAwLTEVMBMGA1UECgwMZXhhbXBsZSBJbmMuMRQwEgYDVQQDDAtleGFtcGxlLmNv
    bTAgFw0yNTEwMTMwNjI3NDRaGA8yMTI1MDkxOTA2Mjc0NFowLTEVMBMGA1UECgwM
    ZXhhbXBsZSBJbmMuMRQwEgYDVQQDDAtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcN
    AQEBBQADggEPADCCAQoCggEBALchuSMArmSdlbRCEG7I+MrVYq9cGa/TBdkfl/vv
    tSxI4d4/SUdr3069emkzO3aiPA5Btg4Ewth9K4Fwe7s1mrIfv1xjwAKKRReoFnU1
    mGB0J0KwR/34OEsNBjDFpB0VBjdCBS1eO7L0q+W0WlwAmVnjHBs4TWgr6KrFyDXw
    6y6AEzltS1D/Um2RCxlZroJq51yBsBK6r8lnM8LRd+71bFfW5ghEu+iLfpbf1ZwC
    gkY3EK6pZtt828Rb8w35fP0KoGcWIFy3ZfsXQSwnoNYV9eMGiY1/v3UzZuUx2i32
    NQSVchcO/FQfExYaC4IDWuh9bmLj/kJPQ/fMsS/SVNW0Uc8CAwEAAaNTMFEwHQYD
    VR0OBBYEFBZSoriwBAXLMM7rbUaEc/U3ySC3MB8GA1UdIwQYMBaAFBZSoriwBAXL
    MM7rbUaEc/U3ySC3MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEB
    ABCUCdeZHQtVHuLuDPGqPA3HJ7gqgzykbIuFY31dUqCGh49Qb9eZJG44BEOSuOjH
    Moab6xm64BfqygjOXyGbgtBPTbF4KVaEyWvp5PvyEpMCi3ODdh632ldg/Fd+3Qpo
    Gsntv8HFHAr19sn1RbgsqbSt3RnORVW5AJvcq6YJRLA5lNHZ6KPhXxwY6sbOq7gz
    ENeKrEVJh0YCfQd1Puu8WLqznL4GzepwAW2yANrQ5GhDP7lEZMqos3Wv4yXBi6sd
    uR2RqqfFz+fLGl7Oze5ry2xv+BFBPQXoDZa3JxV4wcEOQHmwLFWXkqSeMV9RGdOb
    S6dQHcHa8Lk99ROXMpx2Jmc=
    -----END CERTIFICATE-----
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: policy-btls
  namespace: gateway-conformance-infra
spec:
  targetRefs:
    - group: ""
      kind: Service
      name: tls-backend
      sectionName: https
  validation:
    caCertificateRefs:
      - name: ca-certificate
        group: ""
        kind: ConfigMap
    hostname: example.com
---
apiVersion: v1
kind: Service
metadata:
  name: tls-backend
  namespace: gateway-conformance-infra
spec:
  selector:
    app: tls-backend
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tls-backend
  namespace: gateway-conformance-infra
  labels:
    app: tls-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tls-backend
  template:
    metadata:
      labels:
        app: tls-backend
    spec:
      containers:
        - name: tls-backend
          image: gcr.io/k8s-staging-gateway-api/echo-basic:v20231214-v1.0.0-140-gf544a46e
          volumeMounts:
            - name: secret-volume
              mountPath: /etc/secret-volume
            - name: client-ca-volume
              mountPath: /etc/client-ca
          env:
            - name: TLS_CLIENT_CACERTS
              value: /etc/client-ca/ca.crt
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE_NAME
              value: tls-backend
            - name: TLS_SERVER_CERT
              value: /etc/secret-volume/crt
            - name: TLS_SERVER_PRIVKEY
              value: /etc/secret-volume/key
          resources:
            requests:
              cpu: 10m
      volumes:
        - name: client-ca-volume
          configMap:
            name: ca-certificate
        - name: secret-volume
          secret:
            secretName: backend-tls-certificate-tls-settings
            items:
              - key: tls.crt
                path: crt
              - key: tls.key
                path: key
---
# This is used as the client certificate for the envoy to connect to the backend service
# openssl req -out envoy.csr -newkey rsa:2048 -nodes -keyout envoy.key -subj "/CN=envoy/O=example organization"
# openssl x509 -req -days 36500 -CA ca.crt -CAkey ca.key -set_serial 0 -in envoy.csr -out envoy.crt
apiVersion: v1
kind: Secret
metadata:
  name: client-tls-certificate
  namespace: gateway-conformance-infra
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREF0TVJVd0V3WURWUVFLREF4bGVHRnQKY0d4bElFbHVZeTR4RkRBU0JnTlZCQU1NQzJWNFlXMXdiR1V1WTI5dE1DQVhEVEkxTVRBeE16QTJNekV4T0ZvWQpEekl4TWpVd09URTVNRFl6TVRFNFdqQXZNUTR3REFZRFZRUUREQVZsYm5admVURWRNQnNHQTFVRUNnd1VaWGhoCmJYQnNaU0J2Y21kaGJtbDZZWFJwYjI0d2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDd0ViQ3FYb1BtT0NBYTRVYmxrcE80eHRFMDUwSXM3ZHgvbDlrY3lpRDA5SmU0L0t0L0RPdENjeTYybXVTUAp6N2ZtR3EwTktOdGU3aWhQTGY1YlUzQlRVVGR0WU5lNXBadVNMQm9CQ1VUZWEzNkdzVHdXeTdBbVgxUVI2YXJMCkdEWVBzL3k1MWU3WE9hT3ZQTmx2M0VxTURzaUoyU0NtSmkyV1NBZXBtdStMQytHenBKRFZ4Z3gwYXV0djVIeWwKVXJKb3JKOFpxd0NPS29SdGNkQmpSMXpzTjdJZzJVWFpuMGltUzU2bENtQUg5YVRpbUZFbko5S3ZEd3JURGNXTQpGTXA5QW5iMlBLbkJmMWZZMU51VTV6cHpPaGhkN1B1RDNiMnZQUjlPdW5vMFBEU1hNYWVFdnNBbnlnUG10aDExClhxMHRxc1d5RVU4Q3gvcjNuNm9xZ3phckFnTUJBQUdqUWpCQU1CMEdBMVVkRGdRV0JCUUkzVlMyRDR3b3ZDRisKRUpDYmt0dW93Y2tvckRBZkJnTlZIU01FR0RBV2dCUVdVcUs0c0FRRnl6RE82MjFHaEhQMU44a2d0ekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQUszUHducGVVLzB1c1I5SnF4MFAyMzZQaGdvYW5IZXJlWlB4eDRMcFFqNHdJCnhEclE3RUwyOVBZMmRrcW0yWmI2cTJiUnVnSmNFMGdFQnNoN3ZtejBYNTQxQUYrOWIrbmdlOVhUZjBYdmZoM20KSGV5Q0d2MTJtSERSNDBHTE9PRzhpYmRZcVFDcGJxenYyRFRFbmNtNjNETEsvUVcrdjFSMEIrU3FLdnVldkxxVQpxT1RBS0JwTVdhZUh4cHB5RHlMblhyN3RxbE9GMGFUY1M0dlpjOUdWcitvOEdiY0diTHBSYVVTMHBPN2VtL3o3Cml1MFlMa1lkOGpnd0RTcDZBRFlhUjk3WEFlTStYS2djb3d6cFRWK0NYbUpaZTJtRzZIc3JIU0pIVUxaZHUwcDcKUUNQdDFEbnJmS2Z5L0Zmd29VQmZKa1pNbVo1dTVMSElabEZJR0tWSndnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ3dFYkNxWG9QbU9DQWEKNFVibGtwTzR4dEUwNTBJczdkeC9sOWtjeWlEMDlKZTQvS3QvRE90Q2N5NjJtdVNQejdmbUdxME5LTnRlN2loUApMZjViVTNCVFVUZHRZTmU1cFp1U0xCb0JDVVRlYTM2R3NUd1d5N0FtWDFRUjZhckxHRFlQcy95NTFlN1hPYU92ClBObHYzRXFNRHNpSjJTQ21KaTJXU0FlcG11K0xDK0d6cEpEVnhneDBhdXR2NUh5bFVySm9ySjhacXdDT0tvUnQKY2RCalIxenNON0lnMlVYWm4waW1TNTZsQ21BSDlhVGltRkVuSjlLdkR3clREY1dNRk1wOUFuYjJQS25CZjFmWQoxTnVVNXpwek9oaGQ3UHVEM2IydlBSOU91bm8wUERTWE1hZUV2c0FueWdQbXRoMTFYcTB0cXNXeUVVOEN4L3IzCm42b3FnemFyQWdNQkFBRUNnZ0VBQVcvemlFQ0RSU0xhS0Q0RWpTVTRMWDc2QUR1UEQ3elZXdmxMWFcvTSt4THcKRmlPQjV1U2RHd3JEcTl2eDE3YXpZcDUvSVNkZk94UW9vaFRYQ2JuUnBleDR6bHpIQmczekNpdHYvdWdyZHNGYgo1QStZVlB0T3NkRi9aeklJSWVaTnNxMGVlQW5tREQyOU4xWUExR2Z3OTltN0MxMEpaakhUbDNGNUZvcGNRRDlTCkhXVGNKeVEwRVkzaGlrZEYrT1JZVUJPcjlXbmQ0d25xRGN2cURoYi8zaGxJaGsyNk5zOWdPbFRvS3hZNmFKWjIKbWdXUFg1SnZoKzFRRkFBKzdKVnROUW9EeUE3cThuUHZETTgwMW1VaWppOEdhdkkxVElJTFliTDJVUEljRXlJaQpxQVZYQTQ1bkFDaWhYd3kxdk8xK3NsTUwvUEJOdzRpVk8ybnNJQi9SS1FLQmdRRGNPZVpDK3dWSlp1aWpOd1UvCkpmV1oyQU5rZ3dxWHdsNEVMUGRHOThDbnN1Zk5sei9qTnpaVTZmcHlzYitYOE1kUGdRRUhCNkVjMTlFUDh4TkMKeWtDWlltNTNXT2s2ei9vTnVvbDl2MzhlVUpwSGtjemFYTDRyRmZYUVZhZXVJRkdnbE11cWtBYUg3bGhNdE4rRgpuanIxTDJid3UyNW9XTXQrZ21zdGNGc2dYd0tCZ1FETXE0VVpzbU5hWUZCNDlBNStCRHgxcS9GM1VWTzBjZTlqCk01TUM5VTg0eEFHWklhU2ZKYmRvb1hUUi9wWWw5eTY0clppSk9QcDFqREVPMG16b3dwNDRpWHdvdXlNYUVoMngKSHFaempwbmw2V2VLOHhBNHZFQ2tiUmR6WWlRRGQ5TEE2ZjhYelVoMktWb0Q2SmFUT282YTVCSHErMGdncEJRTAppRVYwa2YxZE5RS0JnUUNDVkoycDdDYXZ6d0JFZjI1U2RlT0luV2M4bDdTd0pXNUFhR0FiRnNwa05LT3NieU4zCkU1akszZ0hDMk9DN1NkcWFlWTBqSE9mRFN4SEZyNlFwZGNxUE84cUdSUThhS0RVaTVNOHpwUjNVMGZ6TCtFUlUKd21nazFZVTVPMGZWNi9pQzRTdzdENnRkekxkakJmUDJmck1Eb1g3NVh1TXpTOEY2YURLSG5LUEJYd0tCZ0hSYgoweWovMVNKTmZaSzJWZ0xvejZLcXBYWUxZNFpEL0RBdTR4YWNkblMwWXFBM2swcnplMmxkMlhlRndNRkczV1liCk00eFlPM1JXeHBGQnFxOU43ZndBbGZqbUk1ZXYwdmVla0UxRU5sU1N0TTQzVC9LaGZESyszc1UzZDNnTlNHRnEKNXg4V0Uyc3lLVDN0bnFXSGRnbXpQa2lVb2JZRThteDRCZHkzSHc4OUFvR0FlTTR0czVQMlpSOWExenBSeG9NTApDbVY5ZjliVCt6MVh1L1FlYjM1aWpheTZTMHdaNkhDTjBYcTk2U1llWkxaWW14WkpyQXZ2WGdCb1phT2VSVnlxClFGRUdYN2l2L2JvOUZkOXFkdGVmOGJHWTllOFU0RkJiYllYNFdQaHU3RVVFNFlZckRSMHV6VnArRXJleDlyS0gKUFpIeFFmbUhlMXN2RHRiU2xabXppdWs9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# This is used as the server certificate for the backend service
# openssl req -out backend.csr -newkey rsa:2048 -nodes -keyout backend.key -subj "/CN=example.com/O=example organization"
# openssl x509 -req -in backend.csr \
#   -CA ca.crt -CAkey ca.key -CAcreateserial \
#   -out backend.crt -days 365 -sha256 \
#   -extfile <(printf "%s\n" \
#     "basicConstraints=CA:FALSE" \
#     "keyUsage=digitalSignature,keyEncipherment" \
#     "extendedKeyUsage=serverAuth" \
#     "subjectAltName=DNS:example.com")
apiVersion: v1
kind: Secret
metadata:
  name: backend-tls-certificate-tls-settings
  namespace: gateway-conformance-infra
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlVENDQW1HZ0F3SUJBZ0lVQm5heWhnY0RrVHliNmNKbW5KMnQ4RWtETHJvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0xURVZNQk1HQTFVRUNnd01aWGhoYlhCc1pTQkpibU11TVJRd0VnWURWUVFEREF0bGVHRnRjR3hsTG1OdgpiVEFlRncweU5URXdNVE13TnpNMk1qbGFGdzB5TmpFd01UTXdOek0yTWpsYU1EVXhGREFTQmdOVkJBTU1DMlY0CllXMXdiR1V1WTI5dE1SMHdHd1lEVlFRS0RCUmxlR0Z0Y0d4bElHOXlaMkZ1YVhwaGRHbHZiakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXFaSzRYaFhJc25DRXRlODd5WmFUUXl3NWJJTC9XQgo3dCt1c2toM3ByanlUeGp4aVNwMU8xZDVtODVBVk1qTVBUZktnWW1tejFFUmlzVWRHdU5OOFlxbjNOUUVrZVVBCitINkFqZHM4emNETFFMMTU2cmdnSiszcXAxT09rZkNBN0h5OWdkeW0zTVU3WDlDb2p4NEE5aWtKdlpIVnJuczkKRzZGMWZkM2hCakhRV2ZwTnVyemIwNlVoTVZBRnA1TTlReWxBQlNJbCt3MU5yT0RWengvZG0vaHZQb1Vaa1N6NgphTlZXVFBxSnFTSnR5eG9WZHJaZ3piSGYwY0FQd0RCOFNIczUzcjZiRkdBbFQyVUdHYnVqV0hWSDlGTWtzY0t4Ci9CVVMxQUcvSEhSQWVmUmxXTEU3ZnZkZHZNZ21hVWhielUxbk5pTFRRSy9TMVJLYXJjc3M2UXNDQXdFQUFhT0IKaURDQmhUQUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjRApBVEFXQmdOVkhSRUVEekFOZ2d0bGVHRnRjR3hsTG1OdmJUQWRCZ05WSFE0RUZnUVV1VDg5Rk0yc0N1cDVDeHFyCnloUWVRM0xJdUJJd0h3WURWUjBqQkJnd0ZvQVVGbEtpdUxBRUJjc3d6dXR0Um9SejlUZkpJTGN3RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFLejU4QnE1ck45UlcwbkZacmtVbVJtbGZVZ1hjTEk2WlRVOHR2MDg5NldLZEVTNgoyZ1N2Qk90WTZ4WCtGQVlmMTg0Z0ZSNDBnakUyS29BajNHTHk2YUZnU09YenNFWE83bnExMEJUdUdHYTZnQ0ZsCm8vK2x6Mmo0NUtUWmdIMmRHa0JPUUFZWmMxb0JpTWxwTzI4VnFhNE80R1A1Rm8xNWZHTExTMThCRW9pU2dEem0KaGFFZWIwQ2NvNXQyZ09UeGhtOVlQZG9sRUJTU1VaajcvaEt5MXFBWlQyMW5Ja3NKNldzOTVZWnExMGdHZjU3QQp4MklqcFRwUHlqK1J1aGxHNWI0bG1oMmRpMWMrSTI1RUVnNDNvR01ySk9OcEFkNTA5TVlhbG1BbHBmUWgva2xNClNxRitZTmNqdlVwazNBc25PMjJIYmtJTUxPczducmdzemFxeGJrYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREttU3VGNFZ5TEp3aEwKWHZPOG1XazBNc09XeUMvMWdlN2ZyckpJZDZhNDhrOFk4WWtxZFR0WGVadk9RRlRJekQwM3lvR0pwczlSRVlyRgpIUnJqVGZHS3A5elVCSkhsQVBoK2dJM2JQTTNBeTBDOWVlcTRJQ2Z0NnFkVGpwSHdnT3g4dllIY3B0ekZPMS9RCnFJOGVBUFlwQ2IyUjFhNTdQUnVoZFgzZDRRWXgwRm42VGJxODI5T2xJVEZRQmFlVFBVTXBRQVVpSmZzTlRhemcKMWM4ZjNadjRiejZGR1pFcyttalZWa3o2aWFraWJjc2FGWGEyWU0yeDM5SEFEOEF3ZkVoN09kNitteFJnSlU5bApCaG03bzFoMVIvUlRKTEhDc2Z3VkV0UUJ2eHgwUUhuMFpWaXhPMzczWGJ6SUptbElXODFOWnpZaTAwQ3YwdFVTCm1xM0xMT2tMQWdNQkFBRUNnZ0VBTWhPd0hWUjU4bTlBYnBqV3VDeFhRNjYwaDZXTnJTcGpwK2hmYXVnZ1RxQ2UKQ25WUlNTeFc4YVUrYkxtYisxSDRZN3pyVGVIc1pvWm1mWmhYR0E0aEFQdkM2cWtDZ3M4OW5NOGJ3VEFEVDM4dAp6bWUvSzZuUEZOQ21jVkhSSXRoTEcvNGZoakc4YWdmbUJBWlY4YjJkR3NHc21NcHZhVWpPZHBjNitFZnhwd2YvCk8vdGl6Q0ZXQk5xRU9YZFZJc0xMZElDKzFHUThpL0hKL3Z0OXRUWGh1OGhaNGlVS1VNMVowaUlvYWh2c0tRMzMKMVRUQ09WQTRkVjdFYTFsbmgybVlLWTRNM0FEaG94NmJsRjVEVjNuWU1ucFBMeGF3QVZpMjYvYUxyUGFGLzM0WAo0T2tkQmpGc0JpTXR3aWFQakd5NUQzbGRXWlA4T1IrYlUrcTNOdlM3TVFLQmdRRHNaOWViajhIZmxPZmMyaFo4CkVGbEp5WVdzbFFsOFFLV2dibWV6NTRyVWZmUHo4NkZIdWMrMm1YcmdIMGJFdExGL1MvMmZ0Yzg0VUIyck5iak8KS1BubmdvVXNpZmUvaW41ZENUNDhuK1Zxd2Ezd1l6NWdKRTRHc3N3aEVlYy8weU9XUHlXSXI3WmRaaURxcHFjYQpKTWpHM0JsRFBUV1lQY2VjanB0UTJLNDhVd0tCZ1FEYlkvMU8xTW9reEQrU01IQU5xRGduMk4rN1Nmb3IxQmcwCjVFRXVtWWx0ckRyQld0cTRJOEoraUhqNkZuQ2Jmd0cwNVN3d0dkVFVybDZ6Nm9tNVRFQ1loS3h3cndZajVDdnYKL1FhWGw5ZnFIL2xBbFozYnlhWWZrWUZaN0lGcTZGSmN5ejl2TEdOQ3l3c2ExbGpOQjRqak1xTVp2aUl3Vm13TwpvTktDeFNQSmFRS0JnUURHWjFoQ1RHSXZuSzhEWVYwaGZpOFJpRG5SMzdyNE51RktSWjV2RkZJbGlCZW5rNzYxCmpiSlAwM3VXZ1dsSlNVVDJTdlp1aFkyRisyY0srNmxBREkrL3hvQ3lJcEIwaG0wSzgranh4RmdzUXFRU2JaZzUKNC81QURPcllqa2YvL3RtTkRTNFpDeThJTCtCTVR0VkxVYmZYZlgwT08xNnhpSmZ3UXBjRFFQYnAxUUtCZ1FETgpUQmtLL3FhV2x5cGgwMy9YMTlXTXZDNUlwV1k4UTBIUHBOUzJGYWo3ZnhLUVEwT3Uwbys3Tmx2MnNxNzNZM2NtClh0bmx2UlpqV3pSMXFnRHM2OFQ2dEJSbGNmTU4vUU44bE1ycGFvYjZxS2JtMzlzVGcvUTNVRUs1OGszOHk1L2YKQTdhOWdzejBBT3JJVjFKTHNrUlBUdUEvUTZQY2xkS1NNYjRyN3V5WkdRS0JnRjRNam5VaFN4QjdBWlBFQ2twdAp3c1ZmS0JJYzJhS290cWZrNEZudDgxbFF1WHFBZEIyUmFtVVNmaVQ3cTFxUnNjdXRRYlFCSUducXJnN3dsOWE3CncxOEd3eWZjTjNUT2xqdzZXSk1pUWdEZGFWeFlLZFpRNTdON2xtZWYyaHRyazhkOUxkTFM1SDdlMHRLcnZMamwKdDZvL0g1Q1JRcVRSdTRDUGJRQzM1RUhoCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
# Test per-backend client cert
---
# This is used in the ClientTLS setting of the Backend resource as the client certificate for the envoy to connect to the backend service.
# This overrides the default client certificate configured in the EnvoyProxy resource.
# openssl req -out envoy-override.csr -newkey rsa:2048 -nodes -keyout envoy-override.key -subj "/CN=envoy/O=example organization"
# openssl x509 -req -days 36500 -CA ca.crt -CAkey ca.key -set_serial 0 -in envoy-override.csr -out envoy-override.crt
apiVersion: v1
kind: Secret
metadata:
  name: client-tls-certificate-override
  namespace: gateway-conformance-infra
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREF0TVJVd0V3WURWUVFLREF4bGVHRnQKY0d4bElFbHVZeTR4RkRBU0JnTlZCQU1NQzJWNFlXMXdiR1V1WTI5dE1DQVhEVEkxTVRBeE16QTRNVE13T1ZvWQpEekl4TWpVd09URTVNRGd4TXpBNVdqQXZNUTR3REFZRFZRUUREQVZsYm5admVURWRNQnNHQTFVRUNnd1VaWGhoCmJYQnNaU0J2Y21kaGJtbDZZWFJwYjI0d2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFES2IvTDI2TkV4NUtVQWVhM2VreHd2bDhTbDdRZHM4YVNFQUdOSDZLOXdOc1ZaY1UxYzAwd0p1OGIvZXVocQpPaHc4U1E5VDlsa0l3ckJDc0I3dWh0MGR6aFBzSmRFaldzQUZQU01OSGFqa1hFSHZJR3hSNVhYQi9zNWY3ZUlJCmJEdG42NVRrLzJqa01pSkxacnV2Sk9RM0hzNXk1bG44QXlocFRmWlpKTmlkTE1WYUR4U2duZFFqZlBVU0xkSXkKRndaeXowZjVGcGVNVXpXQUlsTFFiQ0tyT3dqOC9XQWZZZDJBRGVnR01idnBjeHN6VFRNZkpMa3RIczN1TU1sZApzclE1SXpyTVc3V2p5WGxHUmJUbEFRUXN5eHZzbVZYOVY3b05sTWRtSUZCa1AySElnSU1QZUQ2dGlRUVhDM2ZJCitkaDJneUNDVnZrZHZMWWtVT09SbG4yRkFnTUJBQUdqUWpCQU1CMEdBMVVkRGdRV0JCUStuL1YwQjZmd1BGTlIKMjRxcDV3eG5FU2h6S0RBZkJnTlZIU01FR0RBV2dCUVdVcUs0c0FRRnl6RE82MjFHaEhQMU44a2d0ekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQVBodXU1Tm9od0UwcUFUNGwrOGUzTGVzY1JHWEhqb2NxdlJub3VRbEJtQ01HCitsWE4zUTQzNVdzdGdzQ292RzMvanZsOEhiWFhoeTNXOVJxQWVhN2M4MytOUTA1VytZYzU4RjUxZlJiaEZiU2wKYnlYbDVHdWt5VVh2bWRsckREaXB6ME41bnJNM2xVUFlISkw4bFFDejNEOHRmMmpLdG05Nzhsb1NEUEdRN245dQplS1RyMzdlUEIwL2hQWkgzbld5b1dVYWF5bXExcmNCYms3RkJYRE5YaW4yQi9laFBsUnJzR29sdVQrVE91aFhDCnl0QlF1aTZKbTUwak1oVDVQQ0tlZVNqcEwrUkowSEppQmlJY0JwdlB6SVk4bFZndTdYRFpVbW80Y1lON0JkcGMKVHIzVE5jQXBYbEw2MDRRVmZNTmx3K1BCNk43aE5yNXJmdFQ3ak9kbUJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREtiL0wyNk5FeDVLVUEKZWEzZWt4d3ZsOFNsN1FkczhhU0VBR05INks5d05zVlpjVTFjMDB3SnU4Yi9ldWhxT2h3OFNROVQ5bGtJd3JCQwpzQjd1aHQwZHpoUHNKZEVqV3NBRlBTTU5IYWprWEVIdklHeFI1WFhCL3M1ZjdlSUliRHRuNjVUay8yamtNaUpMClpydXZKT1EzSHM1eTVsbjhBeWhwVGZaWkpOaWRMTVZhRHhTZ25kUWpmUFVTTGRJeUZ3Wnl6MGY1RnBlTVV6V0EKSWxMUWJDS3JPd2o4L1dBZllkMkFEZWdHTWJ2cGN4c3pUVE1mSkxrdEhzM3VNTWxkc3JRNUl6ck1XN1dqeVhsRwpSYlRsQVFRc3l4dnNtVlg5VjdvTmxNZG1JRkJrUDJISWdJTVBlRDZ0aVFRWEMzZkkrZGgyZ3lDQ1Z2a2R2TFlrClVPT1JsbjJGQWdNQkFBRUNnZ0VBSEZVSk0rblhOMnlvOURWVGNvSnowQ3hsU3hTdXRKNW9PRXBHbXQ2VHlUaDkKSzl5NTUxc3lPZTJFTnlib1JzKzl1bWsrUWpISStic255Sm1XSnF1TTRGcENld3M2NTBBUS9scTFZR1ZOaVRKcApUdktpZmw3SE9hQzBHUVIxM1ZocWd3dWJZZVptTTRQWnZXUlNNYnZQemZBYmxFU3RoT0liUW91MUJmcHNiNmkvCnhHVk9IUkJkRGpPdmtJU3NNc243ellPUWNyTm9VZ3ZXSlVGdlJ2dDlqZWloZUxINEVWU0ZCbWVDWENxL0RCRXEKTWMrWTdNdEpudnNXcDV5endsazVHQ0tmemVjQkZ2QnlOWjFkYXZwVXRGaDkrcDVLV1ViaGYxaUdIZDNYTzdhUAo2eXQ2dWFqc3JhVkVlUUJJS24rRE9QNnVPR1VsVHcrU0Q1TzNKcFJnMFFLQmdRRDJpNTNTZDBML0dpRHZ0ekFQCnQwOThEbjdzQW5QOG5WNEh0d3hKY2FRZXYyc3dtc0VObU1EOVRHSmp5QnF4VkRUNk5ZNDk1SURtZmxydEwxQXEKNXc1SFE1SHcvL2p6ckFnMCt2bEJib3FCQm04THBicUpYaE94OG4vbkxNTks2eFM4M2RLS3lHa0lFazZ1TFgyagpRZ0ROSDZ3OGFOYWlobWVTQldHb3VLbVBFUUtCZ1FEU00xQ3FmS0F4WG0vcnBQWDNkK1NFRURJd2RUWlkveWUvCk5ac2dOY3Rwa1BIZzBVYy90b2JveVU5WmR4S2xmMGRESG9FakZyTVVERXNwaGVWRzBSbVlOQVNFZkdoQm1KZ0kKUEl2RmhEQVc3OUZGUzlvTWFvbHVESGhNMy9ZQ1BiNk5ENWdBR2o3TVFKYzlGZXJTa3BzKzQ2Z0xhb1dINVZhVApPSFVzQVR2dk5RS0JnRUdHZGRtY0ROaFVEM0RtbFFWNFNNM0Y1SUhCWFNaRWhOczBFVFhyMkJ5Nzd6Y3B5aWxjCjhkM2dVVDRIenVCV2F3WWMrY01GV2lUb2JDNGhwd0xnQ2ZGeXlmVHRjek1BQStaZzFhSklTTk5sN0ZtQ0lJT2wKMTBJeUcwQkxxMVBjQ3RUdmQ2ZWZBQnMvRWw1RWhPSEJCd2w5WTM5aXRiallVK3FCTjZWcC90YWhBb0dBR1B0cQpVZWpmN1I0cE5SdDA5RVYyamsrU2Qzbm16S3Irb1ZZUXFzSlorNkR6Ym1IUkV2eHhpa2NxdkJwUHlBV1poWnVoCmczY1dMNExLaUJQV3pSVGE4dUR6ekg4d3NPTWU1cE96bFBVQjlpZm9lbERxaUdFOUZpdzdPLysrTUVRQVdxbUkKeWpKVVZsZ3k0VnF5ZnZaWHB5RE5meFhZNnU3UjNFdHdlWnRuOFNVQ2dZRUFzcTE1aEtKWWtQTnhwSGJ5OHNGbgpobXRuSGswTFhjQmxCZGsra29aYjYzRUtlZU9nVUxVU091UG9IY2dIUC9YWmh5VDJZM2JQOUdsMGJTOGVaZlI5ClZMZG9KeUduRHpSNzJ6ajdqOG84aktPZ3RZZ21mUEhWekxDTDI5eHgxQUZsT0x3MGRtVjcvWGlUSFc5QUNaMVQKbHBoR3Y4MnB3RFdQRXkwVGtZZ0svWHc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: Backend
metadata:
  name: tls-backend
  namespace: gateway-conformance-infra
spec:
  endpoints:
    - fqdn:
        hostname: tls-backend.gateway-conformance-infra.svc.cluster.local
        port: 443
  tls:
    sni: example.com
    caCertificateRefs:
      - name: ca-certificate
        group: ""
        kind: ConfigMap
    clientTLS:
      certificateRef:
        name: client-tls-certificate-override
        kind: Secret
        group: ""
      alpnProtocols:
        - h2
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: backend-client-tls-settings
  namespace: gateway-conformance-infra
spec:
  parentRefs:
    - name: backend-tls-setting
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /backend-client-tls
      backendRefs:
        - name: tls-backend
          group: gateway.envoyproxy.io
          kind: Backend

