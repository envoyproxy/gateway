gateways:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      name: gateway-btls
      namespace: envoy-gateway
    spec:
      gatewayClassName: envoy-gateway-class
      listeners:
        - name: http
          protocol: HTTP
          port: 80
          allowedRoutes:
            namespaces:
              from: All
httpRoutes:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      name: httproute-btls
      namespace: envoy-gateway
    spec:
      parentRefs:
        - namespace: envoy-gateway
          name: gateway-btls
          sectionName: http
      rules:
        - matches:
            - path:
                type: Exact
                value: "/exact"
          backendRefs:
            - name: http-backend
              namespace: default
              port: 8080

referenceGrants:
  - apiVersion: gateway.networking.k8s.io/v1alpha2
    kind: ReferenceGrant
    metadata:
      name: refg-route-svc
      namespace: default
    spec:
      from:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
          namespace: envoy-gateway
        - group: gateway.networking.k8s.io
          kind: Gateway
          namespace: envoy-gateway
        - group: gateway.networking.k8s.io
          kind: BackendTLSPolicy
          namespace: default
      to:
        - group: ""
          kind: Service

services:
  - apiVersion: v1
    kind: Service
    metadata:
      name: http-backend
      namespace: default
    spec:
      clusterIP: 10.11.12.13
      ports:
        - port: 8080
          name: http
          protocol: TCP
          targetPort: 8080

endpointSlices:
  - apiVersion: discovery.k8s.io/v1
    kind: EndpointSlice
    metadata:
      name: endpointslice-http-backend
      namespace: default
      labels:
        kubernetes.io/service-name: http-backend
    addressType: IPv4
    ports:
      - name: http
        protocol: TCP
        port: 8080
    endpoints:
      - addresses:
          - "10.244.0.11"
        conditions:
          ready: true
backendTLSPolicies:
  - apiVersion: gateway.networking.k8s.io/v1alpha2
    kind: BackendTLSPolicy
    metadata:
      name: policy-btls
      namespace: default
    spec:
      targetRefs:
        - group: ""
          kind: Service
          name: http-backend
          sectionName: "8080"
      validation:
        wellKnownCACertificates: System
        hostname: example.com
