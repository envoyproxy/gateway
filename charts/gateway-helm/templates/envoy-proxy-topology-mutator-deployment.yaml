{{- if .Values.topologyWebhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: topology-webhook
  namespace: '{{ .Release.Namespace }}'
  labels:
    app.kubernetes.io/component: topology-webhook
  {{- include "eg.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.topologyWebhook.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: topology-webhook
    {{- include "eg.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.topologyWebhook.pod.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: topology-webhook
      {{- include "eg.selectorLabels" . | nindent 8 }}
      {{- with .Values.topologyWebhook.pod.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.topologyWebhook.pod.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: true
      containers:
      - args: ["envoy","topology-webhook"]
        env:
          - name: ENVOY_GATEWAY_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBERNETES_CLUSTER_DOMAIN
            value: {{ .Values.kubernetesClusterDomain }}
        image: {{ include "eg.image" . }}
        imagePullPolicy: {{ include "eg.image.pullPolicy" . }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: envoy-topology-webhook
        ports:
          - containerPort: 8443
            name: webhook
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.topologyWebhook.pod.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.topologyWebhook.pod.securityContext | nindent 10 }}
        volumeMounts:
          - mountPath: /certs
            name: certs
            readOnly: true
      {{- include "eg.image.pullSecrets" . | nindent 6 }}
      {{- with .Values.topologyWebhook.pod.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologyWebhook.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      serviceAccountName: envoy-topology-mutator-webhook
      {{- with .Values.topologyWebhook.pod.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.topologyWebhook.pod.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
        - name: certs
          secret:
            secretName: envoy-gateway
{{- end }}