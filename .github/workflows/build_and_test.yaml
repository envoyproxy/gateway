name: Build and Test
on:
  push:
    branches:
    - "main"
    - "release/v*"
    paths-ignore:
    - "**/*.png"
  pull_request:
    branches:
    - "main"
    - "release/v*"
    paths-ignore:
    - "**/*.png"

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps
    # Generate the installation manifests first, so it can check
    # for errors while running `make -k lint`
    - run: IMAGE_PULL_POLICY=Always make generate-manifests
    - run: make lint-deps
    - run: make -k lint

  gen-check:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps
    - run: make -k gen-check

  license-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps
    - run: make -k licensecheck

  coverage-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read   #  for actions/checkout
      id-token: write  #  for fetching OIDC token
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps

    # test
    - name: Run Coverage Tests
      run: make go.test.coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673  # v4.5.0
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
        name: codecov-envoy-gateway
        verbose: true
        use_oidc: true

  build:
    runs-on: ubuntu-latest
    needs: [lint, gen-check, license-check, coverage-test]
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps

    - name: Build EG Multiarch Binaries
      run: make build-multiarch PLATFORMS="linux_amd64 linux_arm64"

    - name: Upload EG Binaries
      uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b  # v4.3.4
      with:
        name: envoy-gateway
        path: bin/

  conformance-test:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        version: [ v1.27.13, v1.28.9, v1.29.4, v1.30.0 ]
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps

    - name: Download EG Binaries
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: envoy-gateway
        path: bin/

    - name: Give Privileges To EG Binaries
      run: |
        chmod +x bin/linux/amd64/envoy-gateway
        chmod +x bin/linux/arm64/envoy-gateway

    # conformance
    - name: Run Standard Conformance Tests
      env:
        KIND_NODE_TAG: ${{ matrix.version }}
        IMAGE_PULL_POLICY: IfNotPresent
      run: make conformance

  e2e-test:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        version: [ v1.27.13, v1.28.9, v1.29.4, v1.30.0 ]
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps

    - name: Download EG Binaries
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: envoy-gateway
        path: bin/

    - name: Give Privileges To EG Binaries
      run: |
        chmod +x bin/linux/amd64/envoy-gateway
        chmod +x bin/linux/arm64/envoy-gateway

    # E2E
    - name: Run E2E Tests
      env:
        KIND_NODE_TAG: ${{ matrix.version }}
        IMAGE_PULL_POLICY: IfNotPresent
      run: make e2e

  benchmark-test:
    runs-on: ubuntu-latest
    # There's a different workflow for benchmark-test on push.
    if: ${{ ! startsWith(github.event_name, 'push') }}
    needs: [build]
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps

    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@v2

    # Benchmark
    - name: Run Benchmark tests
      env:
        KIND_NODE_TAG: v1.28.9
        IMAGE_PULL_POLICY: IfNotPresent
        # Args for benchmark test
        BENCHMARK_RPS: 10000
        BENCHMARK_CONNECTIONS: 100
        BENCHMARK_DURATION: 30
        BENCHMARK_CPU_LIMITS: 1000m
        BENCHMARK_MEMORY_LIMITS: 2000Mi
        BENCHMARK_REPORT_DIR: benchmark_report
      run: make benchmark

    - name: Read Benchmark report
      run: cat test/benchmark/benchmark_report/benchmark_report.md

  publish:
    runs-on: ubuntu-latest
    needs: [conformance-test, e2e-test]
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
    - uses: ./tools/github-actions/setup-deps

    - name: Download EG Binaries
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: envoy-gateway
        path: bin/

    - name: Give Privileges To EG Binaries
      run: |
        chmod +x bin/linux/amd64/envoy-gateway
        chmod +x bin/linux/arm64/envoy-gateway

    # build and push image
    - name: Login to DockerHub
      if: github.event_name == 'push'
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  # v3.3.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Setup Multiarch Environment
      if: github.event_name == 'push'
      run: make image.multiarch.setup

    - name: Build and Push EG Commit Image
      if: github.event_name == 'push'
      # tag is set to the short SHA of the commit
      run: make image.push.multiarch PLATFORMS="linux_amd64 linux_arm64" IMAGE=envoyproxy/gateway-dev

    - name: Build and Push EG Latest Image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      # tag is set to `latest` when pushing to main branch
      run: make image.push.multiarch TAG=latest PLATFORMS="linux_amd64 linux_arm64" IMAGE=envoyproxy/gateway-dev

    - name: Build and Push EG Latest Helm Chart
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      # use `0.0.0` as the default latest version.
      # use `Always` image pull policy for latest version.
      run: IMAGE_PULL_POLICY=Always OCI_REGISTRY=oci://docker.io/envoyproxy CHART_VERSION=v0.0.0-latest TAG=latest make helm-push
