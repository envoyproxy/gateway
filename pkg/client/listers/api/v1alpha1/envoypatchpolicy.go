// Copyright Envoy Gateway Authors
// SPDX-License-Identifier: Apache-2.0
// The full text of the Apache license is available in the LICENSE file at
// the root of the repo.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/envoyproxy/gateway/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// EnvoyPatchPolicyLister helps list EnvoyPatchPolicies.
// All objects returned here must be treated as read-only.
type EnvoyPatchPolicyLister interface {
	// List lists all EnvoyPatchPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.EnvoyPatchPolicy, err error)
	// EnvoyPatchPolicies returns an object that can list and get EnvoyPatchPolicies.
	EnvoyPatchPolicies(namespace string) EnvoyPatchPolicyNamespaceLister
	EnvoyPatchPolicyListerExpansion
}

// envoyPatchPolicyLister implements the EnvoyPatchPolicyLister interface.
type envoyPatchPolicyLister struct {
	listers.ResourceIndexer[*apiv1alpha1.EnvoyPatchPolicy]
}

// NewEnvoyPatchPolicyLister returns a new EnvoyPatchPolicyLister.
func NewEnvoyPatchPolicyLister(indexer cache.Indexer) EnvoyPatchPolicyLister {
	return &envoyPatchPolicyLister{listers.New[*apiv1alpha1.EnvoyPatchPolicy](indexer, apiv1alpha1.Resource("envoypatchpolicy"))}
}

// EnvoyPatchPolicies returns an object that can list and get EnvoyPatchPolicies.
func (s *envoyPatchPolicyLister) EnvoyPatchPolicies(namespace string) EnvoyPatchPolicyNamespaceLister {
	return envoyPatchPolicyNamespaceLister{listers.NewNamespaced[*apiv1alpha1.EnvoyPatchPolicy](s.ResourceIndexer, namespace)}
}

// EnvoyPatchPolicyNamespaceLister helps list and get EnvoyPatchPolicies.
// All objects returned here must be treated as read-only.
type EnvoyPatchPolicyNamespaceLister interface {
	// List lists all EnvoyPatchPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.EnvoyPatchPolicy, err error)
	// Get retrieves the EnvoyPatchPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.EnvoyPatchPolicy, error)
	EnvoyPatchPolicyNamespaceListerExpansion
}

// envoyPatchPolicyNamespaceLister implements the EnvoyPatchPolicyNamespaceLister
// interface.
type envoyPatchPolicyNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.EnvoyPatchPolicy]
}
