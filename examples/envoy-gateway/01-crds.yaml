---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: envoygatewayconfigurations.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: EnvoyGatewayConfiguration
    listKind: EnvoyGatewayConfigurationList
    plural: envoygatewayconfigurations
    shortNames:
    - envoygatewayconfig
    singular: envoygatewayconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvoyGatewayConfiguration is the schema for an Envoy Gateway
          instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EnvoyGatewayConfigurationSpec represents a configuration
              of an Envoy Gateway controller. It contains most of all the options
              that can be customized, the other remaining options being command line
              flags.
            properties:
              debug:
                description: Debug contains parameters to enable debug logging and
                  debug interfaces inside Contour.
                properties:
                  address:
                    description: "Defines the Contour debug address interface. \n
                      Contour's default is \"127.0.0.1\"."
                    type: string
                  kubernetesLogLevel:
                    description: "KubernetesDebugLogLevel defines the log level which
                      Contour will use when outputting Kubernetes specific log information.
                      \n Details: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/logging.md
                      \n Contour's default is 0."
                    maximum: 9
                    minimum: 0
                    type: integer
                  logLevel:
                    description: "DebugLogLevel defines the log level which Contour
                      will use when outputting log information. \n Contour's default
                      is \"info\"."
                    enum:
                    - info
                    - debug
                    type: string
                  port:
                    description: "Defines the Contour debug address port. \n Contour's
                      default is 6060."
                    type: integer
                type: object
              enableExternalNameService:
                description: "EnableExternalNameService allows processing of ExternalNameServices
                  \n Contour's default is false for security reasons."
                type: boolean
              envoy:
                description: Envoy contains parameters for Envoy as well as how to
                  optionally configure a managed Envoy fleet.
                properties:
                  clientCertificate:
                    description: ClientCertificate defines the namespace/name of the
                      Kubernetes secret containing the client certificate and private
                      key to be used when establishing TLS connection to upstream
                      cluster.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  cluster:
                    description: Cluster holds various configurable Envoy cluster
                      values that can be set in the config file.
                    properties:
                      dnsLookupFamily:
                        description: "DNSLookupFamily defines how external names are
                          looked up When configured as V4, the DNS resolver will only
                          perform a lookup for addresses in the IPv4 family. If V6
                          is configured, the DNS resolver will only perform a lookup
                          for addresses in the IPv6 family. If AUTO is configured,
                          the DNS resolver will first perform a lookup for addresses
                          in the IPv6 family and fallback to a lookup for addresses
                          in the IPv4 family. Note: This only applies to externalName
                          clusters. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto.html#envoy-v3-api-enum-config-cluster-v3-cluster-dnslookupfamily
                          for more information. \n Contour's default is \"auto\"."
                        enum:
                        - auto
                        - v4
                        - v6
                        type: string
                    type: object
                  defaultHTTPVersions:
                    description: "DefaultHTTPVersions defines the default set of HTTPS
                      versions the proxy should accept. HTTP versions are strings
                      of the form \"HTTP/xx\". Supported versions are \"HTTP/1.1\"
                      and \"HTTP/2\". \n Contour's default list is:   - \"HTTP/1.1\"
                      \  - \"HTTP/2\""
                    items:
                      description: HTTPVersionType is the name of a supported HTTP
                        version.
                      enum:
                      - HTTP/1.1
                      - HTTP/2
                      type: string
                    type: array
                  health:
                    description: "Health defines the endpoint Envoy uses to serve
                      health checks. \n Contour's default is { address: \"0.0.0.0\",
                      port: 8002 }."
                    properties:
                      address:
                        description: Defines the health address interface.
                        minLength: 1
                        type: string
                      port:
                        description: Defines the health port.
                        type: integer
                    type: object
                  http:
                    description: "Defines the HTTP Listener for Envoy. \n Contour's
                      default is { address: \"0.0.0.0\", port: 8080, accessLog: \"/dev/stdout\"
                      }."
                    properties:
                      accessLog:
                        description: AccessLog defines where Envoy logs are outputted
                          for this listener.
                        type: string
                      address:
                        description: Defines an Envoy Listener Address.
                        minLength: 1
                        type: string
                      port:
                        description: Defines an Envoy listener Port.
                        type: integer
                    type: object
                  https:
                    description: "Defines the HTTPS Listener for Envoy. \n Contour's
                      default is { address: \"0.0.0.0\", port: 8443, accessLog: \"/dev/stdout\"
                      }."
                    properties:
                      accessLog:
                        description: AccessLog defines where Envoy logs are outputted
                          for this listener.
                        type: string
                      address:
                        description: Defines an Envoy Listener Address.
                        minLength: 1
                        type: string
                      port:
                        description: Defines an Envoy listener Port.
                        type: integer
                    type: object
                  listener:
                    description: Listener hold various configurable Envoy listener
                      values.
                    properties:
                      connectionBalancer:
                        description: ConnectionBalancer. If the value is exact, the
                          listener will use the exact connection balancer See https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto#envoy-api-msg-listener-connectionbalanceconfig
                          for more information.
                        enum:
                        - ""
                        - exact
                        type: string
                      disableAllowChunkedLength:
                        description: "DisableAllowChunkedLength disables the RFC-compliant
                          Envoy behavior to strip the \"Content-Length\" header if
                          \"Transfer-Encoding: chunked\" is also set. This is an emergency
                          off-switch to revert back to Envoy's default behavior in
                          case of failures. Please file an issue if failures are encountered.
                          See: https://github.com/projectcontour/contour/issues/3221
                          \n Contour's default is false."
                        type: boolean
                      disableMergeSlashes:
                        description: "DisableMergeSlashes disables Envoy's non-standard
                          merge_slashes path transformation option which strips duplicate
                          slashes from request URL paths. \n Contour's default is
                          false."
                        type: boolean
                      tls:
                        description: TLS holds various configurable Envoy TLS listener
                          values.
                        properties:
                          cipherSuites:
                            description: "CipherSuites defines the TLS ciphers to
                              be supported by Envoy TLS listeners when negotiating
                              TLS 1.2. Ciphers are validated against the set that
                              Envoy supports by default. This parameter should only
                              be used by advanced users. Note that these will be ignored
                              when TLS 1.3 is in use. \n See: https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto#extensions-transport-sockets-tls-v3-tlsparameters
                              Note: This list is a superset of what is valid for stock
                              Envoy builds and those using BoringSSL FIPS. \n Contour's
                              default list is:   - \"[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]\"
                              \  - \"[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]\"
                              \  - \"ECDHE-ECDSA-AES256-GCM-SHA384\"   - \"ECDHE-RSA-AES256-GCM-SHA384\""
                            items:
                              enum:
                              - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
                              - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
                              - ECDHE-ECDSA-AES128-GCM-SHA256
                              - ECDHE-RSA-AES128-GCM-SHA256
                              - ECDHE-ECDSA-AES128-SHA
                              - ECDHE-RSA-AES128-SHA
                              - AES128-GCM-SHA256
                              - AES128-SHA
                              - ECDHE-ECDSA-AES256-GCM-SHA384
                              - ECDHE-RSA-AES256-GCM-SHA384
                              - ECDHE-ECDSA-AES256-SHA
                              - ECDHE-RSA-AES256-SHA
                              - AES256-GCM-SHA384
                              - AES256-SHA
                              type: string
                            type: array
                          minimumProtocolVersion:
                            description: "MinimumProtocolVersion is the minimum TLS
                              version this vhost should negotiate. Valid options are
                              `1.2` (default) and `1.3`. \n Contour's default is \"1.2\"."
                            enum:
                            - "1.2"
                            - "1.3"
                            type: string
                        type: object
                      useProxyProtocol:
                        description: "Use PROXY protocol for all listeners. \n Contour's
                          default is false."
                        type: boolean
                    type: object
                  logging:
                    description: Logging defines how Envoy's logs can be configured.
                    properties:
                      accessLogFormat:
                        description: "AccessLogFormat sets the global access log format.
                          Valid options are 'envoy' or 'json' \n Contour's default
                          is \"envoy\"."
                        enum:
                        - envoy
                        - json
                        type: string
                      accessLogFormatString:
                        description: AccessLogFormatString sets the access log format
                          when format is set to `envoy`. When empty, Envoy's default
                          format is used.
                        type: string
                      accessLogLevel:
                        description: "AccessLogLevel sets the verbosity level of the
                          access log. Valid options are `info`, `error` and `disabled`.
                          \n Contour's default is \"info\", meaning all requests are
                          logged.."
                        enum:
                        - info
                        - error
                        - disabled
                        type: string
                      jsonFields:
                        description: AccessLogFields sets the fields that JSON logging
                          will output when AccessLogFormat is json.
                        items:
                          type: string
                        type: array
                    type: object
                  metrics:
                    description: "Metrics defines the endpoint Envoy uses to serve
                      metrics. \n Contour's default is { address: \"0.0.0.0\", port:
                      8002 }."
                    properties:
                      address:
                        description: Defines the metrics address interface.
                        maxLength: 253
                        minLength: 1
                        type: string
                      port:
                        description: Defines the metrics port.
                        type: integer
                      tls:
                        description: TLS holds TLS file config details. Metrics and
                          health endpoints cannot have same port number when metrics
                          is served over HTTPS.
                        properties:
                          caFile:
                            description: CA filename.
                            type: string
                          certFile:
                            description: Client certificate filename.
                            type: string
                          keyFile:
                            description: Client key filename.
                            type: string
                        type: object
                    type: object
                  network:
                    description: Network holds various configurable Envoy network
                      values.
                    properties:
                      adminPort:
                        description: "Configure the port used to access the Envoy
                          Admin interface. If configured to port \"0\" then the admin
                          interface is disabled. \n Contour's default is 9001."
                        type: integer
                      numTrustedHops:
                        description: "XffNumTrustedHops defines the number of additional
                          ingress proxy hops from the right side of the x-forwarded-for
                          HTTP header to trust when determining the origin client’s
                          IP address. \n See https://www.envoyproxy.io/docs/envoy/v1.17.0/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto?highlight=xff_num_trusted_hops
                          for more information. \n Contour's default is 0."
                        format: int32
                        type: integer
                    type: object
                  service:
                    description: "Service holds Envoy service parameters for setting
                      Ingress status. \n Contour's default is { namespace: \"projectcontour\",
                      name: \"envoy\" }."
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  timeouts:
                    description: Timeouts holds various configurable timeouts that
                      can be set in the config file.
                    properties:
                      connectTimeout:
                        description: "ConnectTimeout defines how long the proxy should
                          wait when establishing connection to upstream service. If
                          not set, a default value of 2 seconds will be used. \n See
                          https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#envoy-v3-api-field-config-cluster-v3-cluster-connect-timeout
                          for more information."
                        type: string
                      connectionIdleTimeout:
                        description: "ConnectionIdleTimeout defines how long the proxy
                          should wait while there are no active requests (for HTTP/1.1)
                          or streams (for HTTP/2) before terminating an HTTP connection.
                          Set to \"infinity\" to disable the timeout entirely. \n
                          See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-idle-timeout
                          for more information."
                        type: string
                      connectionShutdownGracePeriod:
                        description: "ConnectionShutdownGracePeriod defines how long
                          the proxy will wait between sending an initial GOAWAY frame
                          and a second, final GOAWAY frame when terminating an HTTP/2
                          connection. During this grace period, the proxy will continue
                          to respond to new streams. After the final GOAWAY frame
                          has been sent, the proxy will refuse new streams. \n See
                          https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-drain-timeout
                          for more information."
                        type: string
                      delayedCloseTimeout:
                        description: "DelayedCloseTimeout defines how long envoy will
                          wait, once connection close processing has been initiated,
                          for the downstream peer to close the connection before Envoy
                          closes the socket associated with the connection. \n Setting
                          this timeout to 'infinity' will disable it, equivalent to
                          setting it to '0' in Envoy. Leaving it unset will result
                          in the Envoy default value being used. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-delayed-close-timeout
                          for more information."
                        type: string
                      maxConnectionDuration:
                        description: "MaxConnectionDuration defines the maximum period
                          of time after an HTTP connection has been established from
                          the client to the proxy before it is closed by the proxy,
                          regardless of whether there has been activity or not. Omit
                          or set to \"infinity\" for no max duration. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-max-connection-duration
                          for more information."
                        type: string
                      requestTimeout:
                        description: "RequestTimeout sets the client request timeout
                          globally for Contour. Note that this is a timeout for the
                          entire request, not an idle timeout. Omit or set to \"infinity\"
                          to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-request-timeout
                          for more information."
                        type: string
                      streamIdleTimeout:
                        description: "StreamIdleTimeout defines how long the proxy
                          should wait while there is no request activity (for HTTP/1.1)
                          or stream activity (for HTTP/2) before terminating the HTTP
                          request or stream. Set to \"infinity\" to disable the timeout
                          entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-stream-idle-timeout
                          for more information."
                        type: string
                    type: object
                type: object
              gateway:
                description: Gateway contains parameters for the gateway-api Gateway
                  that Contour is configured to serve traffic.
                properties:
                  controllerName:
                    description: ControllerName is used to determine whether Contour
                      should reconcile a GatewayClass. The string takes the form of
                      "projectcontour.io/<namespace>/contour". If unset, the gatewayclass
                      controller will not be started. Exactly one of ControllerName
                      or GatewayRef must be set.
                    type: string
                  gatewayRef:
                    description: GatewayRef defines a specific Gateway that this Contour
                      instance corresponds to. If set, Contour will reconcile only
                      this gateway, and will not reconcile any gateway classes. Exactly
                      one of ControllerName or GatewayRef must be set.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
              health:
                description: "Health defines the endpoints Contour uses to serve health
                  checks. \n Contour's default is { address: \"0.0.0.0\", port: 8000
                  }."
                properties:
                  address:
                    description: Defines the health address interface.
                    minLength: 1
                    type: string
                  port:
                    description: Defines the health port.
                    type: integer
                type: object
              httpproxy:
                description: HTTPProxy defines parameters on HTTPProxy.
                properties:
                  disablePermitInsecure:
                    description: "DisablePermitInsecure disables the use of the permitInsecure
                      field in HTTPProxy. \n Contour's default is false."
                    type: boolean
                  fallbackCertificate:
                    description: FallbackCertificate defines the namespace/name of
                      the Kubernetes secret to use as fallback when a non-SNI request
                      is received.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  rootNamespaces:
                    description: Restrict Contour to searching these namespaces for
                      root ingress routes.
                    items:
                      type: string
                    type: array
                type: object
              ingress:
                description: Ingress contains parameters for ingress options.
                properties:
                  classNames:
                    description: Ingress Class Names Contour should use.
                    items:
                      type: string
                    type: array
                  statusAddress:
                    description: Address to set in Ingress object status.
                    type: string
                type: object
              metrics:
                description: "Metrics defines the endpoint Contour uses to serve metrics.
                  \n Contour's default is { address: \"0.0.0.0\", port: 8000 }."
                properties:
                  address:
                    description: Defines the metrics address interface.
                    maxLength: 253
                    minLength: 1
                    type: string
                  port:
                    description: Defines the metrics port.
                    type: integer
                  tls:
                    description: TLS holds TLS file config details. Metrics and health
                      endpoints cannot have same port number when metrics is served
                      over HTTPS.
                    properties:
                      caFile:
                        description: CA filename.
                        type: string
                      certFile:
                        description: Client certificate filename.
                        type: string
                      keyFile:
                        description: Client key filename.
                        type: string
                    type: object
                type: object
              policy:
                description: Policy specifies default policy applied if not overridden
                  by the user
                properties:
                  applyToIngress:
                    description: "ApplyToIngress determines if the Policies will apply
                      to ingress objects \n Contour's default is false."
                    type: boolean
                  requestHeaders:
                    description: RequestHeadersPolicy defines the request headers
                      set/removed on all routes
                    properties:
                      remove:
                        items:
                          type: string
                        type: array
                      set:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  responseHeaders:
                    description: ResponseHeadersPolicy defines the response headers
                      set/removed on all routes
                    properties:
                      remove:
                        items:
                          type: string
                        type: array
                      set:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              rateLimitService:
                description: RateLimitService optionally holds properties of the Rate
                  Limit Service to be used for global rate limiting.
                properties:
                  domain:
                    description: Domain is passed to the Rate Limit Service.
                    type: string
                  enableXRateLimitHeaders:
                    description: "EnableXRateLimitHeaders defines whether to include
                      the X-RateLimit headers X-RateLimit-Limit, X-RateLimit-Remaining,
                      and X-RateLimit-Reset (as defined by the IETF Internet-Draft
                      linked below), on responses to clients when the Rate Limit Service
                      is consulted for a request. \n ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html"
                    type: boolean
                  extensionService:
                    description: ExtensionService identifies the extension service
                      defining the RLS.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  failOpen:
                    description: FailOpen defines whether to allow requests to proceed
                      when the Rate Limit Service fails to respond with a valid rate
                      limit decision within the timeout defined on the extension service.
                    type: boolean
                required:
                - extensionService
                type: object
              xdsServer:
                description: XDSServer contains parameters for the xDS server.
                properties:
                  address:
                    description: "Defines the xDS gRPC API address which Contour will
                      serve. \n Contour's default is \"0.0.0.0\"."
                    minLength: 1
                    type: string
                  port:
                    description: "Defines the xDS gRPC API port which Contour will
                      serve. \n Contour's default is 8001."
                    type: integer
                  tls:
                    description: "TLS holds TLS file config details. \n Contour's
                      default is { caFile: \"/certs/ca.crt\", certFile: \"/certs/tls.cert\",
                      keyFile: \"/certs/tls.key\", insecure: false }."
                    properties:
                      caFile:
                        description: CA filename.
                        type: string
                      certFile:
                        description: Client certificate filename.
                        type: string
                      insecure:
                        description: Allow serving the xDS gRPC API without TLS.
                        type: boolean
                      keyFile:
                        description: Client key filename.
                        type: string
                    type: object
                  type:
                    description: "Defines the XDSServer to use for `contour serve`.
                      \n Contour's default is \"contour\"."
                    type: string
                type: object
            type: object
          status:
            description: EnvoyGatewayConfigurationStatus defines the observed state
              of a ContourConfiguration resource.
            properties:
              conditions:
                description: "Conditions contains the current status of the Contour
                  resource. \n Contour will update a single condition, `Valid`, that
                  is in normal-true polarity. \n Contour will not modify any other
                  Conditions set in this block, in case some other controller wants
                  to add a Condition."
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: envoygatewaydeployments.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: EnvoyGatewayDeployment
    listKind: EnvoyGatewayDeploymentList
    plural: envoygatewaydeployments
    shortNames:
    - contourdeploy
    singular: envoygatewaydeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvoyGatewayDeployment is the schema for a Contour Deployment.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EnvoyGatewayDeploymentSpec specifies options for how a Contour
              instance should be provisioned.
            properties:
              controlPlane:
                description: ControlPlane specifies deployment-time settings for the
                  ControlPlane part of the installation, i.e. the xDS server/control
                  plane and associated resources, including things like replica count
                  for the Deployment, and node placement constraints for the pods.
                properties:
                  nodePlacement:
                    description: NodePlacement describes node scheduling configuration
                      of Contour pods.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: "NodeSelector is the simplest recommended form
                          of node selection constraint and specifies a map of key-value
                          pairs. For the pod to be eligible to run on a node, the
                          node must have each of the indicated key-value pairs as
                          labels (it can have additional labels as well). \n If unset,
                          the pod(s) will be scheduled to any available node."
                        type: object
                      tolerations:
                        description: "Tolerations work with taints to ensure that
                          pods are not scheduled onto inappropriate nodes. One or
                          more taints are applied to a node; this marks that the node
                          should not accept any pods that do not tolerate the taints.
                          \n The default is an empty list. \n See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                          for additional details."
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  replicas:
                    description: Replicas is the desired number of Contour replicas.
                      If unset, defaults to 2.
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              dataPlane:
                description: DataPlane specifies deployment-time settings for the
                  DataPlane part of the installation, i.e. the xDS client/data plane
                  and associated resources, including things like the workload type
                  to use (DaemonSet or Deployment), node placement constraints for
                  the pods, and various options for the DataPlane service.
                properties:
                  networkPublishing:
                    description: NetworkPublishing defines how to expose Envoy to
                      a network.
                    properties:
                      serviceAnnotations:
                        additionalProperties:
                          type: string
                        description: ServiceAnnotations is the annotations to add
                          to the provisioned Envoy service.
                        type: object
                      type:
                        description: "NetworkPublishingType is the type of publishing
                          strategy to use. Valid values are: \n * LoadBalancerService
                          \n In this configuration, network endpoints for Envoy use
                          container networking. A Kubernetes LoadBalancer Service
                          is created to publish Envoy network endpoints. \n See: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                          \n * NodePortService \n Publishes Envoy network endpoints
                          using a Kubernetes NodePort Service. \n In this configuration,
                          Envoy network endpoints use container networking. A Kubernetes
                          NodePort Service is created to publish the network endpoints.
                          \n See: https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
                          \n * ClusterIPService \n Publishes Envoy network endpoints
                          using a Kubernetes ClusterIP Service. \n In this configuration,
                          Envoy network endpoints use container networking. A Kubernetes
                          ClusterIP Service is created to publish the network endpoints.
                          \n See: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                          \n If unset, defaults to LoadBalancerService."
                        type: string
                    type: object
                  nodePlacement:
                    description: NodePlacement describes node scheduling configuration
                      of Envoy pods.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: "NodeSelector is the simplest recommended form
                          of node selection constraint and specifies a map of key-value
                          pairs. For the pod to be eligible to run on a node, the
                          node must have each of the indicated key-value pairs as
                          labels (it can have additional labels as well). \n If unset,
                          the pod(s) will be scheduled to any available node."
                        type: object
                      tolerations:
                        description: "Tolerations work with taints to ensure that
                          pods are not scheduled onto inappropriate nodes. One or
                          more taints are applied to a node; this marks that the node
                          should not accept any pods that do not tolerate the taints.
                          \n The default is an empty list. \n See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                          for additional details."
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  replicas:
                    description: Replicas is the desired number of Envoy replicas.
                      If WorkloadType is not "Deployment", this field is ignored.
                      Otherwise, if unset, defaults to 2.
                    format: int32
                    minimum: 0
                    type: integer
                  workloadType:
                    description: WorkloadType is the type of workload to install Envoy
                      as. Choices are DaemonSet and Deployment. If unset, defaults
                      to DaemonSet.
                    type: string
                type: object
              runtimeSettings:
                description: RuntimeSettings is a ContourConfiguration spec to be
                  used when provisioning a Contour instance that will influence aspects
                  of the Contour instance's runtime behavior.
                properties:
                  debug:
                    description: Debug contains parameters to enable debug logging
                      and debug interfaces inside Contour.
                    properties:
                      address:
                        description: "Defines the Contour debug address interface.
                          \n Contour's default is \"127.0.0.1\"."
                        type: string
                      kubernetesLogLevel:
                        description: "KubernetesDebugLogLevel defines the log level
                          which Contour will use when outputting Kubernetes specific
                          log information. \n Details: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/logging.md
                          \n Contour's default is 0."
                        maximum: 9
                        minimum: 0
                        type: integer
                      logLevel:
                        description: "DebugLogLevel defines the log level which Contour
                          will use when outputting log information. \n Contour's default
                          is \"info\"."
                        enum:
                        - info
                        - debug
                        type: string
                      port:
                        description: "Defines the Contour debug address port. \n Contour's
                          default is 6060."
                        type: integer
                    type: object
                  enableExternalNameService:
                    description: "EnableExternalNameService allows processing of ExternalNameServices
                      \n Contour's default is false for security reasons."
                    type: boolean
                  envoy:
                    description: Envoy contains parameters for Envoy as well as how
                      to optionally configure a managed Envoy fleet.
                    properties:
                      clientCertificate:
                        description: ClientCertificate defines the namespace/name
                          of the Kubernetes secret containing the client certificate
                          and private key to be used when establishing TLS connection
                          to upstream cluster.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      cluster:
                        description: Cluster holds various configurable Envoy cluster
                          values that can be set in the config file.
                        properties:
                          dnsLookupFamily:
                            description: "DNSLookupFamily defines how external names
                              are looked up When configured as V4, the DNS resolver
                              will only perform a lookup for addresses in the IPv4
                              family. If V6 is configured, the DNS resolver will only
                              perform a lookup for addresses in the IPv6 family. If
                              AUTO is configured, the DNS resolver will first perform
                              a lookup for addresses in the IPv6 family and fallback
                              to a lookup for addresses in the IPv4 family. Note:
                              This only applies to externalName clusters. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto.html#envoy-v3-api-enum-config-cluster-v3-cluster-dnslookupfamily
                              for more information. \n Contour's default is \"auto\"."
                            enum:
                            - auto
                            - v4
                            - v6
                            type: string
                        type: object
                      defaultHTTPVersions:
                        description: "DefaultHTTPVersions defines the default set
                          of HTTPS versions the proxy should accept. HTTP versions
                          are strings of the form \"HTTP/xx\". Supported versions
                          are \"HTTP/1.1\" and \"HTTP/2\". \n Contour's default list
                          is:   - \"HTTP/1.1\"   - \"HTTP/2\""
                        items:
                          description: HTTPVersionType is the name of a supported
                            HTTP version.
                          enum:
                          - HTTP/1.1
                          - HTTP/2
                          type: string
                        type: array
                      health:
                        description: "Health defines the endpoint Envoy uses to serve
                          health checks. \n Contour's default is { address: \"0.0.0.0\",
                          port: 8002 }."
                        properties:
                          address:
                            description: Defines the health address interface.
                            minLength: 1
                            type: string
                          port:
                            description: Defines the health port.
                            type: integer
                        type: object
                      http:
                        description: "Defines the HTTP Listener for Envoy. \n Contour's
                          default is { address: \"0.0.0.0\", port: 8080, accessLog:
                          \"/dev/stdout\" }."
                        properties:
                          accessLog:
                            description: AccessLog defines where Envoy logs are outputted
                              for this listener.
                            type: string
                          address:
                            description: Defines an Envoy Listener Address.
                            minLength: 1
                            type: string
                          port:
                            description: Defines an Envoy listener Port.
                            type: integer
                        type: object
                      https:
                        description: "Defines the HTTPS Listener for Envoy. \n Contour's
                          default is { address: \"0.0.0.0\", port: 8443, accessLog:
                          \"/dev/stdout\" }."
                        properties:
                          accessLog:
                            description: AccessLog defines where Envoy logs are outputted
                              for this listener.
                            type: string
                          address:
                            description: Defines an Envoy Listener Address.
                            minLength: 1
                            type: string
                          port:
                            description: Defines an Envoy listener Port.
                            type: integer
                        type: object
                      listener:
                        description: Listener hold various configurable Envoy listener
                          values.
                        properties:
                          connectionBalancer:
                            description: ConnectionBalancer. If the value is exact,
                              the listener will use the exact connection balancer
                              See https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto#envoy-api-msg-listener-connectionbalanceconfig
                              for more information.
                            enum:
                            - ""
                            - exact
                            type: string
                          disableAllowChunkedLength:
                            description: "DisableAllowChunkedLength disables the RFC-compliant
                              Envoy behavior to strip the \"Content-Length\" header
                              if \"Transfer-Encoding: chunked\" is also set. This
                              is an emergency off-switch to revert back to Envoy's
                              default behavior in case of failures. Please file an
                              issue if failures are encountered. See: https://github.com/projectcontour/contour/issues/3221
                              \n Contour's default is false."
                            type: boolean
                          disableMergeSlashes:
                            description: "DisableMergeSlashes disables Envoy's non-standard
                              merge_slashes path transformation option which strips
                              duplicate slashes from request URL paths. \n Contour's
                              default is false."
                            type: boolean
                          tls:
                            description: TLS holds various configurable Envoy TLS
                              listener values.
                            properties:
                              cipherSuites:
                                description: "CipherSuites defines the TLS ciphers
                                  to be supported by Envoy TLS listeners when negotiating
                                  TLS 1.2. Ciphers are validated against the set that
                                  Envoy supports by default. This parameter should
                                  only be used by advanced users. Note that these
                                  will be ignored when TLS 1.3 is in use. \n See:
                                  https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto#extensions-transport-sockets-tls-v3-tlsparameters
                                  Note: This list is a superset of what is valid for
                                  stock Envoy builds and those using BoringSSL FIPS.
                                  \n Contour's default list is:   - \"[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]\"
                                  \  - \"[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]\"
                                  \  - \"ECDHE-ECDSA-AES256-GCM-SHA384\"   - \"ECDHE-RSA-AES256-GCM-SHA384\""
                                items:
                                  enum:
                                  - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
                                  - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
                                  - ECDHE-ECDSA-AES128-GCM-SHA256
                                  - ECDHE-RSA-AES128-GCM-SHA256
                                  - ECDHE-ECDSA-AES128-SHA
                                  - ECDHE-RSA-AES128-SHA
                                  - AES128-GCM-SHA256
                                  - AES128-SHA
                                  - ECDHE-ECDSA-AES256-GCM-SHA384
                                  - ECDHE-RSA-AES256-GCM-SHA384
                                  - ECDHE-ECDSA-AES256-SHA
                                  - ECDHE-RSA-AES256-SHA
                                  - AES256-GCM-SHA384
                                  - AES256-SHA
                                  type: string
                                type: array
                              minimumProtocolVersion:
                                description: "MinimumProtocolVersion is the minimum
                                  TLS version this vhost should negotiate. Valid options
                                  are `1.2` (default) and `1.3`. \n Contour's default
                                  is \"1.2\"."
                                enum:
                                - "1.2"
                                - "1.3"
                                type: string
                            type: object
                          useProxyProtocol:
                            description: "Use PROXY protocol for all listeners. \n
                              Contour's default is false."
                            type: boolean
                        type: object
                      logging:
                        description: Logging defines how Envoy's logs can be configured.
                        properties:
                          accessLogFormat:
                            description: "AccessLogFormat sets the global access log
                              format. Valid options are 'envoy' or 'json' \n Contour's
                              default is \"envoy\"."
                            enum:
                            - envoy
                            - json
                            type: string
                          accessLogFormatString:
                            description: AccessLogFormatString sets the access log
                              format when format is set to `envoy`. When empty, Envoy's
                              default format is used.
                            type: string
                          accessLogLevel:
                            description: "AccessLogLevel sets the verbosity level
                              of the access log. Valid options are `info`, `error`
                              and `disabled`. \n Contour's default is \"info\", meaning
                              all requests are logged.."
                            enum:
                            - info
                            - error
                            - disabled
                            type: string
                          jsonFields:
                            description: AccessLogFields sets the fields that JSON
                              logging will output when AccessLogFormat is json.
                            items:
                              type: string
                            type: array
                        type: object
                      metrics:
                        description: "Metrics defines the endpoint Envoy uses to serve
                          metrics. \n Contour's default is { address: \"0.0.0.0\",
                          port: 8002 }."
                        properties:
                          address:
                            description: Defines the metrics address interface.
                            maxLength: 253
                            minLength: 1
                            type: string
                          port:
                            description: Defines the metrics port.
                            type: integer
                          tls:
                            description: TLS holds TLS file config details. Metrics
                              and health endpoints cannot have same port number when
                              metrics is served over HTTPS.
                            properties:
                              caFile:
                                description: CA filename.
                                type: string
                              certFile:
                                description: Client certificate filename.
                                type: string
                              keyFile:
                                description: Client key filename.
                                type: string
                            type: object
                        type: object
                      network:
                        description: Network holds various configurable Envoy network
                          values.
                        properties:
                          adminPort:
                            description: "Configure the port used to access the Envoy
                              Admin interface. If configured to port \"0\" then the
                              admin interface is disabled. \n Contour's default is
                              9001."
                            type: integer
                          numTrustedHops:
                            description: "XffNumTrustedHops defines the number of
                              additional ingress proxy hops from the right side of
                              the x-forwarded-for HTTP header to trust when determining
                              the origin client’s IP address. \n See https://www.envoyproxy.io/docs/envoy/v1.17.0/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto?highlight=xff_num_trusted_hops
                              for more information. \n Contour's default is 0."
                            format: int32
                            type: integer
                        type: object
                      service:
                        description: "Service holds Envoy service parameters for setting
                          Ingress status. \n Contour's default is { namespace: \"projectcontour\",
                          name: \"envoy\" }."
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      timeouts:
                        description: Timeouts holds various configurable timeouts
                          that can be set in the config file.
                        properties:
                          connectTimeout:
                            description: "ConnectTimeout defines how long the proxy
                              should wait when establishing connection to upstream
                              service. If not set, a default value of 2 seconds will
                              be used. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#envoy-v3-api-field-config-cluster-v3-cluster-connect-timeout
                              for more information."
                            type: string
                          connectionIdleTimeout:
                            description: "ConnectionIdleTimeout defines how long the
                              proxy should wait while there are no active requests
                              (for HTTP/1.1) or streams (for HTTP/2) before terminating
                              an HTTP connection. Set to \"infinity\" to disable the
                              timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-idle-timeout
                              for more information."
                            type: string
                          connectionShutdownGracePeriod:
                            description: "ConnectionShutdownGracePeriod defines how
                              long the proxy will wait between sending an initial
                              GOAWAY frame and a second, final GOAWAY frame when terminating
                              an HTTP/2 connection. During this grace period, the
                              proxy will continue to respond to new streams. After
                              the final GOAWAY frame has been sent, the proxy will
                              refuse new streams. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-drain-timeout
                              for more information."
                            type: string
                          delayedCloseTimeout:
                            description: "DelayedCloseTimeout defines how long envoy
                              will wait, once connection close processing has been
                              initiated, for the downstream peer to close the connection
                              before Envoy closes the socket associated with the connection.
                              \n Setting this timeout to 'infinity' will disable it,
                              equivalent to setting it to '0' in Envoy. Leaving it
                              unset will result in the Envoy default value being used.
                              \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-delayed-close-timeout
                              for more information."
                            type: string
                          maxConnectionDuration:
                            description: "MaxConnectionDuration defines the maximum
                              period of time after an HTTP connection has been established
                              from the client to the proxy before it is closed by
                              the proxy, regardless of whether there has been activity
                              or not. Omit or set to \"infinity\" for no max duration.
                              \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-max-connection-duration
                              for more information."
                            type: string
                          requestTimeout:
                            description: "RequestTimeout sets the client request timeout
                              globally for Contour. Note that this is a timeout for
                              the entire request, not an idle timeout. Omit or set
                              to \"infinity\" to disable the timeout entirely. \n
                              See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-request-timeout
                              for more information."
                            type: string
                          streamIdleTimeout:
                            description: "StreamIdleTimeout defines how long the proxy
                              should wait while there is no request activity (for
                              HTTP/1.1) or stream activity (for HTTP/2) before terminating
                              the HTTP request or stream. Set to \"infinity\" to disable
                              the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-stream-idle-timeout
                              for more information."
                            type: string
                        type: object
                    type: object
                  gateway:
                    description: Gateway contains parameters for the gateway-api Gateway
                      that Contour is configured to serve traffic.
                    properties:
                      controllerName:
                        description: ControllerName is used to determine whether Contour
                          should reconcile a GatewayClass. The string takes the form
                          of "projectcontour.io/<namespace>/contour". If unset, the
                          gatewayclass controller will not be started. Exactly one
                          of ControllerName or GatewayRef must be set.
                        type: string
                      gatewayRef:
                        description: GatewayRef defines a specific Gateway that this
                          Contour instance corresponds to. If set, Contour will reconcile
                          only this gateway, and will not reconcile any gateway classes.
                          Exactly one of ControllerName or GatewayRef must be set.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                    type: object
                  health:
                    description: "Health defines the endpoints Contour uses to serve
                      health checks. \n Contour's default is { address: \"0.0.0.0\",
                      port: 8000 }."
                    properties:
                      address:
                        description: Defines the health address interface.
                        minLength: 1
                        type: string
                      port:
                        description: Defines the health port.
                        type: integer
                    type: object
                  httpproxy:
                    description: HTTPProxy defines parameters on HTTPProxy.
                    properties:
                      disablePermitInsecure:
                        description: "DisablePermitInsecure disables the use of the
                          permitInsecure field in HTTPProxy. \n Contour's default
                          is false."
                        type: boolean
                      fallbackCertificate:
                        description: FallbackCertificate defines the namespace/name
                          of the Kubernetes secret to use as fallback when a non-SNI
                          request is received.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      rootNamespaces:
                        description: Restrict Contour to searching these namespaces
                          for root ingress routes.
                        items:
                          type: string
                        type: array
                    type: object
                  ingress:
                    description: Ingress contains parameters for ingress options.
                    properties:
                      classNames:
                        description: Ingress Class Names Contour should use.
                        items:
                          type: string
                        type: array
                      statusAddress:
                        description: Address to set in Ingress object status.
                        type: string
                    type: object
                  metrics:
                    description: "Metrics defines the endpoint Contour uses to serve
                      metrics. \n Contour's default is { address: \"0.0.0.0\", port:
                      8000 }."
                    properties:
                      address:
                        description: Defines the metrics address interface.
                        maxLength: 253
                        minLength: 1
                        type: string
                      port:
                        description: Defines the metrics port.
                        type: integer
                      tls:
                        description: TLS holds TLS file config details. Metrics and
                          health endpoints cannot have same port number when metrics
                          is served over HTTPS.
                        properties:
                          caFile:
                            description: CA filename.
                            type: string
                          certFile:
                            description: Client certificate filename.
                            type: string
                          keyFile:
                            description: Client key filename.
                            type: string
                        type: object
                    type: object
                  policy:
                    description: Policy specifies default policy applied if not overridden
                      by the user
                    properties:
                      applyToIngress:
                        description: "ApplyToIngress determines if the Policies will
                          apply to ingress objects \n Contour's default is false."
                        type: boolean
                      requestHeaders:
                        description: RequestHeadersPolicy defines the request headers
                          set/removed on all routes
                        properties:
                          remove:
                            items:
                              type: string
                            type: array
                          set:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      responseHeaders:
                        description: ResponseHeadersPolicy defines the response headers
                          set/removed on all routes
                        properties:
                          remove:
                            items:
                              type: string
                            type: array
                          set:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                    type: object
                  rateLimitService:
                    description: RateLimitService optionally holds properties of the
                      Rate Limit Service to be used for global rate limiting.
                    properties:
                      domain:
                        description: Domain is passed to the Rate Limit Service.
                        type: string
                      enableXRateLimitHeaders:
                        description: "EnableXRateLimitHeaders defines whether to include
                          the X-RateLimit headers X-RateLimit-Limit, X-RateLimit-Remaining,
                          and X-RateLimit-Reset (as defined by the IETF Internet-Draft
                          linked below), on responses to clients when the Rate Limit
                          Service is consulted for a request. \n ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html"
                        type: boolean
                      extensionService:
                        description: ExtensionService identifies the extension service
                          defining the RLS.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      failOpen:
                        description: FailOpen defines whether to allow requests to
                          proceed when the Rate Limit Service fails to respond with
                          a valid rate limit decision within the timeout defined on
                          the extension service.
                        type: boolean
                    required:
                    - extensionService
                    type: object
                  xdsServer:
                    description: XDSServer contains parameters for the xDS server.
                    properties:
                      address:
                        description: "Defines the xDS gRPC API address which Contour
                          will serve. \n Contour's default is \"0.0.0.0\"."
                        minLength: 1
                        type: string
                      port:
                        description: "Defines the xDS gRPC API port which Contour
                          will serve. \n Contour's default is 8001."
                        type: integer
                      tls:
                        description: "TLS holds TLS file config details. \n Contour's
                          default is { caFile: \"/certs/ca.crt\", certFile: \"/certs/tls.cert\",
                          keyFile: \"/certs/tls.key\", insecure: false }."
                        properties:
                          caFile:
                            description: CA filename.
                            type: string
                          certFile:
                            description: Client certificate filename.
                            type: string
                          insecure:
                            description: Allow serving the xDS gRPC API without TLS.
                            type: boolean
                          keyFile:
                            description: Client key filename.
                            type: string
                        type: object
                      type:
                        description: "Defines the XDSServer to use for `contour serve`.
                          \n Contour's default is \"contour\"."
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: EnvoyGatewayDeploymentStatus defines the observed state of
              a ContourDeployment resource.
            properties:
              conditions:
                description: Conditions describe the current conditions of the ContourDeployment
                  resource.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
